{"version":3,"file":"ui.57a5733351660e1c32f9.bundle.js","mappings":"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","sources":["webpack://webao/./node_modules/golden-layout/dist/esm/ts/errors/internal-error.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/utils/config-minifier.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/utils/style-constants.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/utils/types.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/config/resolved-config.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/utils/i18n-strings.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/utils/utils.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/errors/external-error.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/config/config.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/utils/event-emitter.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/controls/browser-popout.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/controls/header-button.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/utils/drag-listener.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/controls/tab.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/controls/tabs-container.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/controls/header.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/utils/jquery-legacy.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/container/component-container.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/items/content-item.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/items/component-item.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/items/component-parentable-item.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/items/stack.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/controls/drag-proxy.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/controls/splitter.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/items/row-or-column.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/items/ground-item.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/controls/drag-source.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/controls/drop-target-indicator.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/controls/transition-indicator.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/utils/event-hub.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/layout-manager.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/virtual-layout.js","webpack://webao/./webAO/ui.js","webpack://webao/./node_modules/golden-layout/dist/esm/ts/golden-layout.js"],"sourcesContent":["/** @internal */\nclass InternalError extends Error {\n    constructor(type, code, message) {\n        super(`${type}: ${code}${message === undefined ? '' : ': ' + message}`);\n    }\n}\n/** @internal */\nexport class AssertError extends InternalError {\n    constructor(code, message) {\n        super('Assert', code, message);\n    }\n}\n/** @internal */\nexport class UnreachableCaseError extends InternalError {\n    constructor(code, variableValue, message) {\n        super('UnreachableCase', code, `${variableValue}${message === undefined ? '' : ': ' + message}`);\n    }\n}\n/** @internal */\nexport class UnexpectedNullError extends InternalError {\n    constructor(code, message) {\n        super('UnexpectedNull', code, message);\n    }\n}\n/** @internal */\nexport class UnexpectedUndefinedError extends InternalError {\n    constructor(code, message) {\n        super('UnexpectedUndefined', code, message);\n    }\n}\n//# sourceMappingURL=internal-error.js.map","/**\n * Minifies and unminifies configs by replacing frequent keys\n * and values with one letter substitutes. Config options must\n * retain array position/index, add new options at the end.\n * @internal\n*/\nexport var ConfigMinifier;\n(function (ConfigMinifier) {\n    const keys = [\n        'settings',\n        'hasHeaders',\n        'constrainDragToContainer',\n        'selectionEnabled',\n        'dimensions',\n        'borderWidth',\n        'minItemHeight',\n        'minItemWidth',\n        'headerHeight',\n        'dragProxyWidth',\n        'dragProxyHeight',\n        'labels',\n        'close',\n        'maximise',\n        'minimise',\n        'popout',\n        'content',\n        'componentType',\n        'componentState',\n        'id',\n        'width',\n        'type',\n        'height',\n        'isClosable',\n        'title',\n        'popoutWholeStack',\n        'openPopouts',\n        'parentId',\n        'activeItemIndex',\n        'reorderEnabled',\n        'borderGrabWidth',\n        //Maximum 36 entries, do not cross this line!\n    ];\n    const values = [\n        true,\n        false,\n        'row',\n        'column',\n        'stack',\n        'component',\n        'close',\n        'maximise',\n        'minimise',\n        'open in new window'\n    ];\n    function checkInitialise() {\n        if (keys.length > 36) {\n            throw new Error('Too many keys in config minifier map');\n        }\n    }\n    ConfigMinifier.checkInitialise = checkInitialise;\n    function translateObject(from, minify) {\n        const to = {};\n        for (const key in from) {\n            if (from.hasOwnProperty(key)) { // In case something has extended Object prototypes\n                let translatedKey;\n                if (minify) {\n                    translatedKey = minifyKey(key);\n                }\n                else {\n                    translatedKey = unminifyKey(key);\n                }\n                const fromValue = from[key];\n                to[translatedKey] = translateValue(fromValue, minify);\n            }\n        }\n        return to;\n    }\n    ConfigMinifier.translateObject = translateObject;\n    function translateArray(from, minify) {\n        const length = from.length;\n        const to = new Array(length);\n        for (let i = 0; i < length; i++) {\n            // In original code, array indices were numbers and not translated\n            const fromValue = from[i];\n            to[i] = translateValue(fromValue, minify);\n        }\n        return to;\n    }\n    function translateValue(from, minify) {\n        if (typeof from === 'object') {\n            if (from === null) {\n                return null;\n            }\n            else {\n                if (Array.isArray(from)) {\n                    return translateArray(from, minify);\n                }\n                else {\n                    return translateObject(from, minify);\n                }\n            }\n        }\n        else {\n            if (minify) {\n                return minifyValue(from);\n            }\n            else {\n                return unminifyValue(from);\n            }\n        }\n    }\n    function minifyKey(value) {\n        /**\n         * If a value actually is a single character, prefix it\n         * with ___ to avoid mistaking it for a minification code\n         */\n        if (typeof value === 'string' && value.length === 1) {\n            return '___' + value;\n        }\n        const index = indexOfKey(value);\n        /**\n         * value not found in the dictionary, return it unmodified\n         */\n        if (index === -1) {\n            return value;\n            /**\n             * value found in dictionary, return its base36 counterpart\n             */\n        }\n        else {\n            return index.toString(36);\n        }\n    }\n    function unminifyKey(key) {\n        /**\n         * value is a single character. Assume that it's a translation\n         * and return the original value from the dictionary\n         */\n        if (key.length === 1) {\n            return keys[parseInt(key, 36)];\n        }\n        /**\n         * value originally was a single character and was prefixed with ___\n         * to avoid mistaking it for a translation. Remove the prefix\n         * and return the original character\n         */\n        if (key.substr(0, 3) === '___') {\n            return key[3];\n        }\n        /**\n         * value was not minified\n         */\n        return key;\n    }\n    function minifyValue(value) {\n        /**\n         * If a value actually is a single character, prefix it\n         * with ___ to avoid mistaking it for a minification code\n         */\n        if (typeof value === 'string' && value.length === 1) {\n            return '___' + value;\n        }\n        const index = indexOfValue(value);\n        /**\n         * value not found in the dictionary, return it unmodified\n         */\n        if (index === -1) {\n            return value;\n            /**\n             * value found in dictionary, return its base36 counterpart\n             */\n        }\n        else {\n            return index.toString(36);\n        }\n    }\n    function unminifyValue(value) {\n        /**\n         * value is a single character. Assume that it's a translation\n         * and return the original value from the dictionary\n         */\n        if (typeof value === 'string' && value.length === 1) {\n            return values[parseInt(value, 36)];\n        }\n        /**\n         * value originally was a single character and was prefixed with ___\n         * to avoid mistaking it for a translation. Remove the prefix\n         * and return the original character\n         */\n        if (typeof value === 'string' && value.substr(0, 3) === '___') {\n            return value[3];\n        }\n        /**\n         * value was not minified\n         */\n        return value;\n    }\n    function indexOfKey(key) {\n        for (let i = 0; i < keys.length; i++) {\n            if (keys[i] === key) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function indexOfValue(value) {\n        for (let i = 0; i < values.length; i++) {\n            if (values[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n})(ConfigMinifier || (ConfigMinifier = {}));\n//# sourceMappingURL=config-minifier.js.map","/** @public */\nexport var StyleConstants;\n(function (StyleConstants) {\n    StyleConstants.defaultComponentBaseZIndex = 'auto';\n    StyleConstants.defaultComponentDragZIndex = '32';\n    StyleConstants.defaultComponentStackMaximisedZIndex = '41';\n})(StyleConstants || (StyleConstants = {}));\n//# sourceMappingURL=style-constants.js.map","import { StyleConstants } from './style-constants';\n/** @internal */\nexport var WidthOrHeightPropertyName;\n(function (WidthOrHeightPropertyName) {\n    WidthOrHeightPropertyName.width = 'width';\n    WidthOrHeightPropertyName.height = 'height';\n})(WidthOrHeightPropertyName || (WidthOrHeightPropertyName = {}));\n/** @public */\nexport var Side;\n(function (Side) {\n    Side.top = 'top';\n    Side.left = 'left';\n    Side.right = 'right';\n    Side.bottom = 'bottom';\n})(Side || (Side = {}));\n/** @public */\nexport var LogicalZIndex;\n(function (LogicalZIndex) {\n    LogicalZIndex.base = 'base';\n    LogicalZIndex.drag = 'drag';\n    LogicalZIndex.stackMaximised = 'stackMaximised';\n})(LogicalZIndex || (LogicalZIndex = {}));\n/** @public */\nexport const LogicalZIndexToDefaultMap = {\n    base: StyleConstants.defaultComponentBaseZIndex,\n    drag: StyleConstants.defaultComponentDragZIndex,\n    stackMaximised: StyleConstants.defaultComponentStackMaximisedZIndex,\n};\n/** @public */\nexport var JsonValue;\n(function (JsonValue) {\n    function isJson(value) {\n        return isJsonObject(value);\n    }\n    JsonValue.isJson = isJson;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    function isJsonObject(value) {\n        return !Array.isArray(value) && value !== null && typeof value === 'object';\n    }\n    JsonValue.isJsonObject = isJsonObject;\n})(JsonValue || (JsonValue = {}));\n/** @public */\nexport var ItemType;\n(function (ItemType) {\n    ItemType.ground = 'ground';\n    ItemType.row = 'row';\n    ItemType.column = 'column';\n    ItemType.stack = 'stack';\n    ItemType.component = 'component';\n})(ItemType || (ItemType = {}));\n/** @public */\nexport var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode.none = 'none';\n    ResponsiveMode.always = 'always';\n    ResponsiveMode.onload = 'onload';\n})(ResponsiveMode || (ResponsiveMode = {}));\n//# sourceMappingURL=types.js.map","import { AssertError, UnreachableCaseError } from '../errors/internal-error';\nimport { ConfigMinifier } from '../utils/config-minifier';\nimport { ItemType, ResponsiveMode, Side } from '../utils/types';\nimport { deepExtendValue } from '../utils/utils';\n/** @public */\nexport var ResolvedItemConfig;\n(function (ResolvedItemConfig) {\n    ResolvedItemConfig.defaults = {\n        type: ItemType.ground,\n        content: [],\n        width: 50,\n        minWidth: 0,\n        height: 50,\n        minHeight: 0,\n        id: '',\n        isClosable: true,\n    };\n    /** Creates a copy of the original ResolvedItemConfig using an alternative content if specified */\n    function createCopy(original, content) {\n        switch (original.type) {\n            case ItemType.ground:\n            case ItemType.row:\n            case ItemType.column:\n                return ResolvedRowOrColumnItemConfig.createCopy(original, content);\n            case ItemType.stack:\n                return ResolvedStackItemConfig.createCopy(original, content);\n            case ItemType.component:\n                return ResolvedComponentItemConfig.createCopy(original);\n            default:\n                throw new UnreachableCaseError('CICC91354', original.type, 'Invalid Config Item type specified');\n        }\n    }\n    ResolvedItemConfig.createCopy = createCopy;\n    function createDefault(type) {\n        switch (type) {\n            case ItemType.ground:\n                throw new AssertError('CICCDR91562'); // Get default root from LayoutConfig\n            case ItemType.row:\n            case ItemType.column:\n                return ResolvedRowOrColumnItemConfig.createDefault(type);\n            case ItemType.stack:\n                return ResolvedStackItemConfig.createDefault();\n            case ItemType.component:\n                return ResolvedComponentItemConfig.createDefault();\n            default:\n                throw new UnreachableCaseError('CICCDD91563', type, 'Invalid Config Item type specified');\n        }\n    }\n    ResolvedItemConfig.createDefault = createDefault;\n    function isComponentItem(itemConfig) {\n        return itemConfig.type === ItemType.component;\n    }\n    ResolvedItemConfig.isComponentItem = isComponentItem;\n    function isStackItem(itemConfig) {\n        return itemConfig.type === ItemType.stack;\n    }\n    ResolvedItemConfig.isStackItem = isStackItem;\n    /** @internal */\n    function isGroundItem(itemConfig) {\n        return itemConfig.type === ItemType.ground;\n    }\n    ResolvedItemConfig.isGroundItem = isGroundItem;\n})(ResolvedItemConfig || (ResolvedItemConfig = {}));\n/** @public */\nexport var ResolvedHeaderedItemConfig;\n(function (ResolvedHeaderedItemConfig) {\n    ResolvedHeaderedItemConfig.defaultMaximised = false;\n    let Header;\n    (function (Header) {\n        function createCopy(original, show) {\n            if (original === undefined) {\n                return undefined;\n            }\n            else {\n                return {\n                    show: show !== null && show !== void 0 ? show : original.show,\n                    popout: original.popout,\n                    close: original.close,\n                    maximise: original.maximise,\n                    minimise: original.minimise,\n                    tabDropdown: original.tabDropdown,\n                };\n            }\n        }\n        Header.createCopy = createCopy;\n    })(Header = ResolvedHeaderedItemConfig.Header || (ResolvedHeaderedItemConfig.Header = {}));\n})(ResolvedHeaderedItemConfig || (ResolvedHeaderedItemConfig = {}));\n/** @public */\nexport var ResolvedStackItemConfig;\n(function (ResolvedStackItemConfig) {\n    ResolvedStackItemConfig.defaultActiveItemIndex = 0;\n    function createCopy(original, content) {\n        const result = {\n            type: original.type,\n            content: content !== undefined ? copyContent(content) : copyContent(original.content),\n            width: original.width,\n            minWidth: original.minWidth,\n            height: original.height,\n            minHeight: original.minHeight,\n            id: original.id,\n            maximised: original.maximised,\n            isClosable: original.isClosable,\n            activeItemIndex: original.activeItemIndex,\n            header: ResolvedHeaderedItemConfig.Header.createCopy(original.header),\n        };\n        return result;\n    }\n    ResolvedStackItemConfig.createCopy = createCopy;\n    function copyContent(original) {\n        const count = original.length;\n        const result = new Array(count);\n        for (let i = 0; i < count; i++) {\n            result[i] = ResolvedItemConfig.createCopy(original[i]);\n        }\n        return result;\n    }\n    ResolvedStackItemConfig.copyContent = copyContent;\n    function createDefault() {\n        const result = {\n            type: ItemType.stack,\n            content: [],\n            width: ResolvedItemConfig.defaults.width,\n            minWidth: ResolvedItemConfig.defaults.minWidth,\n            height: ResolvedItemConfig.defaults.height,\n            minHeight: ResolvedItemConfig.defaults.minHeight,\n            id: ResolvedItemConfig.defaults.id,\n            maximised: ResolvedHeaderedItemConfig.defaultMaximised,\n            isClosable: ResolvedItemConfig.defaults.isClosable,\n            activeItemIndex: ResolvedStackItemConfig.defaultActiveItemIndex,\n            header: undefined,\n        };\n        return result;\n    }\n    ResolvedStackItemConfig.createDefault = createDefault;\n})(ResolvedStackItemConfig || (ResolvedStackItemConfig = {}));\n/** @public */\nexport var ResolvedComponentItemConfig;\n(function (ResolvedComponentItemConfig) {\n    ResolvedComponentItemConfig.defaultReorderEnabled = true;\n    function resolveComponentTypeName(itemConfig) {\n        const componentType = itemConfig.componentType;\n        if (typeof componentType === 'string') {\n            return componentType;\n        }\n        else {\n            return undefined;\n        }\n    }\n    ResolvedComponentItemConfig.resolveComponentTypeName = resolveComponentTypeName;\n    function createCopy(original) {\n        const result = {\n            type: original.type,\n            content: [],\n            width: original.width,\n            minWidth: original.minWidth,\n            height: original.height,\n            minHeight: original.minHeight,\n            id: original.id,\n            maximised: original.maximised,\n            isClosable: original.isClosable,\n            reorderEnabled: original.reorderEnabled,\n            title: original.title,\n            header: ResolvedHeaderedItemConfig.Header.createCopy(original.header),\n            componentType: original.componentType,\n            componentState: deepExtendValue(undefined, original.componentState),\n        };\n        return result;\n    }\n    ResolvedComponentItemConfig.createCopy = createCopy;\n    function createDefault(componentType = '', componentState, title = '') {\n        const result = {\n            type: ItemType.component,\n            content: [],\n            width: ResolvedItemConfig.defaults.width,\n            minWidth: ResolvedItemConfig.defaults.minWidth,\n            height: ResolvedItemConfig.defaults.height,\n            minHeight: ResolvedItemConfig.defaults.minHeight,\n            id: ResolvedItemConfig.defaults.id,\n            maximised: ResolvedHeaderedItemConfig.defaultMaximised,\n            isClosable: ResolvedItemConfig.defaults.isClosable,\n            reorderEnabled: ResolvedComponentItemConfig.defaultReorderEnabled,\n            title,\n            header: undefined,\n            componentType,\n            componentState,\n        };\n        return result;\n    }\n    ResolvedComponentItemConfig.createDefault = createDefault;\n    function copyComponentType(componentType) {\n        return deepExtendValue({}, componentType);\n    }\n    ResolvedComponentItemConfig.copyComponentType = copyComponentType;\n})(ResolvedComponentItemConfig || (ResolvedComponentItemConfig = {}));\n/** @public */\nexport var ResolvedRowOrColumnItemConfig;\n(function (ResolvedRowOrColumnItemConfig) {\n    function isChildItemConfig(itemConfig) {\n        switch (itemConfig.type) {\n            case ItemType.row:\n            case ItemType.column:\n            case ItemType.stack:\n            case ItemType.component:\n                return true;\n            case ItemType.ground:\n                return false;\n            default:\n                throw new UnreachableCaseError('CROCOSPCICIC13687', itemConfig.type);\n        }\n    }\n    ResolvedRowOrColumnItemConfig.isChildItemConfig = isChildItemConfig;\n    function createCopy(original, content) {\n        const result = {\n            type: original.type,\n            content: content !== undefined ? copyContent(content) : copyContent(original.content),\n            width: original.width,\n            minWidth: original.minWidth,\n            height: original.height,\n            minHeight: original.minHeight,\n            id: original.id,\n            isClosable: original.isClosable,\n        };\n        return result;\n    }\n    ResolvedRowOrColumnItemConfig.createCopy = createCopy;\n    function copyContent(original) {\n        const count = original.length;\n        const result = new Array(count);\n        for (let i = 0; i < count; i++) {\n            result[i] = ResolvedItemConfig.createCopy(original[i]);\n        }\n        return result;\n    }\n    ResolvedRowOrColumnItemConfig.copyContent = copyContent;\n    function createDefault(type) {\n        const result = {\n            type,\n            content: [],\n            width: ResolvedItemConfig.defaults.width,\n            minWidth: ResolvedItemConfig.defaults.minWidth,\n            height: ResolvedItemConfig.defaults.height,\n            minHeight: ResolvedItemConfig.defaults.minHeight,\n            id: ResolvedItemConfig.defaults.id,\n            isClosable: ResolvedItemConfig.defaults.isClosable,\n        };\n        return result;\n    }\n    ResolvedRowOrColumnItemConfig.createDefault = createDefault;\n})(ResolvedRowOrColumnItemConfig || (ResolvedRowOrColumnItemConfig = {}));\n/** @public */\nexport var ResolvedRootItemConfig;\n(function (ResolvedRootItemConfig) {\n    function createCopy(config) {\n        return ResolvedItemConfig.createCopy(config);\n    }\n    ResolvedRootItemConfig.createCopy = createCopy;\n    function isRootItemConfig(itemConfig) {\n        switch (itemConfig.type) {\n            case ItemType.row:\n            case ItemType.column:\n            case ItemType.stack:\n            case ItemType.component:\n                return true;\n            case ItemType.ground:\n                return false;\n            default:\n                throw new UnreachableCaseError('CROCOSPCICIC13687', itemConfig.type);\n        }\n    }\n    ResolvedRootItemConfig.isRootItemConfig = isRootItemConfig;\n})(ResolvedRootItemConfig || (ResolvedRootItemConfig = {}));\n/** @internal */\nexport var ResolvedGroundItemConfig;\n(function (ResolvedGroundItemConfig) {\n    function create(rootItemConfig) {\n        const content = rootItemConfig === undefined ? [] : [rootItemConfig];\n        return {\n            type: ItemType.ground,\n            content,\n            width: 100,\n            minWidth: 0,\n            height: 100,\n            minHeight: 0,\n            id: '',\n            isClosable: false,\n            title: '',\n            reorderEnabled: false,\n        };\n    }\n    ResolvedGroundItemConfig.create = create;\n})(ResolvedGroundItemConfig || (ResolvedGroundItemConfig = {}));\n/** @public */\nexport var ResolvedLayoutConfig;\n(function (ResolvedLayoutConfig) {\n    let Settings;\n    (function (Settings) {\n        Settings.defaults = {\n            constrainDragToContainer: true,\n            reorderEnabled: true,\n            popoutWholeStack: false,\n            blockedPopoutsThrowError: true,\n            closePopoutsOnUnload: true,\n            responsiveMode: ResponsiveMode.none,\n            tabOverlapAllowance: 0,\n            reorderOnTabMenuClick: true,\n            tabControlOffset: 10,\n            popInOnClose: false,\n        };\n        function createCopy(original) {\n            return {\n                constrainDragToContainer: original.constrainDragToContainer,\n                reorderEnabled: original.reorderEnabled,\n                popoutWholeStack: original.popoutWholeStack,\n                blockedPopoutsThrowError: original.blockedPopoutsThrowError,\n                closePopoutsOnUnload: original.closePopoutsOnUnload,\n                responsiveMode: original.responsiveMode,\n                tabOverlapAllowance: original.tabOverlapAllowance,\n                reorderOnTabMenuClick: original.reorderOnTabMenuClick,\n                tabControlOffset: original.tabControlOffset,\n                popInOnClose: original.popInOnClose,\n            };\n        }\n        Settings.createCopy = createCopy;\n    })(Settings = ResolvedLayoutConfig.Settings || (ResolvedLayoutConfig.Settings = {}));\n    let Dimensions;\n    (function (Dimensions) {\n        function createCopy(original) {\n            return {\n                borderWidth: original.borderWidth,\n                borderGrabWidth: original.borderGrabWidth,\n                minItemHeight: original.minItemHeight,\n                minItemWidth: original.minItemWidth,\n                headerHeight: original.headerHeight,\n                dragProxyWidth: original.dragProxyWidth,\n                dragProxyHeight: original.dragProxyHeight,\n            };\n        }\n        Dimensions.createCopy = createCopy;\n        Dimensions.defaults = {\n            borderWidth: 5,\n            borderGrabWidth: 5,\n            minItemHeight: 10,\n            minItemWidth: 10,\n            headerHeight: 20,\n            dragProxyWidth: 300,\n            dragProxyHeight: 200\n        };\n    })(Dimensions = ResolvedLayoutConfig.Dimensions || (ResolvedLayoutConfig.Dimensions = {}));\n    let Header;\n    (function (Header) {\n        function createCopy(original) {\n            return {\n                show: original.show,\n                popout: original.popout,\n                dock: original.dock,\n                close: original.close,\n                maximise: original.maximise,\n                minimise: original.minimise,\n                tabDropdown: original.tabDropdown,\n            };\n        }\n        Header.createCopy = createCopy;\n        Header.defaults = {\n            show: Side.top,\n            popout: 'open in new window',\n            dock: 'dock',\n            maximise: 'maximise',\n            minimise: 'minimise',\n            close: 'close',\n            tabDropdown: 'additional tabs'\n        };\n    })(Header = ResolvedLayoutConfig.Header || (ResolvedLayoutConfig.Header = {}));\n    function isPopout(config) {\n        return 'parentId' in config;\n    }\n    ResolvedLayoutConfig.isPopout = isPopout;\n    function createDefault() {\n        const result = {\n            root: undefined,\n            openPopouts: [],\n            dimensions: ResolvedLayoutConfig.Dimensions.defaults,\n            settings: ResolvedLayoutConfig.Settings.defaults,\n            header: ResolvedLayoutConfig.Header.defaults,\n            resolved: true,\n        };\n        return result;\n    }\n    ResolvedLayoutConfig.createDefault = createDefault;\n    function createCopy(config) {\n        if (isPopout(config)) {\n            return ResolvedPopoutLayoutConfig.createCopy(config);\n        }\n        else {\n            const result = {\n                root: config.root === undefined ? undefined : ResolvedRootItemConfig.createCopy(config.root),\n                openPopouts: ResolvedLayoutConfig.copyOpenPopouts(config.openPopouts),\n                settings: ResolvedLayoutConfig.Settings.createCopy(config.settings),\n                dimensions: ResolvedLayoutConfig.Dimensions.createCopy(config.dimensions),\n                header: ResolvedLayoutConfig.Header.createCopy(config.header),\n                resolved: config.resolved,\n            };\n            return result;\n        }\n    }\n    ResolvedLayoutConfig.createCopy = createCopy;\n    function copyOpenPopouts(original) {\n        const count = original.length;\n        const result = new Array(count);\n        for (let i = 0; i < count; i++) {\n            result[i] = ResolvedPopoutLayoutConfig.createCopy(original[i]);\n        }\n        return result;\n    }\n    ResolvedLayoutConfig.copyOpenPopouts = copyOpenPopouts;\n    /**\n     * Takes a GoldenLayout configuration object and\n     * replaces its keys and values recursively with\n     * one letter counterparts\n     */\n    function minifyConfig(layoutConfig) {\n        return ConfigMinifier.translateObject(layoutConfig, true);\n    }\n    ResolvedLayoutConfig.minifyConfig = minifyConfig;\n    /**\n     * Takes a configuration Object that was previously minified\n     * using minifyConfig and returns its original version\n     */\n    function unminifyConfig(minifiedConfig) {\n        return ConfigMinifier.translateObject(minifiedConfig, false);\n    }\n    ResolvedLayoutConfig.unminifyConfig = unminifyConfig;\n})(ResolvedLayoutConfig || (ResolvedLayoutConfig = {}));\n/** @public */\nexport var ResolvedPopoutLayoutConfig;\n(function (ResolvedPopoutLayoutConfig) {\n    let Window;\n    (function (Window) {\n        function createCopy(original) {\n            return {\n                width: original.width,\n                height: original.height,\n                left: original.left,\n                top: original.top,\n            };\n        }\n        Window.createCopy = createCopy;\n        Window.defaults = {\n            width: null,\n            height: null,\n            left: null,\n            top: null,\n        };\n    })(Window = ResolvedPopoutLayoutConfig.Window || (ResolvedPopoutLayoutConfig.Window = {}));\n    function createCopy(original) {\n        const result = {\n            root: original.root === undefined ? undefined : ResolvedRootItemConfig.createCopy(original.root),\n            openPopouts: ResolvedLayoutConfig.copyOpenPopouts(original.openPopouts),\n            settings: ResolvedLayoutConfig.Settings.createCopy(original.settings),\n            dimensions: ResolvedLayoutConfig.Dimensions.createCopy(original.dimensions),\n            header: ResolvedLayoutConfig.Header.createCopy(original.header),\n            parentId: original.parentId,\n            indexInParent: original.indexInParent,\n            window: ResolvedPopoutLayoutConfig.Window.createCopy(original.window),\n            resolved: original.resolved,\n        };\n        return result;\n    }\n    ResolvedPopoutLayoutConfig.createCopy = createCopy;\n})(ResolvedPopoutLayoutConfig || (ResolvedPopoutLayoutConfig = {}));\n//# sourceMappingURL=resolved-config.js.map","import { AssertError } from '../errors/internal-error';\n/** @public */\nexport var I18nStrings;\n(function (I18nStrings) {\n    /** @internal */\n    let initialised = false;\n    /** @internal */\n    const infosObject = {\n        PopoutCannotBeCreatedWithGroundItemConfig: {\n            id: 0 /* PopoutCannotBeCreatedWithGroundItemConfig */,\n            default: 'Popout cannot be created with ground ItemConfig'\n        },\n        PleaseRegisterAConstructorFunction: {\n            id: 1 /* PleaseRegisterAConstructorFunction */,\n            default: 'Please register a constructor function'\n        },\n        ComponentTypeNotRegisteredAndBindComponentEventHandlerNotAssigned: {\n            id: 2 /* ComponentTypeNotRegisteredAndBindComponentEventHandlerNotAssigned */,\n            default: 'Component type not registered and BindComponentEvent handler not assigned',\n        },\n        ComponentIsAlreadyRegistered: {\n            id: 3 /* ComponentIsAlreadyRegistered */,\n            default: 'Component is already registered',\n        },\n        ComponentIsNotVirtuable: {\n            id: 4 /* ComponentIsNotVirtuable */,\n            default: 'Component is not virtuable. Requires rootHtmlElement field/getter',\n        },\n        VirtualComponentDoesNotHaveRootHtmlElement: {\n            id: 5 /* VirtualComponentDoesNotHaveRootHtmlElement */,\n            default: 'Virtual component does not have getter \"rootHtmlElement\"',\n        },\n        ItemConfigIsNotTypeComponent: {\n            id: 6 /* ItemConfigIsNotTypeComponent */,\n            default: 'ItemConfig is not of type component',\n        },\n    };\n    I18nStrings.idCount = Object.keys(infosObject).length;\n    /** @internal */\n    const infos = Object.values(infosObject);\n    function checkInitialise() {\n        if (!initialised) {\n            for (let i = 0; i < I18nStrings.idCount; i++) {\n                const info = infos[i];\n                if (info.id !== i) {\n                    throw new AssertError('INSI00110', `${i}: ${info.id}`);\n                }\n                else {\n                    i18nStrings[i] = info.default;\n                }\n            }\n        }\n        initialised = true;\n    }\n    I18nStrings.checkInitialise = checkInitialise;\n})(I18nStrings || (I18nStrings = {}));\n/** @public */\nexport const i18nStrings = new Array(I18nStrings.idCount);\n//# sourceMappingURL=i18n-strings.js.map","/** @internal */\nexport function numberToPixels(value) {\n    return value.toString(10) + 'px';\n}\n/** @internal */\nexport function pixelsToNumber(value) {\n    const numberStr = value.replace(\"px\", \"\");\n    return parseFloat(numberStr);\n}\n/** @internal */\nexport function getElementWidth(element) {\n    return element.offsetWidth;\n}\n/** @internal */\nexport function setElementWidth(element, width) {\n    const widthAsPixels = numberToPixels(width);\n    element.style.width = widthAsPixels;\n}\n/** @internal */\nexport function getElementHeight(element) {\n    return element.offsetHeight;\n}\n/** @internal */\nexport function setElementHeight(element, height) {\n    const heightAsPixels = numberToPixels(height);\n    element.style.height = heightAsPixels;\n}\n/** @internal */\nexport function getElementWidthAndHeight(element) {\n    return {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n    };\n}\n/** @internal */\nexport function setElementDisplayVisibility(element, visible) {\n    if (visible) {\n        element.style.display = '';\n    }\n    else {\n        element.style.display = 'none';\n    }\n}\n/** @internal */\nexport function ensureElementPositionAbsolute(element) {\n    const absolutePosition = 'absolute';\n    if (element.style.position !== absolutePosition) {\n        element.style.position = absolutePosition;\n    }\n}\n/**\n * Replacement for JQuery $.extend(target, obj)\n * @internal\n*/\nexport function extend(target, obj) {\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            target[key] = obj[key];\n        }\n    }\n    return target;\n}\n/**\n * Replacement for JQuery $.extend(true, target, obj)\n * @internal\n*/\nexport function deepExtend(target, obj) {\n    if (obj !== undefined) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                const value = obj[key];\n                const existingTarget = target[key];\n                target[key] = deepExtendValue(existingTarget, value);\n            }\n        }\n    }\n    return target;\n}\n/** @internal */\nexport function deepExtendValue(existingTarget, value) {\n    if (typeof value !== 'object') {\n        return value;\n    }\n    else {\n        if (Array.isArray(value)) {\n            const length = value.length;\n            const targetArray = new Array(length);\n            for (let i = 0; i < length; i++) {\n                const element = value[i];\n                targetArray[i] = deepExtendValue({}, element);\n            }\n            return targetArray;\n        }\n        else {\n            if (value === null) {\n                return null;\n            }\n            else {\n                const valueObj = value;\n                if (existingTarget === undefined) {\n                    return deepExtend({}, valueObj); // overwrite\n                }\n                else {\n                    if (typeof existingTarget !== \"object\") {\n                        return deepExtend({}, valueObj); // overwrite\n                    }\n                    else {\n                        if (Array.isArray(existingTarget)) {\n                            return deepExtend({}, valueObj); // overwrite\n                        }\n                        else {\n                            if (existingTarget === null) {\n                                return deepExtend({}, valueObj); // overwrite\n                            }\n                            else {\n                                const existingTargetObj = existingTarget;\n                                return deepExtend(existingTargetObj, valueObj); // merge\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/** @internal */\nexport function removeFromArray(item, array) {\n    const index = array.indexOf(item);\n    if (index === -1) {\n        throw new Error('Can\\'t remove item from array. Item is not in the array');\n    }\n    array.splice(index, 1);\n}\n/** @internal */\nexport function getUniqueId() {\n    return (Math.random() * 1000000000000000)\n        .toString(36)\n        .replace('.', '');\n}\n//# sourceMappingURL=utils.js.map","/** @public */\nexport class ExternalError extends Error {\n    /** @internal */\n    constructor(type, message) {\n        super(message);\n        this.type = type;\n    }\n}\n/** @public */\nexport class ConfigurationError extends ExternalError {\n    /** @internal */\n    constructor(message, node) {\n        super('Configuration', message);\n        this.node = node;\n    }\n}\n/** @public */\nexport class PopoutBlockedError extends ExternalError {\n    /** @internal */\n    constructor(message) {\n        super('PopoutBlocked', message);\n    }\n}\n/** @public */\nexport class ApiError extends ExternalError {\n    /** @internal */\n    constructor(message) {\n        super('API', message);\n    }\n}\n/** @public */\nexport class BindError extends ExternalError {\n    /** @internal */\n    constructor(message) {\n        super('Bind', message);\n    }\n}\n//# sourceMappingURL=external-error.js.map","import { ConfigurationError } from '../errors/external-error';\nimport { AssertError, UnreachableCaseError } from '../errors/internal-error';\nimport { ItemType } from '../utils/types';\nimport { ResolvedComponentItemConfig, ResolvedItemConfig, ResolvedLayoutConfig, ResolvedPopoutLayoutConfig, ResolvedRootItemConfig, ResolvedRowOrColumnItemConfig, ResolvedStackItemConfig } from \"./resolved-config\";\n/** @public */\nexport var ItemConfig;\n(function (ItemConfig) {\n    function resolve(itemConfig) {\n        switch (itemConfig.type) {\n            case ItemType.ground:\n                throw new ConfigurationError('ItemConfig cannot specify type ground', JSON.stringify(itemConfig));\n            case ItemType.row:\n            case ItemType.column:\n                return RowOrColumnItemConfig.resolve(itemConfig);\n            case ItemType.stack:\n                return StackItemConfig.resolve(itemConfig);\n            case ItemType.component:\n                return ComponentItemConfig.resolve(itemConfig);\n            default:\n                throw new UnreachableCaseError('UCUICR55499', itemConfig.type);\n        }\n    }\n    ItemConfig.resolve = resolve;\n    function resolveContent(content) {\n        if (content === undefined) {\n            return [];\n        }\n        else {\n            const count = content.length;\n            const result = new Array(count);\n            for (let i = 0; i < count; i++) {\n                result[i] = ItemConfig.resolve(content[i]);\n            }\n            return result;\n        }\n    }\n    ItemConfig.resolveContent = resolveContent;\n    function resolveId(id) {\n        if (id === undefined) {\n            return ResolvedItemConfig.defaults.id;\n        }\n        else {\n            if (Array.isArray(id)) {\n                if (id.length === 0) {\n                    return ResolvedItemConfig.defaults.id;\n                }\n                else {\n                    return id[0];\n                }\n            }\n            else {\n                return id;\n            }\n        }\n    }\n    ItemConfig.resolveId = resolveId;\n    function isGround(config) {\n        return config.type === ItemType.ground;\n    }\n    ItemConfig.isGround = isGround;\n    function isRow(config) {\n        return config.type === ItemType.row;\n    }\n    ItemConfig.isRow = isRow;\n    function isColumn(config) {\n        return config.type === ItemType.column;\n    }\n    ItemConfig.isColumn = isColumn;\n    function isStack(config) {\n        return config.type === ItemType.stack;\n    }\n    ItemConfig.isStack = isStack;\n    function isComponent(config) {\n        return config.type === ItemType.component;\n    }\n    ItemConfig.isComponent = isComponent;\n})(ItemConfig || (ItemConfig = {}));\n/** @public */\nexport var HeaderedItemConfig;\n(function (HeaderedItemConfig) {\n    const legacyMaximisedId = '__glMaximised';\n    let Header;\n    (function (Header) {\n        function resolve(header, hasHeaders) {\n            var _a;\n            if (header === undefined && hasHeaders === undefined) {\n                return undefined;\n            }\n            else {\n                const result = {\n                    show: (_a = header === null || header === void 0 ? void 0 : header.show) !== null && _a !== void 0 ? _a : (hasHeaders === undefined ? undefined : hasHeaders ? ResolvedLayoutConfig.Header.defaults.show : false),\n                    popout: header === null || header === void 0 ? void 0 : header.popout,\n                    maximise: header === null || header === void 0 ? void 0 : header.maximise,\n                    close: header === null || header === void 0 ? void 0 : header.close,\n                    minimise: header === null || header === void 0 ? void 0 : header.minimise,\n                    tabDropdown: header === null || header === void 0 ? void 0 : header.tabDropdown,\n                };\n                return result;\n            }\n        }\n        Header.resolve = resolve;\n    })(Header = HeaderedItemConfig.Header || (HeaderedItemConfig.Header = {}));\n    function resolveIdAndMaximised(config) {\n        let id;\n        // To support legacy configs with Id saved as an array of string, assign config.id to a type which includes string array\n        let legacyId = config.id;\n        let legacyMaximised = false;\n        if (legacyId === undefined) {\n            id = ResolvedItemConfig.defaults.id;\n        }\n        else {\n            if (Array.isArray(legacyId)) {\n                const idx = legacyId.findIndex((id) => id === legacyMaximisedId);\n                if (idx > 0) {\n                    legacyMaximised = true;\n                    legacyId = legacyId.splice(idx, 1);\n                }\n                if (legacyId.length > 0) {\n                    id = legacyId[0];\n                }\n                else {\n                    id = ResolvedItemConfig.defaults.id;\n                }\n            }\n            else {\n                id = legacyId;\n            }\n        }\n        let maximised;\n        if (config.maximised !== undefined) {\n            maximised = config.maximised;\n        }\n        else {\n            maximised = legacyMaximised;\n        }\n        return { id, maximised };\n    }\n    HeaderedItemConfig.resolveIdAndMaximised = resolveIdAndMaximised;\n})(HeaderedItemConfig || (HeaderedItemConfig = {}));\n/** @public */\nexport var StackItemConfig;\n(function (StackItemConfig) {\n    function resolve(itemConfig) {\n        var _a, _b, _c, _d, _e, _f;\n        const { id, maximised } = HeaderedItemConfig.resolveIdAndMaximised(itemConfig);\n        const result = {\n            type: ItemType.stack,\n            content: resolveContent(itemConfig.content),\n            width: (_a = itemConfig.width) !== null && _a !== void 0 ? _a : ResolvedItemConfig.defaults.width,\n            minWidth: (_b = itemConfig.minWidth) !== null && _b !== void 0 ? _b : ResolvedItemConfig.defaults.minWidth,\n            height: (_c = itemConfig.height) !== null && _c !== void 0 ? _c : ResolvedItemConfig.defaults.height,\n            minHeight: (_d = itemConfig.minHeight) !== null && _d !== void 0 ? _d : ResolvedItemConfig.defaults.minHeight,\n            id,\n            maximised,\n            isClosable: (_e = itemConfig.isClosable) !== null && _e !== void 0 ? _e : ResolvedItemConfig.defaults.isClosable,\n            activeItemIndex: (_f = itemConfig.activeItemIndex) !== null && _f !== void 0 ? _f : ResolvedStackItemConfig.defaultActiveItemIndex,\n            header: HeaderedItemConfig.Header.resolve(itemConfig.header, itemConfig.hasHeaders),\n        };\n        return result;\n    }\n    StackItemConfig.resolve = resolve;\n    function resolveContent(content) {\n        if (content === undefined) {\n            return [];\n        }\n        else {\n            const count = content.length;\n            const result = new Array(count);\n            for (let i = 0; i < count; i++) {\n                const childItemConfig = content[i];\n                const itemConfig = ItemConfig.resolve(childItemConfig);\n                if (!ResolvedItemConfig.isComponentItem(itemConfig)) {\n                    throw new AssertError('UCUSICRC91114', JSON.stringify(itemConfig));\n                }\n                else {\n                    result[i] = itemConfig;\n                }\n            }\n            return result;\n        }\n    }\n    StackItemConfig.resolveContent = resolveContent;\n})(StackItemConfig || (StackItemConfig = {}));\n/** @public */\nexport var ComponentItemConfig;\n(function (ComponentItemConfig) {\n    function resolve(itemConfig) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let componentType = itemConfig.componentType;\n        if (componentType === undefined) {\n            componentType = itemConfig.componentName;\n        }\n        if (componentType === undefined) {\n            throw new Error('ComponentItemConfig.componentType is undefined');\n        }\n        else {\n            const { id, maximised } = HeaderedItemConfig.resolveIdAndMaximised(itemConfig);\n            let title;\n            if (itemConfig.title === undefined || itemConfig.title === '') {\n                title = ComponentItemConfig.componentTypeToTitle(componentType);\n            }\n            else {\n                title = itemConfig.title;\n            }\n            const result = {\n                type: itemConfig.type,\n                content: [],\n                width: (_a = itemConfig.width) !== null && _a !== void 0 ? _a : ResolvedItemConfig.defaults.width,\n                minWidth: (_b = itemConfig.minWidth) !== null && _b !== void 0 ? _b : ResolvedItemConfig.defaults.minWidth,\n                height: (_c = itemConfig.height) !== null && _c !== void 0 ? _c : ResolvedItemConfig.defaults.height,\n                minHeight: (_d = itemConfig.minHeight) !== null && _d !== void 0 ? _d : ResolvedItemConfig.defaults.minHeight,\n                id,\n                maximised,\n                isClosable: (_e = itemConfig.isClosable) !== null && _e !== void 0 ? _e : ResolvedItemConfig.defaults.isClosable,\n                reorderEnabled: (_f = itemConfig.reorderEnabled) !== null && _f !== void 0 ? _f : ResolvedComponentItemConfig.defaultReorderEnabled,\n                title,\n                header: HeaderedItemConfig.Header.resolve(itemConfig.header, itemConfig.hasHeaders),\n                componentType,\n                componentState: (_g = itemConfig.componentState) !== null && _g !== void 0 ? _g : {},\n            };\n            return result;\n        }\n    }\n    ComponentItemConfig.resolve = resolve;\n    function componentTypeToTitle(componentType) {\n        const componentTypeType = typeof componentType;\n        switch (componentTypeType) {\n            case 'string': return componentType;\n            case 'number': return componentType.toString();\n            case 'boolean': return componentType.toString();\n            default: return '';\n        }\n    }\n    ComponentItemConfig.componentTypeToTitle = componentTypeToTitle;\n})(ComponentItemConfig || (ComponentItemConfig = {}));\n/** @public */\nexport var RowOrColumnItemConfig;\n(function (RowOrColumnItemConfig) {\n    function isChildItemConfig(itemConfig) {\n        switch (itemConfig.type) {\n            case ItemType.row:\n            case ItemType.column:\n            case ItemType.stack:\n            case ItemType.component:\n                return true;\n            case ItemType.ground:\n                return false;\n            default:\n                throw new UnreachableCaseError('UROCOSPCICIC13687', itemConfig.type);\n        }\n    }\n    RowOrColumnItemConfig.isChildItemConfig = isChildItemConfig;\n    function resolve(itemConfig) {\n        var _a, _b, _c, _d, _e;\n        const result = {\n            type: itemConfig.type,\n            content: RowOrColumnItemConfig.resolveContent(itemConfig.content),\n            width: (_a = itemConfig.width) !== null && _a !== void 0 ? _a : ResolvedItemConfig.defaults.width,\n            minWidth: (_b = itemConfig.width) !== null && _b !== void 0 ? _b : ResolvedItemConfig.defaults.minWidth,\n            height: (_c = itemConfig.height) !== null && _c !== void 0 ? _c : ResolvedItemConfig.defaults.height,\n            minHeight: (_d = itemConfig.height) !== null && _d !== void 0 ? _d : ResolvedItemConfig.defaults.minHeight,\n            id: ItemConfig.resolveId(itemConfig.id),\n            isClosable: (_e = itemConfig.isClosable) !== null && _e !== void 0 ? _e : ResolvedItemConfig.defaults.isClosable,\n        };\n        return result;\n    }\n    RowOrColumnItemConfig.resolve = resolve;\n    function resolveContent(content) {\n        if (content === undefined) {\n            return [];\n        }\n        else {\n            const count = content.length;\n            const result = new Array(count);\n            for (let i = 0; i < count; i++) {\n                const childItemConfig = content[i];\n                if (!RowOrColumnItemConfig.isChildItemConfig(childItemConfig)) {\n                    throw new ConfigurationError('ItemConfig is not Row, Column or Stack', childItemConfig);\n                }\n                else {\n                    const resolvedChildItemConfig = ItemConfig.resolve(childItemConfig);\n                    if (!ResolvedRowOrColumnItemConfig.isChildItemConfig(resolvedChildItemConfig)) {\n                        throw new AssertError('UROCOSPIC99512', JSON.stringify(resolvedChildItemConfig));\n                    }\n                    else {\n                        result[i] = resolvedChildItemConfig;\n                    }\n                }\n            }\n            return result;\n        }\n    }\n    RowOrColumnItemConfig.resolveContent = resolveContent;\n})(RowOrColumnItemConfig || (RowOrColumnItemConfig = {}));\n/** @public */\nexport var RootItemConfig;\n(function (RootItemConfig) {\n    function isRootItemConfig(itemConfig) {\n        switch (itemConfig.type) {\n            case ItemType.row:\n            case ItemType.column:\n            case ItemType.stack:\n            case ItemType.component:\n                return true;\n            case ItemType.ground:\n                return false;\n            default:\n                throw new UnreachableCaseError('URICIR23687', itemConfig.type);\n        }\n    }\n    RootItemConfig.isRootItemConfig = isRootItemConfig;\n    function resolve(itemConfig) {\n        if (itemConfig === undefined) {\n            return undefined;\n        }\n        else {\n            const result = ItemConfig.resolve(itemConfig);\n            if (!ResolvedRootItemConfig.isRootItemConfig(result)) {\n                throw new ConfigurationError('ItemConfig is not Row, Column or Stack', JSON.stringify(itemConfig));\n            }\n            else {\n                return result;\n            }\n        }\n    }\n    RootItemConfig.resolve = resolve;\n})(RootItemConfig || (RootItemConfig = {}));\n/** Use to specify LayoutConfig with defaults or deserialise a LayoutConfig.\n * Deserialisation will handle backwards compatibility.\n * Note that LayoutConfig should be used for serialisation (not LayoutConfig)\n * @public\n */\nexport var LayoutConfig;\n(function (LayoutConfig) {\n    let Settings;\n    (function (Settings) {\n        function resolve(settings) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n            const result = {\n                constrainDragToContainer: (_a = settings === null || settings === void 0 ? void 0 : settings.constrainDragToContainer) !== null && _a !== void 0 ? _a : ResolvedLayoutConfig.Settings.defaults.constrainDragToContainer,\n                reorderEnabled: (_b = settings === null || settings === void 0 ? void 0 : settings.reorderEnabled) !== null && _b !== void 0 ? _b : ResolvedLayoutConfig.Settings.defaults.reorderEnabled,\n                popoutWholeStack: (_c = settings === null || settings === void 0 ? void 0 : settings.popoutWholeStack) !== null && _c !== void 0 ? _c : ResolvedLayoutConfig.Settings.defaults.popoutWholeStack,\n                blockedPopoutsThrowError: (_d = settings === null || settings === void 0 ? void 0 : settings.blockedPopoutsThrowError) !== null && _d !== void 0 ? _d : ResolvedLayoutConfig.Settings.defaults.blockedPopoutsThrowError,\n                closePopoutsOnUnload: (_e = settings === null || settings === void 0 ? void 0 : settings.closePopoutsOnUnload) !== null && _e !== void 0 ? _e : ResolvedLayoutConfig.Settings.defaults.closePopoutsOnUnload,\n                responsiveMode: (_f = settings === null || settings === void 0 ? void 0 : settings.responsiveMode) !== null && _f !== void 0 ? _f : ResolvedLayoutConfig.Settings.defaults.responsiveMode,\n                tabOverlapAllowance: (_g = settings === null || settings === void 0 ? void 0 : settings.tabOverlapAllowance) !== null && _g !== void 0 ? _g : ResolvedLayoutConfig.Settings.defaults.tabOverlapAllowance,\n                reorderOnTabMenuClick: (_h = settings === null || settings === void 0 ? void 0 : settings.reorderOnTabMenuClick) !== null && _h !== void 0 ? _h : ResolvedLayoutConfig.Settings.defaults.reorderOnTabMenuClick,\n                tabControlOffset: (_j = settings === null || settings === void 0 ? void 0 : settings.tabControlOffset) !== null && _j !== void 0 ? _j : ResolvedLayoutConfig.Settings.defaults.tabControlOffset,\n                popInOnClose: (_k = settings === null || settings === void 0 ? void 0 : settings.popInOnClose) !== null && _k !== void 0 ? _k : ResolvedLayoutConfig.Settings.defaults.popInOnClose,\n            };\n            return result;\n        }\n        Settings.resolve = resolve;\n    })(Settings = LayoutConfig.Settings || (LayoutConfig.Settings = {}));\n    let Dimensions;\n    (function (Dimensions) {\n        function resolve(dimensions) {\n            var _a, _b, _c, _d, _e, _f, _g;\n            const result = {\n                borderWidth: (_a = dimensions === null || dimensions === void 0 ? void 0 : dimensions.borderWidth) !== null && _a !== void 0 ? _a : ResolvedLayoutConfig.Dimensions.defaults.borderWidth,\n                borderGrabWidth: (_b = dimensions === null || dimensions === void 0 ? void 0 : dimensions.borderGrabWidth) !== null && _b !== void 0 ? _b : ResolvedLayoutConfig.Dimensions.defaults.borderGrabWidth,\n                minItemHeight: (_c = dimensions === null || dimensions === void 0 ? void 0 : dimensions.minItemHeight) !== null && _c !== void 0 ? _c : ResolvedLayoutConfig.Dimensions.defaults.minItemHeight,\n                minItemWidth: (_d = dimensions === null || dimensions === void 0 ? void 0 : dimensions.minItemWidth) !== null && _d !== void 0 ? _d : ResolvedLayoutConfig.Dimensions.defaults.minItemWidth,\n                headerHeight: (_e = dimensions === null || dimensions === void 0 ? void 0 : dimensions.headerHeight) !== null && _e !== void 0 ? _e : ResolvedLayoutConfig.Dimensions.defaults.headerHeight,\n                dragProxyWidth: (_f = dimensions === null || dimensions === void 0 ? void 0 : dimensions.dragProxyWidth) !== null && _f !== void 0 ? _f : ResolvedLayoutConfig.Dimensions.defaults.dragProxyWidth,\n                dragProxyHeight: (_g = dimensions === null || dimensions === void 0 ? void 0 : dimensions.dragProxyHeight) !== null && _g !== void 0 ? _g : ResolvedLayoutConfig.Dimensions.defaults.dragProxyHeight,\n            };\n            return result;\n        }\n        Dimensions.resolve = resolve;\n    })(Dimensions = LayoutConfig.Dimensions || (LayoutConfig.Dimensions = {}));\n    let Header;\n    (function (Header) {\n        function resolve(header, settings, labels) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n            let show;\n            if ((header === null || header === void 0 ? void 0 : header.show) !== undefined) {\n                show = header.show;\n            }\n            else {\n                if (settings !== undefined && settings.hasHeaders !== undefined) {\n                    show = settings.hasHeaders ? ResolvedLayoutConfig.Header.defaults.show : false;\n                }\n                else {\n                    show = ResolvedLayoutConfig.Header.defaults.show;\n                }\n            }\n            const result = {\n                show,\n                popout: (_b = (_a = header === null || header === void 0 ? void 0 : header.popout) !== null && _a !== void 0 ? _a : labels === null || labels === void 0 ? void 0 : labels.popout) !== null && _b !== void 0 ? _b : ((settings === null || settings === void 0 ? void 0 : settings.showPopoutIcon) === false ? false : ResolvedLayoutConfig.Header.defaults.popout),\n                dock: (_d = (_c = header === null || header === void 0 ? void 0 : header.popin) !== null && _c !== void 0 ? _c : labels === null || labels === void 0 ? void 0 : labels.popin) !== null && _d !== void 0 ? _d : ResolvedLayoutConfig.Header.defaults.dock,\n                maximise: (_f = (_e = header === null || header === void 0 ? void 0 : header.maximise) !== null && _e !== void 0 ? _e : labels === null || labels === void 0 ? void 0 : labels.maximise) !== null && _f !== void 0 ? _f : ((settings === null || settings === void 0 ? void 0 : settings.showMaximiseIcon) === false ? false : ResolvedLayoutConfig.Header.defaults.maximise),\n                close: (_h = (_g = header === null || header === void 0 ? void 0 : header.close) !== null && _g !== void 0 ? _g : labels === null || labels === void 0 ? void 0 : labels.close) !== null && _h !== void 0 ? _h : ((settings === null || settings === void 0 ? void 0 : settings.showCloseIcon) === false ? false : ResolvedLayoutConfig.Header.defaults.close),\n                minimise: (_k = (_j = header === null || header === void 0 ? void 0 : header.minimise) !== null && _j !== void 0 ? _j : labels === null || labels === void 0 ? void 0 : labels.minimise) !== null && _k !== void 0 ? _k : ResolvedLayoutConfig.Header.defaults.minimise,\n                tabDropdown: (_m = (_l = header === null || header === void 0 ? void 0 : header.tabDropdown) !== null && _l !== void 0 ? _l : labels === null || labels === void 0 ? void 0 : labels.tabDropdown) !== null && _m !== void 0 ? _m : ResolvedLayoutConfig.Header.defaults.tabDropdown,\n            };\n            return result;\n        }\n        Header.resolve = resolve;\n    })(Header = LayoutConfig.Header || (LayoutConfig.Header = {}));\n    function isPopout(config) {\n        return 'parentId' in config || 'indexInParent' in config || 'window' in config;\n    }\n    LayoutConfig.isPopout = isPopout;\n    function resolve(layoutConfig) {\n        if (isPopout(layoutConfig)) {\n            return PopoutLayoutConfig.resolve(layoutConfig);\n        }\n        else {\n            let root;\n            if (layoutConfig.root !== undefined) {\n                root = layoutConfig.root;\n            }\n            else {\n                if (layoutConfig.content !== undefined && layoutConfig.content.length > 0) {\n                    root = layoutConfig.content[0];\n                }\n                else {\n                    root = undefined;\n                }\n            }\n            const config = {\n                resolved: true,\n                root: RootItemConfig.resolve(root),\n                openPopouts: LayoutConfig.resolveOpenPopouts(layoutConfig.openPopouts),\n                dimensions: LayoutConfig.Dimensions.resolve(layoutConfig.dimensions),\n                settings: LayoutConfig.Settings.resolve(layoutConfig.settings),\n                header: LayoutConfig.Header.resolve(layoutConfig.header, layoutConfig.settings, layoutConfig.labels),\n            };\n            return config;\n        }\n    }\n    LayoutConfig.resolve = resolve;\n    function fromResolved(config) {\n        const copiedConfig = ResolvedLayoutConfig.createCopy(config);\n        const result = {\n            root: copiedConfig.root,\n            openPopouts: copiedConfig.openPopouts,\n            dimensions: copiedConfig.dimensions,\n            settings: copiedConfig.settings,\n            header: copiedConfig.header,\n        };\n        return result;\n    }\n    LayoutConfig.fromResolved = fromResolved;\n    function isResolved(configOrResolvedConfig) {\n        const config = configOrResolvedConfig;\n        return config.resolved !== undefined && (config.resolved === true);\n    }\n    LayoutConfig.isResolved = isResolved;\n    function resolveOpenPopouts(popoutConfigs) {\n        if (popoutConfigs === undefined) {\n            return [];\n        }\n        else {\n            const count = popoutConfigs.length;\n            const result = new Array(count);\n            for (let i = 0; i < count; i++) {\n                result[i] = PopoutLayoutConfig.resolve(popoutConfigs[i]);\n            }\n            return result;\n        }\n    }\n    LayoutConfig.resolveOpenPopouts = resolveOpenPopouts;\n})(LayoutConfig || (LayoutConfig = {}));\n/** @public */\nexport var PopoutLayoutConfig;\n(function (PopoutLayoutConfig) {\n    let Window;\n    (function (Window) {\n        function resolve(window, dimensions) {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            let result;\n            const defaults = ResolvedPopoutLayoutConfig.Window.defaults;\n            if (window !== undefined) {\n                result = {\n                    width: (_a = window.width) !== null && _a !== void 0 ? _a : defaults.width,\n                    height: (_b = window.height) !== null && _b !== void 0 ? _b : defaults.height,\n                    left: (_c = window.left) !== null && _c !== void 0 ? _c : defaults.left,\n                    top: (_d = window.top) !== null && _d !== void 0 ? _d : defaults.top,\n                };\n            }\n            else {\n                result = {\n                    width: (_e = dimensions === null || dimensions === void 0 ? void 0 : dimensions.width) !== null && _e !== void 0 ? _e : defaults.width,\n                    height: (_f = dimensions === null || dimensions === void 0 ? void 0 : dimensions.height) !== null && _f !== void 0 ? _f : defaults.height,\n                    left: (_g = dimensions === null || dimensions === void 0 ? void 0 : dimensions.left) !== null && _g !== void 0 ? _g : defaults.left,\n                    top: (_h = dimensions === null || dimensions === void 0 ? void 0 : dimensions.top) !== null && _h !== void 0 ? _h : defaults.top,\n                };\n            }\n            return result;\n        }\n        Window.resolve = resolve;\n    })(Window = PopoutLayoutConfig.Window || (PopoutLayoutConfig.Window = {}));\n    function resolve(popoutConfig) {\n        var _a, _b;\n        let root;\n        if (popoutConfig.root !== undefined) {\n            root = popoutConfig.root;\n        }\n        else {\n            if (popoutConfig.content !== undefined && popoutConfig.content.length > 0) {\n                root = popoutConfig.content[0];\n            }\n            else {\n                root = undefined;\n            }\n        }\n        const config = {\n            root: RootItemConfig.resolve(root),\n            openPopouts: LayoutConfig.resolveOpenPopouts(popoutConfig.openPopouts),\n            settings: LayoutConfig.Settings.resolve(popoutConfig.settings),\n            dimensions: LayoutConfig.Dimensions.resolve(popoutConfig.dimensions),\n            header: LayoutConfig.Header.resolve(popoutConfig.header, popoutConfig.settings, popoutConfig.labels),\n            parentId: (_a = popoutConfig.parentId) !== null && _a !== void 0 ? _a : null,\n            indexInParent: (_b = popoutConfig.indexInParent) !== null && _b !== void 0 ? _b : null,\n            window: PopoutLayoutConfig.Window.resolve(popoutConfig.window, popoutConfig.dimensions),\n            resolved: true,\n        };\n        return config;\n    }\n    PopoutLayoutConfig.resolve = resolve;\n})(PopoutLayoutConfig || (PopoutLayoutConfig = {}));\n//# sourceMappingURL=config.js.map","/**\n * A generic and very fast EventEmitter implementation. On top of emitting the actual event it emits an\n * {@link (EventEmitter:namespace).ALL_EVENT} event for every event triggered. This allows to hook into it and proxy events forwards\n * @public\n */\nexport class EventEmitter {\n    constructor() {\n        /** @internal */\n        this._allEventSubscriptions = [];\n        /** @internal */\n        this._subscriptionsMap = new Map();\n        /**\n         * Alias for off\n         */\n        this.unbind = this.removeEventListener;\n        /**\n         * Alias for emit\n         */\n        this.trigger = this.emit;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    tryBubbleEvent(name, args) {\n        // overridden by ContentItem\n    }\n    /**\n     * Emit an event and notify listeners\n     *\n     * @param eventName - The name of the event\n     * @param args - Additional arguments that will be passed to the listener\n     */\n    emit(eventName, ...args) {\n        let subcriptions = this._subscriptionsMap.get(eventName);\n        if (subcriptions !== undefined) {\n            subcriptions = subcriptions.slice();\n            for (let i = 0; i < subcriptions.length; i++) {\n                const subscription = subcriptions[i];\n                subscription(...args);\n            }\n        }\n        this.emitAllEvent(eventName, args);\n        this.tryBubbleEvent(eventName, args);\n    }\n    /** @internal */\n    emitUnknown(eventName, ...args) {\n        let subs = this._subscriptionsMap.get(eventName);\n        if (subs !== undefined) {\n            subs = subs.slice();\n            for (let i = 0; i < subs.length; i++) {\n                subs[i](...args);\n            }\n        }\n        this.emitAllEvent(eventName, args);\n        this.tryBubbleEvent(eventName, args);\n    }\n    /* @internal **/\n    emitBaseBubblingEvent(eventName) {\n        const event = new EventEmitter.BubblingEvent(eventName, this);\n        this.emitUnknown(eventName, event);\n    }\n    /** @internal */\n    emitUnknownBubblingEvent(eventName) {\n        const event = new EventEmitter.BubblingEvent(eventName, this);\n        this.emitUnknown(eventName, event);\n    }\n    /**\n     * Removes a listener for an event.\n     * @param eventName - The name of the event\n     * @param callback - The previously registered callback method (optional)\n     */\n    removeEventListener(eventName, callback) {\n        const unknownCallback = callback;\n        this.removeUnknownEventListener(eventName, unknownCallback);\n    }\n    off(eventName, callback) {\n        this.removeEventListener(eventName, callback);\n    }\n    /**\n     * Listen for events\n     *\n     * @param eventName - The name of the event to listen to\n     * @param callback - The callback to execute when the event occurs\n     */\n    addEventListener(eventName, callback) {\n        const unknownCallback = callback;\n        this.addUnknownEventListener(eventName, unknownCallback);\n    }\n    on(eventName, callback) {\n        this.addEventListener(eventName, callback);\n    }\n    /** @internal */\n    addUnknownEventListener(eventName, callback) {\n        if (eventName === EventEmitter.ALL_EVENT) {\n            this._allEventSubscriptions.push(callback);\n        }\n        else {\n            let subscriptions = this._subscriptionsMap.get(eventName);\n            if (subscriptions !== undefined) {\n                subscriptions.push(callback);\n            }\n            else {\n                subscriptions = [callback];\n                this._subscriptionsMap.set(eventName, subscriptions);\n            }\n        }\n    }\n    /** @internal */\n    removeUnknownEventListener(eventName, callback) {\n        if (eventName === EventEmitter.ALL_EVENT) {\n            this.removeSubscription(eventName, this._allEventSubscriptions, callback);\n        }\n        else {\n            const subscriptions = this._subscriptionsMap.get(eventName);\n            if (subscriptions === undefined) {\n                throw new Error('No subscribtions to unsubscribe for event ' + eventName);\n            }\n            else {\n                this.removeSubscription(eventName, subscriptions, callback);\n            }\n        }\n    }\n    /** @internal */\n    removeSubscription(eventName, subscriptions, callback) {\n        const idx = subscriptions.indexOf(callback);\n        if (idx < 0) {\n            throw new Error('Nothing to unbind for ' + eventName);\n        }\n        else {\n            subscriptions.splice(idx, 1);\n        }\n    }\n    /** @internal */\n    emitAllEvent(eventName, args) {\n        const allEventSubscriptionsCount = this._allEventSubscriptions.length;\n        if (allEventSubscriptionsCount > 0) {\n            const unknownArgs = args.slice();\n            unknownArgs.unshift(eventName);\n            const allEventSubcriptions = this._allEventSubscriptions.slice();\n            for (let i = 0; i < allEventSubscriptionsCount; i++) {\n                allEventSubcriptions[i](...unknownArgs);\n            }\n        }\n    }\n}\n/** @public */\n(function (EventEmitter) {\n    /**\n     * The name of the event that's triggered for every event\n     */\n    EventEmitter.ALL_EVENT = '__all';\n    EventEmitter.headerClickEventName = 'stackHeaderClick';\n    EventEmitter.headerTouchStartEventName = 'stackHeaderTouchStart';\n    class BubblingEvent {\n        /** @internal */\n        constructor(\n        /** @internal */\n        _name, \n        /** @internal */\n        _target) {\n            this._name = _name;\n            this._target = _target;\n            /** @internal */\n            this._isPropagationStopped = false;\n        }\n        get name() { return this._name; }\n        get target() { return this._target; }\n        /** @deprecated Use {@link (EventEmitter:namespace).(BubblingEvent:class).target} instead */\n        get origin() { return this._target; }\n        get isPropagationStopped() { return this._isPropagationStopped; }\n        stopPropagation() {\n            this._isPropagationStopped = true;\n        }\n    }\n    EventEmitter.BubblingEvent = BubblingEvent;\n    class ClickBubblingEvent extends BubblingEvent {\n        /** @internal */\n        constructor(name, target, \n        /** @internal */\n        _mouseEvent) {\n            super(name, target);\n            this._mouseEvent = _mouseEvent;\n        }\n        get mouseEvent() { return this._mouseEvent; }\n    }\n    EventEmitter.ClickBubblingEvent = ClickBubblingEvent;\n    class TouchStartBubblingEvent extends BubblingEvent {\n        /** @internal */\n        constructor(name, target, \n        /** @internal */\n        _touchEvent) {\n            super(name, target);\n            this._touchEvent = _touchEvent;\n        }\n        get touchEvent() { return this._touchEvent; }\n    }\n    EventEmitter.TouchStartBubblingEvent = TouchStartBubblingEvent;\n})(EventEmitter || (EventEmitter = {}));\n//# sourceMappingURL=event-emitter.js.map","import { ResolvedLayoutConfig } from '../config/resolved-config';\nimport { PopoutBlockedError } from '../errors/external-error';\nimport { UnexpectedNullError, UnexpectedUndefinedError } from '../errors/internal-error';\nimport { EventEmitter } from '../utils/event-emitter';\nimport { deepExtend, getUniqueId } from '../utils/utils';\n/**\n * Pops a content item out into a new browser window.\n * This is achieved by\n *\n *    - Creating a new configuration with the content item as root element\n *    - Serializing and minifying the configuration\n *    - Opening the current window's URL with the configuration as a GET parameter\n *    - GoldenLayout when opened in the new window will look for the GET parameter\n *      and use it instead of the provided configuration\n * @public\n */\nexport class BrowserPopout extends EventEmitter {\n    /**\n     * @param _config - GoldenLayout item config\n     * @param _initialWindowSize - A map with width, height, top and left\n     * @internal\n     */\n    constructor(\n    /** @internal */\n    _config, \n    /** @internal */\n    _initialWindowSize, \n    /** @internal */\n    _layoutManager) {\n        super();\n        this._config = _config;\n        this._initialWindowSize = _initialWindowSize;\n        this._layoutManager = _layoutManager;\n        this._isInitialised = false;\n        this._popoutWindow = null;\n        this.createWindow();\n    }\n    toConfig() {\n        var _a, _b;\n        if (this._isInitialised === false) {\n            throw new Error('Can\\'t create config, layout not yet initialised');\n        }\n        const glInstance = this.getGlInstance();\n        const glInstanceConfig = glInstance.saveLayout();\n        let left;\n        let top;\n        if (this._popoutWindow === null) {\n            left = null;\n            top = null;\n        }\n        else {\n            left = (_a = this._popoutWindow.screenX) !== null && _a !== void 0 ? _a : this._popoutWindow.screenLeft;\n            top = (_b = this._popoutWindow.screenY) !== null && _b !== void 0 ? _b : this._popoutWindow.screenTop;\n        }\n        const window = {\n            width: this.getGlInstance().width,\n            height: this.getGlInstance().height,\n            left,\n            top,\n        };\n        const config = {\n            root: glInstanceConfig.root,\n            openPopouts: glInstanceConfig.openPopouts,\n            settings: glInstanceConfig.settings,\n            dimensions: glInstanceConfig.dimensions,\n            header: glInstanceConfig.header,\n            window,\n            parentId: this._config.parentId,\n            indexInParent: this._config.indexInParent,\n            resolved: true,\n        };\n        return config;\n    }\n    getGlInstance() {\n        if (this._popoutWindow === null) {\n            throw new UnexpectedNullError('BPGGI24693');\n        }\n        return this._popoutWindow.__glInstance;\n    }\n    /**\n     * Retrieves the native BrowserWindow backing this popout.\n     * Might throw an UnexpectedNullError exception when the window is not initialized yet.\n     * @public\n     */\n    getWindow() {\n        if (this._popoutWindow === null) {\n            throw new UnexpectedNullError('BPGW087215');\n        }\n        return this._popoutWindow;\n    }\n    close() {\n        if (this.getGlInstance()) {\n            this.getGlInstance().closeWindow();\n        }\n        else {\n            try {\n                this.getWindow().close();\n            }\n            catch (e) {\n                //\n            }\n        }\n    }\n    /**\n     * Returns the popped out item to its original position. If the original\n     * parent isn't available anymore it falls back to the layout's topmost element\n     */\n    popIn() {\n        let parentItem;\n        let index = this._config.indexInParent;\n        if (!this._config.parentId) {\n            return;\n        }\n        /*\n        * The deepExtend call seems a bit pointless, but it's crucial to\n        * copy the config returned by this.getGlInstance().toConfig()\n        * onto a new object. Internet Explorer keeps the references\n        * to objects on the child window, resulting in the following error\n        * once the child window is closed:\n        *\n        * The callee (server [not server application]) is not available and disappeared\n        */\n        const glInstanceLayoutConfig = this.getGlInstance().saveLayout();\n        const copiedGlInstanceLayoutConfig = deepExtend({}, glInstanceLayoutConfig);\n        const copiedRoot = copiedGlInstanceLayoutConfig.root;\n        if (copiedRoot === undefined) {\n            throw new UnexpectedUndefinedError('BPPIR19998');\n        }\n        const groundItem = this._layoutManager.groundItem;\n        if (groundItem === undefined) {\n            throw new UnexpectedUndefinedError('BPPIG34972');\n        }\n        parentItem = groundItem.getItemsByPopInParentId(this._config.parentId)[0];\n        /*\n        * Fallback if parentItem is not available. Either add it to the topmost\n        * item or make it the topmost item if the layout is empty\n        */\n        if (!parentItem) {\n            if (groundItem.contentItems.length > 0) {\n                parentItem = groundItem.contentItems[0];\n            }\n            else {\n                parentItem = groundItem;\n            }\n            index = 0;\n        }\n        const newContentItem = this._layoutManager.createAndInitContentItem(copiedRoot, parentItem);\n        parentItem.addChild(newContentItem, index);\n        if (this._layoutManager.layoutConfig.settings.popInOnClose) {\n            this._onClose();\n        }\n        else {\n            this.close();\n        }\n    }\n    /**\n     * Creates the URL and window parameter\n     * and opens a new window\n     * @internal\n     */\n    createWindow() {\n        const url = this.createUrl();\n        /**\n         * Bogus title to prevent re-usage of existing window with the\n         * same title. The actual title will be set by the new window's\n         * GoldenLayout instance if it detects that it is in subWindowMode\n         */\n        const target = Math.floor(Math.random() * 1000000).toString(36);\n        /**\n         * The options as used in the window.open string\n         */\n        const features = this.serializeWindowFeatures({\n            width: this._initialWindowSize.width,\n            height: this._initialWindowSize.height,\n            innerWidth: this._initialWindowSize.width,\n            innerHeight: this._initialWindowSize.height,\n            menubar: 'no',\n            toolbar: 'no',\n            location: 'no',\n            personalbar: 'no',\n            resizable: 'yes',\n            scrollbars: 'no',\n            status: 'no'\n        });\n        this._popoutWindow = globalThis.open(url, target, features);\n        if (!this._popoutWindow) {\n            if (this._layoutManager.layoutConfig.settings.blockedPopoutsThrowError === true) {\n                const error = new PopoutBlockedError('Popout blocked');\n                throw error;\n            }\n            else {\n                return;\n            }\n        }\n        this._popoutWindow.addEventListener('load', () => this.positionWindow(), { passive: true });\n        this._popoutWindow.addEventListener('beforeunload', () => {\n            if (this._layoutManager.layoutConfig.settings.popInOnClose) {\n                this.popIn();\n            }\n            else {\n                this._onClose();\n            }\n        }, { passive: true });\n        /**\n         * Polling the childwindow to find out if GoldenLayout has been initialised\n         * doesn't seem optimal, but the alternatives - adding a callback to the parent\n         * window or raising an event on the window object - both would introduce knowledge\n         * about the parent to the child window which we'd rather avoid\n         */\n        this._checkReadyInterval = setInterval(() => this.checkReady(), 10);\n    }\n    /** @internal */\n    checkReady() {\n        if (this._popoutWindow === null) {\n            throw new UnexpectedNullError('BPCR01844');\n        }\n        else {\n            if (this._popoutWindow.__glInstance && this._popoutWindow.__glInstance.isInitialised) {\n                this.onInitialised();\n                if (this._checkReadyInterval !== undefined) {\n                    clearInterval(this._checkReadyInterval);\n                    this._checkReadyInterval = undefined;\n                }\n            }\n        }\n    }\n    /**\n     * Serialises a map of key:values to a window options string\n     *\n     * @param windowOptions -\n     *\n     * @returns serialised window options\n     * @internal\n     */\n    serializeWindowFeatures(windowOptions) {\n        const windowOptionsString = [];\n        for (const key in windowOptions) {\n            windowOptionsString.push(key + '=' + windowOptions[key].toString());\n        }\n        return windowOptionsString.join(',');\n    }\n    /**\n     * Creates the URL for the new window, including the\n     * config GET parameter\n     *\n     * @returns URL\n     * @internal\n     */\n    createUrl() {\n        const storageKey = 'gl-window-config-' + getUniqueId();\n        const config = ResolvedLayoutConfig.minifyConfig(this._config);\n        try {\n            localStorage.setItem(storageKey, JSON.stringify(config));\n        }\n        catch (e) {\n            throw new Error('Error while writing to localStorage ' + e.toString());\n        }\n        const url = new URL(location.href);\n        url.searchParams.set('gl-window', storageKey);\n        return url.toString();\n    }\n    /**\n     * Move the newly created window roughly to\n     * where the component used to be.\n     * @internal\n     */\n    positionWindow() {\n        if (this._popoutWindow === null) {\n            throw new Error('BrowserPopout.positionWindow: null popoutWindow');\n        }\n        else {\n            this._popoutWindow.moveTo(this._initialWindowSize.left, this._initialWindowSize.top);\n            this._popoutWindow.focus();\n        }\n    }\n    /**\n     * Callback when the new window is opened and the GoldenLayout instance\n     * within it is initialised\n     * @internal\n     */\n    onInitialised() {\n        this._isInitialised = true;\n        this.getGlInstance().on('popIn', () => this.popIn());\n        this.emit('initialised');\n    }\n    /**\n     * Invoked 50ms after the window unload event\n     * @internal\n     */\n    _onClose() {\n        setTimeout(() => this.emit('closed'), 50);\n    }\n}\n//# sourceMappingURL=browser-popout.js.map","/** @internal */\nexport class HeaderButton {\n    constructor(_header, label, cssClass, _pushEvent) {\n        this._header = _header;\n        this._pushEvent = _pushEvent;\n        this._clickEventListener = (ev) => this.onClick(ev);\n        this._touchStartEventListener = (ev) => this.onTouchStart(ev);\n        this._element = document.createElement('div');\n        this._element.classList.add(cssClass);\n        this._element.title = label;\n        this._header.on('destroy', () => this.destroy());\n        this._element.addEventListener('click', this._clickEventListener, { passive: true });\n        this._element.addEventListener('touchstart', this._touchStartEventListener, { passive: true });\n        this._header.controlsContainerElement.appendChild(this._element);\n    }\n    get element() { return this._element; }\n    destroy() {\n        var _a;\n        this._element.removeEventListener('click', this._clickEventListener);\n        this._element.removeEventListener('touchstart', this._touchStartEventListener);\n        (_a = this._element.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(this._element);\n    }\n    onClick(ev) {\n        this._pushEvent(ev);\n    }\n    onTouchStart(ev) {\n        this._pushEvent(ev);\n    }\n}\n//# sourceMappingURL=header-button.js.map","import { EventEmitter } from './event-emitter';\n/** @internal */\nexport class DragListener extends EventEmitter {\n    constructor(_eElement, extraAllowableChildTargets) {\n        super();\n        this._eElement = _eElement;\n        this._pointerTracking = false;\n        this._pointerDownEventListener = (ev) => this.onPointerDown(ev);\n        this._pointerMoveEventListener = (ev) => this.onPointerMove(ev);\n        this._pointerUpEventListener = (ev) => this.onPointerUp(ev);\n        this._timeout = undefined;\n        this._allowableTargets = [_eElement, ...extraAllowableChildTargets];\n        this._oDocument = document;\n        this._eBody = document.body;\n        /**\n         * The delay after which to start the drag in milliseconds\n         * Do NOT make too short (previous value of 200 was not long enough for my touchpad)\n         * Should generally rely on the mouse move to start drag.  Not this delay.\n         */\n        this._nDelay = 1800;\n        /**\n         * The distance the mouse needs to be moved to qualify as a drag\n         * Previous comment: works better with delay only\n         * ???\n         * Probably somehow needs tuning for different devices\n         */\n        this._nDistance = 10;\n        this._nX = 0;\n        this._nY = 0;\n        this._nOriginalX = 0;\n        this._nOriginalY = 0;\n        this._dragging = false;\n        this._eElement.addEventListener('pointerdown', this._pointerDownEventListener, { passive: true });\n    }\n    destroy() {\n        this.checkRemovePointerTrackingEventListeners();\n        this._eElement.removeEventListener('pointerdown', this._pointerDownEventListener);\n    }\n    cancelDrag() {\n        this.processDragStop(undefined);\n    }\n    onPointerDown(oEvent) {\n        if (this._allowableTargets.includes(oEvent.target) && oEvent.isPrimary) {\n            const coordinates = this.getPointerCoordinates(oEvent);\n            this.processPointerDown(coordinates);\n        }\n    }\n    processPointerDown(coordinates) {\n        this._nOriginalX = coordinates.x;\n        this._nOriginalY = coordinates.y;\n        this._oDocument.addEventListener('pointermove', this._pointerMoveEventListener);\n        this._oDocument.addEventListener('pointerup', this._pointerUpEventListener, { passive: true });\n        this._pointerTracking = true;\n        this._timeout = setTimeout(() => {\n            try {\n                this.startDrag();\n            }\n            catch (err) {\n                console.error(err);\n                throw err;\n            }\n        }, this._nDelay);\n    }\n    onPointerMove(oEvent) {\n        if (this._pointerTracking) {\n            this.processDragMove(oEvent);\n            oEvent.preventDefault();\n        }\n    }\n    processDragMove(dragEvent) {\n        this._nX = dragEvent.pageX - this._nOriginalX;\n        this._nY = dragEvent.pageY - this._nOriginalY;\n        if (this._dragging === false) {\n            if (Math.abs(this._nX) > this._nDistance ||\n                Math.abs(this._nY) > this._nDistance) {\n                this.startDrag();\n            }\n        }\n        if (this._dragging) {\n            this.emit('drag', this._nX, this._nY, dragEvent);\n        }\n    }\n    onPointerUp(oEvent) {\n        this.processDragStop(oEvent);\n    }\n    processDragStop(dragEvent) {\n        var _a;\n        if (this._timeout !== undefined) {\n            clearTimeout(this._timeout);\n            this._timeout = undefined;\n        }\n        this.checkRemovePointerTrackingEventListeners();\n        if (this._dragging === true) {\n            this._eBody.classList.remove(\"lm_dragging\" /* Dragging */);\n            this._eElement.classList.remove(\"lm_dragging\" /* Dragging */);\n            (_a = this._oDocument.querySelector('iframe')) === null || _a === void 0 ? void 0 : _a.style.setProperty('pointer-events', '');\n            this._dragging = false;\n            this.emit('dragStop', dragEvent);\n        }\n    }\n    checkRemovePointerTrackingEventListeners() {\n        if (this._pointerTracking) {\n            this._oDocument.removeEventListener('pointermove', this._pointerMoveEventListener);\n            this._oDocument.removeEventListener('pointerup', this._pointerUpEventListener);\n            this._pointerTracking = false;\n        }\n    }\n    startDrag() {\n        var _a;\n        if (this._timeout !== undefined) {\n            clearTimeout(this._timeout);\n            this._timeout = undefined;\n        }\n        this._dragging = true;\n        this._eBody.classList.add(\"lm_dragging\" /* Dragging */);\n        this._eElement.classList.add(\"lm_dragging\" /* Dragging */);\n        (_a = this._oDocument.querySelector('iframe')) === null || _a === void 0 ? void 0 : _a.style.setProperty('pointer-events', 'none');\n        this.emit('dragStart', this._nOriginalX, this._nOriginalY);\n    }\n    getPointerCoordinates(event) {\n        const result = {\n            x: event.pageX,\n            y: event.pageY\n        };\n        return result;\n    }\n}\n//# sourceMappingURL=drag-listener.js.map","import { UnexpectedUndefinedError } from '../errors/internal-error';\nimport { DragListener } from '../utils/drag-listener';\n/**\n * Represents an individual tab within a Stack's header\n * @public\n */\nexport class Tab {\n    /** @internal */\n    constructor(\n    /** @internal */\n    _layoutManager, \n    /** @internal */\n    _componentItem, \n    /** @internal */\n    _closeEvent, \n    /** @internal */\n    _focusEvent, \n    /** @internal */\n    _dragStartEvent) {\n        var _a;\n        this._layoutManager = _layoutManager;\n        this._componentItem = _componentItem;\n        this._closeEvent = _closeEvent;\n        this._focusEvent = _focusEvent;\n        this._dragStartEvent = _dragStartEvent;\n        /** @internal */\n        this._isActive = false;\n        /** @internal */\n        this._tabClickListener = (ev) => this.onTabClickDown(ev);\n        /** @internal */\n        this._tabTouchStartListener = (ev) => this.onTabTouchStart(ev);\n        /** @internal */\n        this._closeClickListener = () => this.onCloseClick();\n        /** @internal */\n        this._closeTouchStartListener = () => this.onCloseTouchStart();\n        // /** @internal */\n        // private readonly _closeMouseDownListener = () => this.onCloseMousedown();\n        /** @internal */\n        this._dragStartListener = (x, y) => this.onDragStart(x, y);\n        /** @internal */\n        this._contentItemDestroyListener = () => this.onContentItemDestroy();\n        /** @internal */\n        this._tabTitleChangedListener = (title) => this.setTitle(title);\n        this._element = document.createElement('div');\n        this._element.classList.add(\"lm_tab\" /* Tab */);\n        this._titleElement = document.createElement('span');\n        this._titleElement.classList.add(\"lm_title\" /* Title */);\n        this._closeElement = document.createElement('div');\n        this._closeElement.classList.add(\"lm_close_tab\" /* CloseTab */);\n        this._element.appendChild(this._titleElement);\n        this._element.appendChild(this._closeElement);\n        if (_componentItem.isClosable) {\n            this._closeElement.style.display = '';\n        }\n        else {\n            this._closeElement.style.display = 'none';\n        }\n        this.setTitle(_componentItem.title);\n        this._componentItem.on('titleChanged', this._tabTitleChangedListener);\n        const reorderEnabled = (_a = _componentItem.reorderEnabled) !== null && _a !== void 0 ? _a : this._layoutManager.layoutConfig.settings.reorderEnabled;\n        if (reorderEnabled) {\n            this.enableReorder();\n        }\n        this._element.addEventListener('click', this._tabClickListener, { passive: true });\n        this._element.addEventListener('touchstart', this._tabTouchStartListener, { passive: true });\n        if (this._componentItem.isClosable) {\n            this._closeElement.addEventListener('click', this._closeClickListener, { passive: true });\n            this._closeElement.addEventListener('touchstart', this._closeTouchStartListener, { passive: true });\n            // this._closeElement.addEventListener('mousedown', this._closeMouseDownListener, { passive: true });\n        }\n        else {\n            this._closeElement.remove();\n            this._closeElement = undefined;\n        }\n        this._componentItem.setTab(this);\n        this._layoutManager.emit('tabCreated', this);\n    }\n    get isActive() { return this._isActive; }\n    // get header(): Header { return this._header; }\n    get componentItem() { return this._componentItem; }\n    /** @deprecated use {@link (Tab:class).componentItem} */\n    get contentItem() { return this._componentItem; }\n    get element() { return this._element; }\n    get titleElement() { return this._titleElement; }\n    get closeElement() { return this._closeElement; }\n    get reorderEnabled() { return this._dragListener !== undefined; }\n    set reorderEnabled(value) {\n        if (value !== this.reorderEnabled) {\n            if (value) {\n                this.enableReorder();\n            }\n            else {\n                this.disableReorder();\n            }\n        }\n    }\n    /**\n     * Sets the tab's title to the provided string and sets\n     * its title attribute to a pure text representation (without\n     * html tags) of the same string.\n     */\n    setTitle(title) {\n        this._titleElement.innerText = title;\n        this._element.title = title;\n    }\n    /**\n     * Sets this tab's active state. To programmatically\n     * switch tabs, use Stack.setActiveComponentItem( item ) instead.\n     */\n    setActive(isActive) {\n        if (isActive === this._isActive) {\n            return;\n        }\n        this._isActive = isActive;\n        if (isActive) {\n            this._element.classList.add(\"lm_active\" /* Active */);\n        }\n        else {\n            this._element.classList.remove(\"lm_active\" /* Active */);\n        }\n    }\n    /**\n     * Destroys the tab\n     * @internal\n     */\n    destroy() {\n        var _a, _b;\n        this._closeEvent = undefined;\n        this._focusEvent = undefined;\n        this._dragStartEvent = undefined;\n        this._element.removeEventListener('click', this._tabClickListener);\n        this._element.removeEventListener('touchstart', this._tabTouchStartListener);\n        (_a = this._closeElement) === null || _a === void 0 ? void 0 : _a.removeEventListener('click', this._closeClickListener);\n        (_b = this._closeElement) === null || _b === void 0 ? void 0 : _b.removeEventListener('touchstart', this._closeTouchStartListener);\n        // this._closeElement?.removeEventListener('mousedown', this._closeMouseDownListener);\n        this._componentItem.off('titleChanged', this._tabTitleChangedListener);\n        if (this.reorderEnabled) {\n            this.disableReorder();\n        }\n        this._element.remove();\n    }\n    /** @internal */\n    setBlurred() {\n        this._element.classList.remove(\"lm_focused\" /* Focused */);\n        this._titleElement.classList.remove(\"lm_focused\" /* Focused */);\n    }\n    /** @internal */\n    setFocused() {\n        this._element.classList.add(\"lm_focused\" /* Focused */);\n        this._titleElement.classList.add(\"lm_focused\" /* Focused */);\n    }\n    /**\n     * Callback for the DragListener\n     * @param x - The tabs absolute x position\n     * @param y - The tabs absolute y position\n     * @internal\n     */\n    onDragStart(x, y) {\n        if (this._dragListener === undefined) {\n            throw new UnexpectedUndefinedError('TODSDLU10093');\n        }\n        else {\n            if (this._dragStartEvent === undefined) {\n                throw new UnexpectedUndefinedError('TODS23309');\n            }\n            else {\n                this._dragStartEvent(x, y, this._dragListener, this.componentItem);\n            }\n        }\n    }\n    /** @internal */\n    onContentItemDestroy() {\n        if (this._dragListener !== undefined) {\n            this._dragListener.destroy();\n            this._dragListener = undefined;\n        }\n    }\n    /**\n     * Callback when the tab is clicked\n     * @internal\n     */\n    onTabClickDown(event) {\n        const target = event.target;\n        if (target === this._element || target === this._titleElement) {\n            // left mouse button\n            if (event.button === 0) {\n                // event.stopPropagation();\n                this.notifyFocus();\n                // middle mouse button\n            }\n            else if (event.button === 1 && this._componentItem.isClosable) {\n                // event.stopPropagation();\n                this.notifyClose();\n            }\n        }\n    }\n    /** @internal */\n    onTabTouchStart(event) {\n        if (event.target === this._element) {\n            this.notifyFocus();\n        }\n    }\n    /**\n     * Callback when the tab's close button is clicked\n     * @internal\n     */\n    onCloseClick() {\n        this.notifyClose();\n    }\n    /** @internal */\n    onCloseTouchStart() {\n        this.notifyClose();\n    }\n    /**\n     * Callback to capture tab close button mousedown\n     * to prevent tab from activating.\n     * @internal\n     */\n    // private onCloseMousedown(): void {\n    //     // event.stopPropagation();\n    // }\n    /** @internal */\n    notifyClose() {\n        if (this._closeEvent === undefined) {\n            throw new UnexpectedUndefinedError('TNC15007');\n        }\n        else {\n            this._closeEvent(this._componentItem);\n        }\n    }\n    /** @internal */\n    notifyFocus() {\n        if (this._focusEvent === undefined) {\n            throw new UnexpectedUndefinedError('TNA15007');\n        }\n        else {\n            this._focusEvent(this._componentItem);\n        }\n    }\n    /** @internal */\n    enableReorder() {\n        this._dragListener = new DragListener(this._element, [this._titleElement]);\n        this._dragListener.on('dragStart', this._dragStartListener);\n        this._componentItem.on('destroy', this._contentItemDestroyListener);\n    }\n    /** @internal */\n    disableReorder() {\n        if (this._dragListener === undefined) {\n            throw new UnexpectedUndefinedError('TDR87745');\n        }\n        else {\n            this._componentItem.off('destroy', this._contentItemDestroyListener);\n            this._dragListener.off('dragStart', this._dragStartListener);\n            this._dragListener = undefined;\n        }\n    }\n}\n//# sourceMappingURL=tab.js.map","import { AssertError } from '../errors/internal-error';\nimport { numberToPixels, pixelsToNumber } from '../utils/utils';\nimport { Tab } from './tab';\n/** @internal */\nexport class TabsContainer {\n    constructor(_layoutManager, _componentRemoveEvent, _componentFocusEvent, _componentDragStartEvent, _dropdownActiveChangedEvent) {\n        this._layoutManager = _layoutManager;\n        this._componentRemoveEvent = _componentRemoveEvent;\n        this._componentFocusEvent = _componentFocusEvent;\n        this._componentDragStartEvent = _componentDragStartEvent;\n        this._dropdownActiveChangedEvent = _dropdownActiveChangedEvent;\n        // There is one tab per ComponentItem in stack.  However they may not be ordered the same\n        this._tabs = [];\n        this._lastVisibleTabIndex = -1;\n        this._dropdownActive = false;\n        this._element = document.createElement('section');\n        this._element.classList.add(\"lm_tabs\" /* Tabs */);\n        this._dropdownElement = document.createElement('section');\n        this._dropdownElement.classList.add(\"lm_tabdropdown_list\" /* TabDropdownList */);\n        this._dropdownElement.style.display = 'none';\n    }\n    get tabs() { return this._tabs; }\n    get tabCount() { return this._tabs.length; }\n    get lastVisibleTabIndex() { return this._lastVisibleTabIndex; }\n    get element() { return this._element; }\n    get dropdownElement() { return this._dropdownElement; }\n    get dropdownActive() { return this._dropdownActive; }\n    destroy() {\n        for (let i = 0; i < this._tabs.length; i++) {\n            this._tabs[i].destroy();\n        }\n    }\n    /**\n     * Creates a new tab and associates it with a contentItem\n     * @param index - The position of the tab\n     */\n    createTab(componentItem, index) {\n        //If there's already a tab relating to the\n        //content item, don't do anything\n        for (let i = 0; i < this._tabs.length; i++) {\n            if (this._tabs[i].componentItem === componentItem) {\n                return;\n            }\n        }\n        const tab = new Tab(this._layoutManager, componentItem, (item) => this.handleTabCloseEvent(item), (item) => this.handleTabFocusEvent(item), (x, y, dragListener, item) => this.handleTabDragStartEvent(x, y, dragListener, item));\n        if (this._tabs.length === 0) {\n            this._tabs.push(tab);\n            this._element.appendChild(tab.element);\n        }\n        else {\n            if (index === undefined) {\n                index = this._tabs.length;\n            }\n            if (index > 0) {\n                this._tabs[index - 1].element.insertAdjacentElement('afterend', tab.element);\n            }\n            else {\n                this._tabs[0].element.insertAdjacentElement('beforebegin', tab.element);\n            }\n            this._tabs.splice(index, 0, tab);\n        }\n    }\n    removeTab(componentItem) {\n        // componentItem cannot be ActiveComponentItem\n        for (let i = 0; i < this._tabs.length; i++) {\n            if (this._tabs[i].componentItem === componentItem) {\n                const tab = this._tabs[i];\n                tab.destroy();\n                this._tabs.splice(i, 1);\n                return;\n            }\n        }\n        throw new Error('contentItem is not controlled by this header');\n    }\n    processActiveComponentChanged(newActiveComponentItem) {\n        let activeIndex = -1;\n        for (let i = 0; i < this._tabs.length; i++) {\n            const isActive = this._tabs[i].componentItem === newActiveComponentItem;\n            this._tabs[i].setActive(isActive);\n            if (isActive) {\n                activeIndex = i;\n            }\n        }\n        if (activeIndex < 0) {\n            throw new AssertError('HSACI56632');\n        }\n        else {\n            if (this._layoutManager.layoutConfig.settings.reorderOnTabMenuClick) {\n                /**\n                 * If the tab selected was in the dropdown, move everything down one to make way for this one to be the first.\n                 * This will make sure the most used tabs stay visible.\n                 */\n                if (this._lastVisibleTabIndex !== -1 && activeIndex > this._lastVisibleTabIndex) {\n                    const activeTab = this._tabs[activeIndex];\n                    for (let j = activeIndex; j > 0; j--) {\n                        this._tabs[j] = this._tabs[j - 1];\n                    }\n                    this._tabs[0] = activeTab;\n                    // updateTabSizes will always be called after this and it will reposition tab elements\n                }\n            }\n        }\n    }\n    /**\n     * Pushes the tabs to the tab dropdown if the available space is not sufficient\n     */\n    updateTabSizes(availableWidth, activeComponentItem) {\n        let dropDownActive = false;\n        const success = this.tryUpdateTabSizes(dropDownActive, availableWidth, activeComponentItem);\n        if (!success) {\n            dropDownActive = true;\n            // this will always succeed\n            this.tryUpdateTabSizes(dropDownActive, availableWidth, activeComponentItem);\n        }\n        if (dropDownActive !== this._dropdownActive) {\n            this._dropdownActive = dropDownActive;\n            this._dropdownActiveChangedEvent();\n        }\n    }\n    tryUpdateTabSizes(dropdownActive, availableWidth, activeComponentItem) {\n        if (this._tabs.length > 0) {\n            if (activeComponentItem === undefined) {\n                throw new Error('non-empty tabs must have active component item');\n            }\n            let cumulativeTabWidth = 0;\n            let tabOverlapAllowanceExceeded = false;\n            const tabOverlapAllowance = this._layoutManager.layoutConfig.settings.tabOverlapAllowance;\n            const activeIndex = this._tabs.indexOf(activeComponentItem.tab);\n            const activeTab = this._tabs[activeIndex];\n            this._lastVisibleTabIndex = -1;\n            for (let i = 0; i < this._tabs.length; i++) {\n                const tabElement = this._tabs[i].element;\n                //Put the tab in the tabContainer so its true width can be checked\n                if (tabElement.parentElement !== this._element) {\n                    this._element.appendChild(tabElement);\n                }\n                const tabMarginRightPixels = getComputedStyle(activeTab.element).marginRight;\n                const tabMarginRight = pixelsToNumber(tabMarginRightPixels);\n                const tabWidth = tabElement.offsetWidth + tabMarginRight;\n                cumulativeTabWidth += tabWidth;\n                //Include the active tab's width if it isn't already\n                //This is to ensure there is room to show the active tab\n                let visibleTabWidth = 0;\n                if (activeIndex <= i) {\n                    visibleTabWidth = cumulativeTabWidth;\n                }\n                else {\n                    const activeTabMarginRightPixels = getComputedStyle(activeTab.element).marginRight;\n                    const activeTabMarginRight = pixelsToNumber(activeTabMarginRightPixels);\n                    visibleTabWidth = cumulativeTabWidth + activeTab.element.offsetWidth + activeTabMarginRight;\n                }\n                // If the tabs won't fit, check the overlap allowance.\n                if (visibleTabWidth > availableWidth) {\n                    //Once allowance is exceeded, all remaining tabs go to menu.\n                    if (!tabOverlapAllowanceExceeded) {\n                        //No overlap for first tab or active tab\n                        //Overlap spreads among non-active, non-first tabs\n                        let overlap;\n                        if (activeIndex > 0 && activeIndex <= i) {\n                            overlap = (visibleTabWidth - availableWidth) / (i - 1);\n                        }\n                        else {\n                            overlap = (visibleTabWidth - availableWidth) / i;\n                        }\n                        //Check overlap against allowance.\n                        if (overlap < tabOverlapAllowance) {\n                            for (let j = 0; j <= i; j++) {\n                                const marginLeft = (j !== activeIndex && j !== 0) ? '-' + numberToPixels(overlap) : '';\n                                this._tabs[j].element.style.zIndex = numberToPixels(i - j);\n                                this._tabs[j].element.style.marginLeft = marginLeft;\n                            }\n                            this._lastVisibleTabIndex = i;\n                            if (tabElement.parentElement !== this._element) {\n                                this._element.appendChild(tabElement);\n                            }\n                        }\n                        else {\n                            tabOverlapAllowanceExceeded = true;\n                        }\n                    }\n                    else if (i === activeIndex) {\n                        //Active tab should show even if allowance exceeded. (We left room.)\n                        tabElement.style.zIndex = 'auto';\n                        tabElement.style.marginLeft = '';\n                        if (tabElement.parentElement !== this._element) {\n                            this._element.appendChild(tabElement);\n                        }\n                    }\n                    if (tabOverlapAllowanceExceeded && i !== activeIndex) {\n                        if (dropdownActive) {\n                            //Tab menu already shown, so we just add to it.\n                            tabElement.style.zIndex = 'auto';\n                            tabElement.style.marginLeft = '';\n                            if (tabElement.parentElement !== this._dropdownElement) {\n                                this._dropdownElement.appendChild(tabElement);\n                            }\n                        }\n                        else {\n                            //We now know the tab menu must be shown, so we have to recalculate everything.\n                            return false;\n                        }\n                    }\n                }\n                else {\n                    this._lastVisibleTabIndex = i;\n                    tabElement.style.zIndex = 'auto';\n                    tabElement.style.marginLeft = '';\n                    if (tabElement.parentElement !== this._element) {\n                        this._element.appendChild(tabElement);\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * Shows drop down for additional tabs when there are too many to display.\n     */\n    showAdditionalTabsDropdown() {\n        this._dropdownElement.style.display = '';\n    }\n    /**\n     * Hides drop down for additional tabs when there are too many to display.\n     */\n    hideAdditionalTabsDropdown() {\n        this._dropdownElement.style.display = 'none';\n    }\n    handleTabCloseEvent(componentItem) {\n        this._componentRemoveEvent(componentItem);\n    }\n    handleTabFocusEvent(componentItem) {\n        this._componentFocusEvent(componentItem);\n    }\n    handleTabDragStartEvent(x, y, dragListener, componentItem) {\n        this._componentDragStartEvent(x, y, dragListener, componentItem);\n    }\n}\n//# sourceMappingURL=tabs-container.js.map","import { UnexpectedUndefinedError } from '../errors/internal-error';\nimport { EventEmitter } from '../utils/event-emitter';\nimport { Side } from '../utils/types';\nimport { numberToPixels, setElementDisplayVisibility } from '../utils/utils';\nimport { HeaderButton } from './header-button';\nimport { TabsContainer } from './tabs-container';\n/**\n * This class represents a header above a Stack ContentItem.\n * @public\n */\nexport class Header extends EventEmitter {\n    /** @internal */\n    constructor(\n    /** @internal */\n    _layoutManager, \n    /** @internal */\n    _parent, settings, \n    /** @internal */\n    _configClosable, \n    /** @internal */\n    _getActiveComponentItemEvent, closeEvent, \n    /** @internal */\n    _popoutEvent, \n    /** @internal */\n    _maximiseToggleEvent, \n    /** @internal */\n    _clickEvent, \n    /** @internal */\n    _touchStartEvent, \n    /** @internal */\n    _componentRemoveEvent, \n    /** @internal */\n    _componentFocusEvent, \n    /** @internal */\n    _componentDragStartEvent) {\n        super();\n        this._layoutManager = _layoutManager;\n        this._parent = _parent;\n        this._configClosable = _configClosable;\n        this._getActiveComponentItemEvent = _getActiveComponentItemEvent;\n        this._popoutEvent = _popoutEvent;\n        this._maximiseToggleEvent = _maximiseToggleEvent;\n        this._clickEvent = _clickEvent;\n        this._touchStartEvent = _touchStartEvent;\n        this._componentRemoveEvent = _componentRemoveEvent;\n        this._componentFocusEvent = _componentFocusEvent;\n        this._componentDragStartEvent = _componentDragStartEvent;\n        /** @internal */\n        this._clickListener = (ev) => this.onClick(ev);\n        /** @internal */\n        this._touchStartListener = (ev) => this.onTouchStart(ev);\n        /** @internal */\n        this._rowColumnClosable = true;\n        /** @internal */\n        this._closeButton = null;\n        /** @internal */\n        this._popoutButton = null;\n        this._tabsContainer = new TabsContainer(this._layoutManager, (item) => this.handleTabInitiatedComponentRemoveEvent(item), (item) => this.handleTabInitiatedComponentFocusEvent(item), (x, y, dragListener, item) => this.handleTabInitiatedDragStartEvent(x, y, dragListener, item), () => this.processTabDropdownActiveChanged());\n        this._show = settings.show;\n        this._popoutEnabled = settings.popoutEnabled;\n        this._popoutLabel = settings.popoutLabel;\n        this._maximiseEnabled = settings.maximiseEnabled;\n        this._maximiseLabel = settings.maximiseLabel;\n        this._minimiseEnabled = settings.minimiseEnabled;\n        this._minimiseLabel = settings.minimiseLabel;\n        this._closeEnabled = settings.closeEnabled;\n        this._closeLabel = settings.closeLabel;\n        this._tabDropdownEnabled = settings.tabDropdownEnabled;\n        this._tabDropdownLabel = settings.tabDropdownLabel;\n        this.setSide(settings.side);\n        this._canRemoveComponent = this._configClosable;\n        this._element = document.createElement('section');\n        this._element.classList.add(\"lm_header\" /* Header */);\n        this._controlsContainerElement = document.createElement('section');\n        this._controlsContainerElement.classList.add(\"lm_controls\" /* Controls */);\n        this._element.appendChild(this._tabsContainer.element);\n        this._element.appendChild(this._controlsContainerElement);\n        this._element.appendChild(this._tabsContainer.dropdownElement);\n        this._element.addEventListener('click', this._clickListener, { passive: true });\n        this._element.addEventListener('touchstart', this._touchStartListener, { passive: true });\n        this._documentMouseUpListener = () => this._tabsContainer.hideAdditionalTabsDropdown();\n        globalThis.document.addEventListener('mouseup', this._documentMouseUpListener, { passive: true });\n        this._tabControlOffset = this._layoutManager.layoutConfig.settings.tabControlOffset;\n        if (this._tabDropdownEnabled) {\n            this._tabDropdownButton = new HeaderButton(this, this._tabDropdownLabel, \"lm_tabdropdown\" /* TabDropdown */, () => this._tabsContainer.showAdditionalTabsDropdown());\n        }\n        if (this._popoutEnabled) {\n            this._popoutButton = new HeaderButton(this, this._popoutLabel, \"lm_popout\" /* Popout */, () => this.handleButtonPopoutEvent());\n        }\n        /**\n         * Maximise control - set the component to the full size of the layout\n         */\n        if (this._maximiseEnabled) {\n            this._maximiseButton = new HeaderButton(this, this._maximiseLabel, \"lm_maximise\" /* Maximise */, (ev) => this.handleButtonMaximiseToggleEvent(ev));\n        }\n        /**\n         * Close button\n         */\n        if (this._configClosable) {\n            this._closeButton = new HeaderButton(this, this._closeLabel, \"lm_close\" /* Close */, () => closeEvent());\n        }\n        this.processTabDropdownActiveChanged();\n    }\n    // /** @internal */\n    // private _activeComponentItem: ComponentItem | null = null; // only used to identify active tab\n    get show() { return this._show; }\n    get side() { return this._side; }\n    get leftRightSided() { return this._leftRightSided; }\n    get layoutManager() { return this._layoutManager; }\n    get parent() { return this._parent; }\n    get tabs() { return this._tabsContainer.tabs; }\n    get lastVisibleTabIndex() { return this._tabsContainer.lastVisibleTabIndex; }\n    get element() { return this._element; }\n    get tabsContainerElement() { return this._tabsContainer.element; }\n    get controlsContainerElement() { return this._controlsContainerElement; }\n    /**\n     * Destroys the entire header\n     * @internal\n     */\n    destroy() {\n        this.emit('destroy');\n        this._popoutEvent = undefined;\n        this._maximiseToggleEvent = undefined;\n        this._clickEvent = undefined;\n        this._touchStartEvent = undefined;\n        this._componentRemoveEvent = undefined;\n        this._componentFocusEvent = undefined;\n        this._componentDragStartEvent = undefined;\n        this._tabsContainer.destroy();\n        globalThis.document.removeEventListener('mouseup', this._documentMouseUpListener);\n        this._element.remove();\n    }\n    /**\n     * Creates a new tab and associates it with a contentItem\n     * @param index - The position of the tab\n     * @internal\n     */\n    createTab(componentItem, index) {\n        this._tabsContainer.createTab(componentItem, index);\n    }\n    /**\n     * Finds a tab based on the contentItem its associated with and removes it.\n     * Cannot remove tab if it has the active ComponentItem\n     * @internal\n     */\n    removeTab(componentItem) {\n        this._tabsContainer.removeTab(componentItem);\n    }\n    /** @internal */\n    processActiveComponentChanged(newActiveComponentItem) {\n        this._tabsContainer.processActiveComponentChanged(newActiveComponentItem);\n        this.updateTabSizes();\n    }\n    /** @internal */\n    setSide(value) {\n        this._side = value;\n        this._leftRightSided = [Side.right, Side.left].includes(this._side);\n    }\n    /**\n     * Programmatically set closability.\n     * @param value - Whether to enable/disable closability.\n     * @returns Whether the action was successful\n     * @internal\n     */\n    setRowColumnClosable(value) {\n        this._rowColumnClosable = value;\n        this.updateClosability();\n    }\n    /**\n     * Updates the header's closability. If a stack/header is able\n     * to close, but has a non closable component added to it, the stack is no\n     * longer closable until all components are closable.\n     * @internal\n     */\n    updateClosability() {\n        let isClosable;\n        if (!this._configClosable) {\n            isClosable = false;\n        }\n        else {\n            if (!this._rowColumnClosable) {\n                isClosable = false;\n            }\n            else {\n                isClosable = true;\n                const len = this.tabs.length;\n                for (let i = 0; i < len; i++) {\n                    const tab = this._tabsContainer.tabs[i];\n                    const item = tab.componentItem;\n                    if (!item.isClosable) {\n                        isClosable = false;\n                        break;\n                    }\n                }\n            }\n        }\n        if (this._closeButton !== null) {\n            setElementDisplayVisibility(this._closeButton.element, isClosable);\n        }\n        if (this._popoutButton !== null) {\n            setElementDisplayVisibility(this._popoutButton.element, isClosable);\n        }\n        this._canRemoveComponent = isClosable || this._tabsContainer.tabCount > 1;\n    }\n    /** @internal */\n    applyFocusedValue(value) {\n        if (value) {\n            this._element.classList.add(\"lm_focused\" /* Focused */);\n        }\n        else {\n            this._element.classList.remove(\"lm_focused\" /* Focused */);\n        }\n    }\n    /** @internal */\n    processMaximised() {\n        if (this._maximiseButton === undefined) {\n            throw new UnexpectedUndefinedError('HPMAX16997');\n        }\n        else {\n            this._maximiseButton.element.setAttribute('title', this._minimiseLabel);\n        }\n    }\n    /** @internal */\n    processMinimised() {\n        if (this._maximiseButton === undefined) {\n            throw new UnexpectedUndefinedError('HPMIN16997');\n        }\n        else {\n            this._maximiseButton.element.setAttribute('title', this._maximiseLabel);\n        }\n    }\n    /**\n     * Pushes the tabs to the tab dropdown if the available space is not sufficient\n     * @internal\n     */\n    updateTabSizes() {\n        if (this._tabsContainer.tabCount > 0) {\n            const headerHeight = this._show ? this._layoutManager.layoutConfig.dimensions.headerHeight : 0;\n            if (this._leftRightSided) {\n                this._element.style.height = '';\n                this._element.style.width = numberToPixels(headerHeight);\n            }\n            else {\n                this._element.style.width = '';\n                this._element.style.height = numberToPixels(headerHeight);\n            }\n            let availableWidth;\n            if (this._leftRightSided) {\n                availableWidth = this._element.offsetHeight - this._controlsContainerElement.offsetHeight - this._tabControlOffset;\n            }\n            else {\n                availableWidth = this._element.offsetWidth - this._controlsContainerElement.offsetWidth - this._tabControlOffset;\n            }\n            this._tabsContainer.updateTabSizes(availableWidth, this._getActiveComponentItemEvent());\n        }\n    }\n    /** @internal */\n    handleTabInitiatedComponentRemoveEvent(componentItem) {\n        if (this._canRemoveComponent) {\n            if (this._componentRemoveEvent === undefined) {\n                throw new UnexpectedUndefinedError('HHTCE22294');\n            }\n            else {\n                this._componentRemoveEvent(componentItem);\n            }\n        }\n    }\n    /** @internal */\n    handleTabInitiatedComponentFocusEvent(componentItem) {\n        if (this._componentFocusEvent === undefined) {\n            throw new UnexpectedUndefinedError('HHTAE22294');\n        }\n        else {\n            this._componentFocusEvent(componentItem);\n        }\n    }\n    /** @internal */\n    handleTabInitiatedDragStartEvent(x, y, dragListener, componentItem) {\n        if (!this._canRemoveComponent) {\n            dragListener.cancelDrag();\n        }\n        else {\n            if (this._componentDragStartEvent === undefined) {\n                throw new UnexpectedUndefinedError('HHTDSE22294');\n            }\n            else {\n                this._componentDragStartEvent(x, y, dragListener, componentItem);\n            }\n        }\n    }\n    /** @internal */\n    processTabDropdownActiveChanged() {\n        if (this._tabDropdownButton !== undefined) {\n            setElementDisplayVisibility(this._tabDropdownButton.element, this._tabsContainer.dropdownActive);\n        }\n    }\n    /** @internal */\n    handleButtonPopoutEvent() {\n        if (this._layoutManager.layoutConfig.settings.popoutWholeStack) {\n            if (this._popoutEvent === undefined) {\n                throw new UnexpectedUndefinedError('HHBPOE17834');\n            }\n            else {\n                this._popoutEvent();\n            }\n        }\n        else {\n            const activeComponentItem = this._getActiveComponentItemEvent();\n            if (activeComponentItem) {\n                activeComponentItem.popout();\n            }\n            // else: if the stack is empty there won't be an active item (and nothing to popout)\n        }\n    }\n    /** @internal */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    handleButtonMaximiseToggleEvent(ev) {\n        if (this._maximiseToggleEvent === undefined) {\n            throw new UnexpectedUndefinedError('HHBMTE16834');\n        }\n        else {\n            this._maximiseToggleEvent();\n        }\n    }\n    /**\n     * Invoked when the header's background is clicked (not it's tabs or controls)\n     * @internal\n     */\n    onClick(event) {\n        if (event.target === this._element) {\n            this.notifyClick(event);\n        }\n    }\n    /**\n     * Invoked when the header's background is touched (not it's tabs or controls)\n     * @internal\n     */\n    onTouchStart(event) {\n        if (event.target === this._element) {\n            this.notifyTouchStart(event);\n        }\n    }\n    /** @internal */\n    notifyClick(ev) {\n        if (this._clickEvent === undefined) {\n            throw new UnexpectedUndefinedError('HNHC46834');\n        }\n        else {\n            this._clickEvent(ev);\n        }\n    }\n    /** @internal */\n    notifyTouchStart(ev) {\n        if (this._touchStartEvent === undefined) {\n            throw new UnexpectedUndefinedError('HNHTS46834');\n        }\n        else {\n            this._touchStartEvent(ev);\n        }\n    }\n}\n//# sourceMappingURL=header.js.map","import { pixelsToNumber } from './utils';\n/** @internal */\nexport function getJQueryOffset(element) {\n    const rect = element.getBoundingClientRect();\n    return {\n        top: rect.top + document.body.scrollTop,\n        left: rect.left + document.body.scrollLeft,\n    };\n}\n/** @internal */\nexport function getJQueryLeftAndTop(element) {\n    const style = getComputedStyle(element, null);\n    const leftAndTop = {\n        left: pixelsToNumber(style.left),\n        top: pixelsToNumber(style.top),\n    };\n    return leftAndTop;\n}\n//# sourceMappingURL=jquery-legacy.js.map","import { ComponentItemConfig, ItemConfig } from '../config/config';\nimport { AssertError, UnexpectedNullError } from '../errors/internal-error';\nimport { EventEmitter } from '../utils/event-emitter';\nimport { LogicalZIndex, LogicalZIndexToDefaultMap } from '../utils/types';\nimport { deepExtend, setElementHeight, setElementWidth } from '../utils/utils';\n/** @public */\nexport class ComponentContainer extends EventEmitter {\n    /** @internal */\n    constructor(\n    /** @internal */\n    _config, \n    /** @internal */\n    _parent, \n    /** @internal */\n    _layoutManager, \n    /** @internal */\n    _element, \n    /** @internal */\n    _updateItemConfigEvent, \n    /** @internal */\n    _showEvent, \n    /** @internal */\n    _hideEvent, \n    /** @internal */\n    _focusEvent, \n    /** @internal */\n    _blurEvent) {\n        super();\n        this._config = _config;\n        this._parent = _parent;\n        this._layoutManager = _layoutManager;\n        this._element = _element;\n        this._updateItemConfigEvent = _updateItemConfigEvent;\n        this._showEvent = _showEvent;\n        this._hideEvent = _hideEvent;\n        this._focusEvent = _focusEvent;\n        this._blurEvent = _blurEvent;\n        /** @internal */\n        this._stackMaximised = false;\n        this._width = 0;\n        this._height = 0;\n        this._visible = true;\n        this._isShownWithZeroDimensions = true;\n        this._componentType = _config.componentType;\n        this._isClosable = _config.isClosable;\n        this._initialState = _config.componentState;\n        this._state = this._initialState;\n        this._boundComponent = this.layoutManager.bindComponent(this, _config);\n        this.updateElementPositionPropertyFromBoundComponent();\n    }\n    get width() { return this._width; }\n    get height() { return this._height; }\n    get parent() { return this._parent; }\n    /** @internal @deprecated use {@link (ComponentContainer:class).componentType} */\n    get componentName() { return this._componentType; }\n    get componentType() { return this._componentType; }\n    get virtual() { return this._boundComponent.virtual; }\n    get component() { return this._boundComponent.component; }\n    get tab() { return this._tab; }\n    get title() { return this._parent.title; }\n    get layoutManager() { return this._layoutManager; }\n    get isHidden() { return !this._visible; }\n    get visible() { return this._visible; }\n    get state() { return this._state; }\n    /** Return the initial component state */\n    get initialState() { return this._initialState; }\n    /** The inner DOM element where the container's content is intended to live in */\n    get element() { return this._element; }\n    /** @internal */\n    destroy() {\n        this.releaseComponent();\n        this.stateRequestEvent = undefined;\n        this.emit('destroy');\n    }\n    /** @deprecated use {@link (ComponentContainer:class).element } */\n    getElement() {\n        return this._element;\n    }\n    /**\n     * Hides the container's component item (and hence, the container) if not already hidden.\n     * Emits hide event prior to hiding the container.\n     */\n    hide() {\n        this._hideEvent();\n    }\n    /**\n     * Shows the container's component item (and hence, the container) if not visible.\n     * Emits show event prior to hiding the container.\n     */\n    show() {\n        this._showEvent();\n    }\n    /**\n     * Focus this component in Layout.\n     */\n    focus(suppressEvent = false) {\n        this._focusEvent(suppressEvent);\n    }\n    /**\n     * Remove focus from this component in Layout.\n     */\n    blur(suppressEvent = false) {\n        this._blurEvent(suppressEvent);\n    }\n    /**\n     * Set the size from within the container. Traverses up\n     * the item tree until it finds a row or column element\n     * and resizes its items accordingly.\n     *\n     * If this container isn't a descendant of a row or column\n     * it returns false\n     * @param width - The new width in pixel\n     * @param height - The new height in pixel\n     *\n     * @returns resizeSuccesful\n     *\n     * @internal\n     */\n    setSize(width, height) {\n        let ancestorItem = this._parent;\n        if (ancestorItem.isColumn || ancestorItem.isRow || ancestorItem.parent === null) {\n            throw new AssertError('ICSSPRC', 'ComponentContainer cannot have RowColumn Parent');\n        }\n        else {\n            let ancestorChildItem;\n            do {\n                ancestorChildItem = ancestorItem;\n                ancestorItem = ancestorItem.parent;\n            } while (ancestorItem !== null && !ancestorItem.isColumn && !ancestorItem.isRow);\n            if (ancestorItem === null) {\n                // no Row or Column found\n                return false;\n            }\n            else {\n                // ancestorItem is Row or Column\n                const direction = ancestorItem.isColumn ? 'height' : 'width';\n                const currentSize = this[direction];\n                if (currentSize === null) {\n                    throw new UnexpectedNullError('ICSSCS11194');\n                }\n                else {\n                    const newSize = direction === 'height' ? height : width;\n                    const totalPixel = currentSize * (1 / (ancestorChildItem[direction] / 100));\n                    const percentage = (newSize / totalPixel) * 100;\n                    const delta = (ancestorChildItem[direction] - percentage) / (ancestorItem.contentItems.length - 1);\n                    for (let i = 0; i < ancestorItem.contentItems.length; i++) {\n                        if (ancestorItem.contentItems[i] === ancestorChildItem) {\n                            ancestorItem.contentItems[i][direction] = percentage;\n                        }\n                        else {\n                            ancestorItem.contentItems[i][direction] += delta;\n                        }\n                    }\n                    ancestorItem.updateSize(false);\n                    return true;\n                }\n            }\n        }\n    }\n    /**\n     * Closes the container if it is closable. Can be called by\n     * both the component within at as well as the contentItem containing\n     * it. Emits a close event before the container itself is closed.\n     */\n    close() {\n        if (this._isClosable) {\n            this.emit('close');\n            this._parent.close();\n        }\n    }\n    /** Replaces component without affecting layout */\n    replaceComponent(itemConfig) {\n        this.releaseComponent();\n        if (!ItemConfig.isComponent(itemConfig)) {\n            throw new Error('ReplaceComponent not passed a component ItemConfig');\n        }\n        else {\n            const config = ComponentItemConfig.resolve(itemConfig);\n            this._initialState = config.componentState;\n            this._state = this._initialState;\n            this._componentType = config.componentType;\n            this._updateItemConfigEvent(config);\n            this._boundComponent = this.layoutManager.bindComponent(this, config);\n            this.updateElementPositionPropertyFromBoundComponent();\n            if (this._boundComponent.virtual) {\n                if (this.virtualVisibilityChangeRequiredEvent !== undefined) {\n                    this.virtualVisibilityChangeRequiredEvent(this, this._visible);\n                }\n                if (this.virtualRectingRequiredEvent !== undefined) {\n                    this._layoutManager.fireBeforeVirtualRectingEvent(1);\n                    try {\n                        this.virtualRectingRequiredEvent(this, this._width, this._height);\n                    }\n                    finally {\n                        this._layoutManager.fireAfterVirtualRectingEvent();\n                    }\n                }\n                this.setBaseLogicalZIndex();\n            }\n            this.emit('stateChanged');\n        }\n    }\n    /**\n     * Returns the initial component state or the latest passed in setState()\n     * @returns state\n     * @deprecated Use {@link (ComponentContainer:class).initialState}\n     */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Merges the provided state into the current one\n     * @deprecated Use {@link (ComponentContainer:class).stateRequestEvent}\n     */\n    extendState(state) {\n        const extendedState = deepExtend(this._state, state);\n        this.setState(extendedState);\n    }\n    /**\n     * Sets the component state\n     * @deprecated Use {@link (ComponentContainer:class).stateRequestEvent}\n     */\n    setState(state) {\n        this._state = state;\n        this._parent.emitBaseBubblingEvent('stateChanged');\n    }\n    /**\n     * Set's the components title\n     */\n    setTitle(title) {\n        this._parent.setTitle(title);\n    }\n    /** @internal */\n    setTab(tab) {\n        this._tab = tab;\n        this.emit('tab', tab);\n    }\n    /** @internal */\n    setVisibility(value) {\n        if (this._boundComponent.virtual) {\n            if (this.virtualVisibilityChangeRequiredEvent !== undefined) {\n                this.virtualVisibilityChangeRequiredEvent(this, value);\n            }\n        }\n        if (value) {\n            if (!this._visible) {\n                this._visible = true;\n                if (this._height === 0 && this._width === 0) {\n                    this._isShownWithZeroDimensions = true;\n                }\n                else {\n                    this._isShownWithZeroDimensions = false;\n                    this.setSizeToNodeSize(this._width, this._height, true);\n                    this.emitShow();\n                }\n            }\n            else {\n                if (this._isShownWithZeroDimensions && (this._height !== 0 || this._width !== 0)) {\n                    this._isShownWithZeroDimensions = false;\n                    this.setSizeToNodeSize(this._width, this._height, true);\n                    this.emitShow();\n                }\n            }\n        }\n        else {\n            if (this._visible) {\n                this._visible = false;\n                this._isShownWithZeroDimensions = false;\n                this.emitHide();\n            }\n        }\n    }\n    setBaseLogicalZIndex() {\n        this.setLogicalZIndex(LogicalZIndex.base);\n    }\n    setLogicalZIndex(logicalZIndex) {\n        if (logicalZIndex !== this._logicalZIndex) {\n            this._logicalZIndex = logicalZIndex;\n            this.notifyVirtualZIndexChangeRequired();\n        }\n    }\n    /**\n     * Set the container's size, but considered temporary (for dragging)\n     * so don't emit any events.\n     * @internal\n     */\n    enterDragMode(width, height) {\n        this._width = width;\n        this._height = height;\n        setElementWidth(this._element, width);\n        setElementHeight(this._element, height);\n        this.setLogicalZIndex(LogicalZIndex.drag);\n        this.drag();\n    }\n    /** @internal */\n    exitDragMode() {\n        this.setBaseLogicalZIndex();\n    }\n    /** @internal */\n    enterStackMaximised() {\n        this._stackMaximised = true;\n        this.setLogicalZIndex(LogicalZIndex.stackMaximised);\n    }\n    /** @internal */\n    exitStackMaximised() {\n        this.setBaseLogicalZIndex();\n        this._stackMaximised = false;\n    }\n    /** @internal */\n    drag() {\n        if (this._boundComponent.virtual) {\n            if (this.virtualRectingRequiredEvent !== undefined) {\n                this._layoutManager.fireBeforeVirtualRectingEvent(1);\n                try {\n                    this.virtualRectingRequiredEvent(this, this._width, this._height);\n                }\n                finally {\n                    this._layoutManager.fireAfterVirtualRectingEvent();\n                }\n            }\n        }\n    }\n    /**\n     * Sets the container's size. Called by the container's component item.\n     * To instead set the size programmatically from within the component itself,\n     * use the public setSize method\n     * @param width - in px\n     * @param height - in px\n     * @param force - set even if no change\n     * @internal\n     */\n    setSizeToNodeSize(width, height, force) {\n        if (width !== this._width || height !== this._height || force) {\n            this._width = width;\n            this._height = height;\n            setElementWidth(this._element, width);\n            setElementHeight(this._element, height);\n            if (this._boundComponent.virtual) {\n                this.addVirtualSizedContainerToLayoutManager();\n            }\n            else {\n                this.emit('resize');\n                this.checkShownFromZeroDimensions();\n            }\n        }\n    }\n    /** @internal */\n    notifyVirtualRectingRequired() {\n        if (this.virtualRectingRequiredEvent !== undefined) {\n            this.virtualRectingRequiredEvent(this, this._width, this._height);\n            this.emit('resize');\n            this.checkShownFromZeroDimensions();\n        }\n    }\n    /** @internal */\n    notifyVirtualZIndexChangeRequired() {\n        if (this.virtualZIndexChangeRequiredEvent !== undefined) {\n            const logicalZIndex = this._logicalZIndex;\n            const defaultZIndex = LogicalZIndexToDefaultMap[logicalZIndex];\n            this.virtualZIndexChangeRequiredEvent(this, logicalZIndex, defaultZIndex);\n        }\n    }\n    /** @internal */\n    updateElementPositionPropertyFromBoundComponent() {\n        if (this._boundComponent.virtual) {\n            this._element.style.position = 'static';\n        }\n        else {\n            this._element.style.position = ''; // set it back to attribute value\n        }\n    }\n    /** @internal */\n    addVirtualSizedContainerToLayoutManager() {\n        this._layoutManager.beginVirtualSizedContainerAdding();\n        try {\n            this._layoutManager.addVirtualSizedContainer(this);\n        }\n        finally {\n            this._layoutManager.endVirtualSizedContainerAdding();\n        }\n    }\n    /** @internal */\n    checkShownFromZeroDimensions() {\n        if (this._isShownWithZeroDimensions && (this._height !== 0 || this._width !== 0)) {\n            this._isShownWithZeroDimensions = false;\n            this.emitShow();\n        }\n    }\n    /** @internal */\n    emitShow() {\n        this.emit('shown');\n        this.emit('show');\n    }\n    /** @internal */\n    emitHide() {\n        this.emit('hide');\n    }\n    /** @internal */\n    releaseComponent() {\n        if (this._stackMaximised) {\n            this.exitStackMaximised();\n        }\n        this.emit('beforeComponentRelease', this._boundComponent.component);\n        this.layoutManager.unbindComponent(this, this._boundComponent.virtual, this._boundComponent.component);\n    }\n}\n//# sourceMappingURL=component-container.js.map","import { AssertError, UnexpectedNullError } from '../errors/internal-error';\nimport { EventEmitter } from '../utils/event-emitter';\nimport { getJQueryOffset } from '../utils/jquery-legacy';\nimport { getUniqueId, setElementDisplayVisibility } from '../utils/utils';\n/**\n * This is the baseclass that all content items inherit from.\n * Most methods provide a subset of what the sub-classes do.\n *\n * It also provides a number of functions for tree traversal\n * @public\n */\nexport class ContentItem extends EventEmitter {\n    /** @internal */\n    constructor(layoutManager, config, \n    /** @internal */\n    _parent, \n    /** @internal */\n    _element) {\n        super();\n        this.layoutManager = layoutManager;\n        this._parent = _parent;\n        this._element = _element;\n        /** @internal */\n        this._popInParentIds = [];\n        this._type = config.type;\n        this._id = config.id;\n        this._isInitialised = false;\n        this.isGround = false;\n        this.isRow = false;\n        this.isColumn = false;\n        this.isStack = false;\n        this.isComponent = false;\n        this.width = config.width;\n        this.minWidth = config.minWidth;\n        this.height = config.height;\n        this.minHeight = config.minHeight;\n        this._isClosable = config.isClosable;\n        this._pendingEventPropagations = {};\n        this._throttledEvents = ['stateChanged'];\n        this._contentItems = this.createContentItems(config.content);\n    }\n    get type() { return this._type; }\n    get id() { return this._id; }\n    set id(value) { this._id = value; }\n    /** @internal */\n    get popInParentIds() { return this._popInParentIds; }\n    get parent() { return this._parent; }\n    get contentItems() { return this._contentItems; }\n    get isClosable() { return this._isClosable; }\n    get element() { return this._element; }\n    get isInitialised() { return this._isInitialised; }\n    static isStack(item) {\n        return item.isStack;\n    }\n    static isComponentItem(item) {\n        return item.isComponent;\n    }\n    static isComponentParentableItem(item) {\n        return item.isStack || item.isGround;\n    }\n    /**\n     * Removes a child node (and its children) from the tree\n     * @param contentItem - The child item to remove\n     * @param keepChild - Whether to destroy the removed item\n     */\n    removeChild(contentItem, keepChild = false) {\n        /*\n         * Get the position of the item that's to be removed within all content items this node contains\n         */\n        const index = this._contentItems.indexOf(contentItem);\n        /*\n         * Make sure the content item to be removed is actually a child of this item\n         */\n        if (index === -1) {\n            throw new Error('Can\\'t remove child item. Unknown content item');\n        }\n        /**\n         * Call destroy on the content item.\n         * All children are destroyed as well\n         */\n        if (!keepChild) {\n            this._contentItems[index].destroy();\n        }\n        /**\n         * Remove the content item from this nodes array of children\n         */\n        this._contentItems.splice(index, 1);\n        /**\n         * If this node still contains other content items, adjust their size\n         */\n        if (this._contentItems.length > 0) {\n            this.updateSize(false);\n        }\n        else {\n            /**\n             * If this was the last content item, remove this node as well\n             */\n            if (!this.isGround && this._isClosable === true) {\n                if (this._parent === null) {\n                    throw new UnexpectedNullError('CIUC00874');\n                }\n                else {\n                    this._parent.removeChild(this);\n                }\n            }\n        }\n    }\n    /**\n     * Sets up the tree structure for the newly added child\n     * The responsibility for the actual DOM manipulations lies\n     * with the concrete item\n     *\n     * @param contentItem -\n     * @param index - If omitted item will be appended\n     * @param suspendResize - Used by descendent implementations\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addChild(contentItem, index, suspendResize) {\n        index !== null && index !== void 0 ? index : (index = this._contentItems.length);\n        this._contentItems.splice(index, 0, contentItem);\n        contentItem.setParent(this);\n        if (this._isInitialised === true && contentItem._isInitialised === false) {\n            contentItem.init();\n        }\n        return index;\n    }\n    /**\n     * Replaces oldChild with newChild\n     * @param oldChild -\n     * @param newChild -\n     * @internal\n     */\n    replaceChild(oldChild, newChild, destroyOldChild = false) {\n        // Do not try to replace ComponentItem - will not work\n        const index = this._contentItems.indexOf(oldChild);\n        const parentNode = oldChild._element.parentNode;\n        if (index === -1) {\n            throw new AssertError('CIRCI23232', 'Can\\'t replace child. oldChild is not child of this');\n        }\n        if (parentNode === null) {\n            throw new UnexpectedNullError('CIRCP23232');\n        }\n        else {\n            parentNode.replaceChild(newChild._element, oldChild._element);\n            /*\n            * Optionally destroy the old content item\n            */\n            if (destroyOldChild === true) {\n                oldChild._parent = null;\n                oldChild.destroy(); // will now also destroy all children of oldChild\n            }\n            /*\n            * Wire the new contentItem into the tree\n            */\n            this._contentItems[index] = newChild;\n            newChild.setParent(this);\n            // newChild inherits the sizes from the old child:\n            newChild.height = oldChild.height;\n            newChild.width = oldChild.width;\n            //TODO This doesn't update the config... refactor to leave item nodes untouched after creation\n            if (newChild._parent === null) {\n                throw new UnexpectedNullError('CIRCNC45699');\n            }\n            else {\n                if (newChild._parent._isInitialised === true && newChild._isInitialised === false) {\n                    newChild.init();\n                }\n                this.updateSize(false);\n            }\n        }\n    }\n    /**\n     * Convenience method.\n     * Shorthand for this.parent.removeChild( this )\n     */\n    remove() {\n        if (this._parent === null) {\n            throw new UnexpectedNullError('CIR11110');\n        }\n        else {\n            this._parent.removeChild(this);\n        }\n    }\n    /**\n     * Removes the component from the layout and creates a new\n     * browser window with the component and its children inside\n     */\n    popout() {\n        const parentId = getUniqueId();\n        const browserPopout = this.layoutManager.createPopoutFromContentItem(this, undefined, parentId, undefined);\n        this.emitBaseBubblingEvent('stateChanged');\n        return browserPopout;\n    }\n    /** @internal */\n    calculateConfigContent() {\n        const contentItems = this._contentItems;\n        const count = contentItems.length;\n        const result = new Array(count);\n        for (let i = 0; i < count; i++) {\n            const item = contentItems[i];\n            result[i] = item.toConfig();\n        }\n        return result;\n    }\n    /** @internal */\n    highlightDropZone(x, y, area) {\n        const dropTargetIndicator = this.layoutManager.dropTargetIndicator;\n        if (dropTargetIndicator === null) {\n            throw new UnexpectedNullError('ACIHDZ5593');\n        }\n        else {\n            dropTargetIndicator.highlightArea(area);\n        }\n    }\n    /** @internal */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDrop(contentItem, area) {\n        this.addChild(contentItem);\n    }\n    /** @internal */\n    show() {\n        this.layoutManager.beginSizeInvalidation();\n        try {\n            // Not sure why showAllActiveContentItems() was called. GoldenLayout seems to work fine without it.  Left commented code\n            // in source in case a reason for it becomes apparent.\n            // this.layoutManager.showAllActiveContentItems();\n            setElementDisplayVisibility(this._element, true);\n            // this.layoutManager.updateSizeFromContainer();\n            for (let i = 0; i < this._contentItems.length; i++) {\n                this._contentItems[i].show();\n            }\n        }\n        finally {\n            this.layoutManager.endSizeInvalidation();\n        }\n    }\n    /**\n     * Destroys this item ands its children\n     * @internal\n     */\n    destroy() {\n        for (let i = 0; i < this._contentItems.length; i++) {\n            this._contentItems[i].destroy();\n        }\n        this._contentItems = [];\n        this.emitBaseBubblingEvent('beforeItemDestroyed');\n        this._element.remove();\n        this.emitBaseBubblingEvent('itemDestroyed');\n    }\n    /**\n     * Returns the area the component currently occupies\n     * @internal\n     */\n    getElementArea(element) {\n        element = element !== null && element !== void 0 ? element : this._element;\n        const offset = getJQueryOffset(element);\n        const width = element.offsetWidth;\n        const height = element.offsetHeight;\n        // const widthAndHeight = getJQueryWidthAndHeight(element);\n        return {\n            x1: offset.left + 1,\n            y1: offset.top + 1,\n            x2: offset.left + width - 1,\n            y2: offset.top + height - 1,\n            surface: width * height,\n            contentItem: this\n        };\n    }\n    /**\n     * The tree of content items is created in two steps: First all content items are instantiated,\n     * then init is called recursively from top to bottem. This is the basic init function,\n     * it can be used, extended or overwritten by the content items\n     *\n     * Its behaviour depends on the content item\n     * @internal\n     */\n    init() {\n        this._isInitialised = true;\n        this.emitBaseBubblingEvent('itemCreated');\n        this.emitUnknownBubblingEvent(this.type + 'Created');\n    }\n    /** @internal */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /** @internal */\n    addPopInParentId(id) {\n        if (!this.popInParentIds.includes(id)) {\n            this.popInParentIds.push(id);\n        }\n    }\n    /** @internal */\n    initContentItems() {\n        for (let i = 0; i < this._contentItems.length; i++) {\n            this._contentItems[i].init();\n        }\n    }\n    /** @internal */\n    hide() {\n        this.layoutManager.beginSizeInvalidation();\n        try {\n            setElementDisplayVisibility(this._element, false);\n            // this.layoutManager.updateSizeFromContainer();\n        }\n        finally {\n            this.layoutManager.endSizeInvalidation();\n        }\n    }\n    /** @internal */\n    updateContentItemsSize(force) {\n        for (let i = 0; i < this._contentItems.length; i++) {\n            this._contentItems[i].updateSize(force);\n        }\n    }\n    /**\n     * creates all content items for this node at initialisation time\n     * PLEASE NOTE, please see addChild for adding contentItems at runtime\n     * @internal\n     */\n    createContentItems(content) {\n        const count = content.length;\n        const result = new Array(count);\n        for (let i = 0; i < content.length; i++) {\n            result[i] = this.layoutManager.createContentItem(content[i], this);\n        }\n        return result;\n    }\n    /**\n     * Called for every event on the item tree. Decides whether the event is a bubbling\n     * event and propagates it to its parent\n     *\n     * @param name - The name of the event\n     * @param event -\n     * @internal\n     */\n    propagateEvent(name, args) {\n        if (args.length === 1) {\n            const event = args[0];\n            if (event instanceof EventEmitter.BubblingEvent &&\n                event.isPropagationStopped === false &&\n                this._isInitialised === true) {\n                /**\n                 * In some cases (e.g. if an element is created from a DragSource) it\n                 * doesn't have a parent and is not a child of GroundItem. If that's the case\n                 * propagate the bubbling event from the top level of the substree directly\n                 * to the layoutManager\n                 */\n                if (this.isGround === false && this._parent) {\n                    this._parent.emitUnknown(name, event);\n                }\n                else {\n                    this.scheduleEventPropagationToLayoutManager(name, event);\n                }\n            }\n        }\n    }\n    tryBubbleEvent(name, args) {\n        if (args.length === 1) {\n            const event = args[0];\n            if (event instanceof EventEmitter.BubblingEvent &&\n                event.isPropagationStopped === false &&\n                this._isInitialised === true) {\n                /**\n                 * In some cases (e.g. if an element is created from a DragSource) it\n                 * doesn't have a parent and is not a child of GroundItem. If that's the case\n                 * propagate the bubbling event from the top level of the substree directly\n                 * to the layoutManager\n                 */\n                if (this.isGround === false && this._parent) {\n                    this._parent.emitUnknown(name, event);\n                }\n                else {\n                    this.scheduleEventPropagationToLayoutManager(name, event);\n                }\n            }\n        }\n    }\n    /**\n     * All raw events bubble up to the Ground element. Some events that\n     * are propagated to - and emitted by - the layoutManager however are\n     * only string-based, batched and sanitized to make them more usable\n     *\n     * @param name - The name of the event\n     * @internal\n     */\n    scheduleEventPropagationToLayoutManager(name, event) {\n        if (this._throttledEvents.indexOf(name) === -1) {\n            this.layoutManager.emitUnknown(name, event);\n        }\n        else {\n            if (this._pendingEventPropagations[name] !== true) {\n                this._pendingEventPropagations[name] = true;\n                globalThis.requestAnimationFrame(() => this.propagateEventToLayoutManager(name, event));\n            }\n        }\n    }\n    /**\n     * Callback for events scheduled by _scheduleEventPropagationToLayoutManager\n     *\n     * @param name - The name of the event\n     * @internal\n     */\n    propagateEventToLayoutManager(name, event) {\n        this._pendingEventPropagations[name] = false;\n        this.layoutManager.emitUnknown(name, event);\n    }\n}\n//# sourceMappingURL=content-item.js.map","import { ResolvedComponentItemConfig, ResolvedHeaderedItemConfig } from '../config/resolved-config';\nimport { ComponentContainer } from '../container/component-container';\nimport { UnexpectedNullError } from '../errors/internal-error';\nimport { ItemType } from '../utils/types';\nimport { getElementWidthAndHeight, setElementHeight, setElementWidth } from '../utils/utils';\nimport { ContentItem } from './content-item';\n/** @public */\nexport class ComponentItem extends ContentItem {\n    /** @internal */\n    constructor(layoutManager, config, \n    /** @internal */\n    _parentItem) {\n        super(layoutManager, config, _parentItem, document.createElement('div'));\n        this._parentItem = _parentItem;\n        /** @internal */\n        this._focused = false;\n        this.isComponent = true;\n        this._reorderEnabled = config.reorderEnabled;\n        this.applyUpdatableConfig(config);\n        this._initialWantMaximise = config.maximised;\n        const containerElement = document.createElement('div');\n        containerElement.classList.add(\"lm_content\" /* Content */);\n        this.element.appendChild(containerElement);\n        this._container = new ComponentContainer(config, this, layoutManager, containerElement, (itemConfig) => this.handleUpdateItemConfigEvent(itemConfig), () => this.show(), () => this.hide(), (suppressEvent) => this.focus(suppressEvent), (suppressEvent) => this.blur(suppressEvent));\n    }\n    /** @internal @deprecated use {@link (ComponentItem:class).componentType} */\n    get componentName() { return this._container.componentType; }\n    get componentType() { return this._container.componentType; }\n    get reorderEnabled() { return this._reorderEnabled; }\n    /** @internal */\n    get initialWantMaximise() { return this._initialWantMaximise; }\n    get component() { return this._container.component; }\n    get container() { return this._container; }\n    get parentItem() { return this._parentItem; }\n    get headerConfig() { return this._headerConfig; }\n    get title() { return this._title; }\n    get tab() { return this._tab; }\n    get focused() { return this._focused; }\n    /** @internal */\n    destroy() {\n        this._container.destroy();\n        super.destroy();\n    }\n    applyUpdatableConfig(config) {\n        this.setTitle(config.title);\n        this._headerConfig = config.header;\n    }\n    toConfig() {\n        const stateRequestEvent = this._container.stateRequestEvent;\n        const state = stateRequestEvent === undefined ? this._container.state : stateRequestEvent();\n        const result = {\n            type: ItemType.component,\n            content: [],\n            width: this.width,\n            minWidth: this.minWidth,\n            height: this.height,\n            minHeight: this.minHeight,\n            id: this.id,\n            maximised: false,\n            isClosable: this.isClosable,\n            reorderEnabled: this._reorderEnabled,\n            title: this._title,\n            header: ResolvedHeaderedItemConfig.Header.createCopy(this._headerConfig),\n            componentType: ResolvedComponentItemConfig.copyComponentType(this.componentType),\n            componentState: state,\n        };\n        return result;\n    }\n    close() {\n        if (this.parent === null) {\n            throw new UnexpectedNullError('CIC68883');\n        }\n        else {\n            this.parent.removeChild(this, false);\n        }\n    }\n    // Used by Drag Proxy\n    /** @internal */\n    enterDragMode(width, height) {\n        setElementWidth(this.element, width);\n        setElementHeight(this.element, height);\n        this._container.enterDragMode(width, height);\n    }\n    /** @internal */\n    exitDragMode() {\n        this._container.exitDragMode();\n    }\n    /** @internal */\n    enterStackMaximised() {\n        this._container.enterStackMaximised();\n    }\n    /** @internal */\n    exitStackMaximised() {\n        this._container.exitStackMaximised();\n    }\n    // Used by Drag Proxy\n    /** @internal */\n    drag() {\n        this._container.drag();\n    }\n    /** @internal */\n    updateSize(force) {\n        this.updateNodeSize(force);\n    }\n    /** @internal */\n    init() {\n        this.updateNodeSize(false);\n        super.init();\n        this._container.emit('open');\n        this.initContentItems();\n    }\n    /**\n     * Set this component's title\n     *\n     * @public\n     * @param title -\n     */\n    setTitle(title) {\n        this._title = title;\n        this.emit('titleChanged', title);\n        this.emit('stateChanged');\n    }\n    setTab(tab) {\n        this._tab = tab;\n        this.emit('tab', tab);\n        this._container.setTab(tab);\n    }\n    /** @internal */\n    hide() {\n        super.hide();\n        this._container.setVisibility(false);\n    }\n    /** @internal */\n    show() {\n        super.show();\n        this._container.setVisibility(true);\n    }\n    /**\n     * Focuses the item if it is not already focused\n     */\n    focus(suppressEvent = false) {\n        this.parentItem.setActiveComponentItem(this, true, suppressEvent);\n    }\n    /** @internal */\n    setFocused(suppressEvent) {\n        this._focused = true;\n        this.tab.setFocused();\n        if (!suppressEvent) {\n            this.emitBaseBubblingEvent('focus');\n        }\n    }\n    /**\n     * Blurs (defocuses) the item if it is focused\n     */\n    blur(suppressEvent = false) {\n        if (this._focused) {\n            this.layoutManager.setFocusedComponentItem(undefined, suppressEvent);\n        }\n    }\n    /** @internal */\n    setBlurred(suppressEvent) {\n        this._focused = false;\n        this.tab.setBlurred();\n        if (!suppressEvent) {\n            this.emitBaseBubblingEvent('blur');\n        }\n    }\n    /** @internal */\n    setParent(parent) {\n        this._parentItem = parent;\n        super.setParent(parent);\n    }\n    /** @internal */\n    handleUpdateItemConfigEvent(itemConfig) {\n        this.applyUpdatableConfig(itemConfig);\n    }\n    /** @internal */\n    updateNodeSize(force) {\n        if (this.element.style.display !== 'none') {\n            // Do not update size of hidden components to prevent unwanted reflows\n            const { width, height } = getElementWidthAndHeight(this.element);\n            this._container.setSizeToNodeSize(width, height, force);\n        }\n    }\n}\n//# sourceMappingURL=component-item.js.map","import { ContentItem } from './content-item';\nexport class ComponentParentableItem extends ContentItem {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this._focused = false;\n    }\n    get focused() { return this._focused; }\n    /** @internal */\n    setFocusedValue(value) {\n        this._focused = value;\n    }\n}\n//# sourceMappingURL=component-parentable-item.js.map","import { ItemConfig } from '../config/config';\nimport { ResolvedHeaderedItemConfig, ResolvedItemConfig, ResolvedStackItemConfig } from '../config/resolved-config';\nimport { Header } from '../controls/header';\nimport { AssertError, UnexpectedNullError, UnexpectedUndefinedError } from '../errors/internal-error';\nimport { EventEmitter } from '../utils/event-emitter';\nimport { getJQueryOffset } from '../utils/jquery-legacy';\nimport { ItemType, Side, WidthOrHeightPropertyName } from '../utils/types';\nimport { getElementHeight, getElementWidth, getElementWidthAndHeight, numberToPixels, setElementDisplayVisibility } from '../utils/utils';\nimport { ComponentItem } from './component-item';\nimport { ComponentParentableItem } from './component-parentable-item';\nimport { ContentItem } from './content-item';\n/** @public */\nexport class Stack extends ComponentParentableItem {\n    /** @internal */\n    constructor(layoutManager, config, parent) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;\n        super(layoutManager, config, parent, Stack.createElement(document));\n        /** @internal */\n        this._headerSideChanged = false;\n        /** @internal */\n        this._resizeListener = () => this.handleResize();\n        /** @internal */\n        this._maximisedListener = () => this.handleMaximised();\n        /** @internal */\n        this._minimisedListener = () => this.handleMinimised();\n        this._headerConfig = config.header;\n        const layoutHeaderConfig = layoutManager.layoutConfig.header;\n        const configContent = config.content;\n        // If stack has only one component, then we can also check this for header settings\n        let componentHeaderConfig;\n        if (configContent.length !== 1) {\n            componentHeaderConfig = undefined;\n        }\n        else {\n            const firstChildItemConfig = configContent[0];\n            componentHeaderConfig = firstChildItemConfig.header; // will be undefined if not component (and wont be stack)\n        }\n        this._initialWantMaximise = config.maximised;\n        this._initialActiveItemIndex = (_a = config.activeItemIndex) !== null && _a !== void 0 ? _a : 0; // make sure defined\n        // check for defined value for each item in order of Stack (this Item), Component (first child), Manager.\n        const show = (_d = (_c = (_b = this._headerConfig) === null || _b === void 0 ? void 0 : _b.show) !== null && _c !== void 0 ? _c : componentHeaderConfig === null || componentHeaderConfig === void 0 ? void 0 : componentHeaderConfig.show) !== null && _d !== void 0 ? _d : layoutHeaderConfig.show;\n        const popout = (_g = (_f = (_e = this._headerConfig) === null || _e === void 0 ? void 0 : _e.popout) !== null && _f !== void 0 ? _f : componentHeaderConfig === null || componentHeaderConfig === void 0 ? void 0 : componentHeaderConfig.popout) !== null && _g !== void 0 ? _g : layoutHeaderConfig.popout;\n        const maximise = (_k = (_j = (_h = this._headerConfig) === null || _h === void 0 ? void 0 : _h.maximise) !== null && _j !== void 0 ? _j : componentHeaderConfig === null || componentHeaderConfig === void 0 ? void 0 : componentHeaderConfig.maximise) !== null && _k !== void 0 ? _k : layoutHeaderConfig.maximise;\n        const close = (_o = (_m = (_l = this._headerConfig) === null || _l === void 0 ? void 0 : _l.close) !== null && _m !== void 0 ? _m : componentHeaderConfig === null || componentHeaderConfig === void 0 ? void 0 : componentHeaderConfig.close) !== null && _o !== void 0 ? _o : layoutHeaderConfig.close;\n        const minimise = (_r = (_q = (_p = this._headerConfig) === null || _p === void 0 ? void 0 : _p.minimise) !== null && _q !== void 0 ? _q : componentHeaderConfig === null || componentHeaderConfig === void 0 ? void 0 : componentHeaderConfig.minimise) !== null && _r !== void 0 ? _r : layoutHeaderConfig.minimise;\n        const tabDropdown = (_u = (_t = (_s = this._headerConfig) === null || _s === void 0 ? void 0 : _s.tabDropdown) !== null && _t !== void 0 ? _t : componentHeaderConfig === null || componentHeaderConfig === void 0 ? void 0 : componentHeaderConfig.tabDropdown) !== null && _u !== void 0 ? _u : layoutHeaderConfig.tabDropdown;\n        this._maximisedEnabled = maximise !== false;\n        const headerSettings = {\n            show: show !== false,\n            side: show === false ? Side.top : show,\n            popoutEnabled: popout !== false,\n            popoutLabel: popout === false ? '' : popout,\n            maximiseEnabled: this._maximisedEnabled,\n            maximiseLabel: maximise === false ? '' : maximise,\n            closeEnabled: close !== false,\n            closeLabel: close === false ? '' : close,\n            minimiseEnabled: true,\n            minimiseLabel: minimise,\n            tabDropdownEnabled: tabDropdown !== false,\n            tabDropdownLabel: tabDropdown === false ? '' : tabDropdown,\n        };\n        this._header = new Header(layoutManager, this, headerSettings, config.isClosable && close !== false, () => this.getActiveComponentItem(), () => this.remove(), () => this.handlePopoutEvent(), () => this.toggleMaximise(), (ev) => this.handleHeaderClickEvent(ev), (ev) => this.handleHeaderTouchStartEvent(ev), (item) => this.handleHeaderComponentRemoveEvent(item), (item) => this.handleHeaderComponentFocusEvent(item), (x, y, dragListener, item) => this.handleHeaderComponentStartDragEvent(x, y, dragListener, item));\n        // this._dropZones = {};\n        this.isStack = true;\n        this._childElementContainer = document.createElement('section');\n        this._childElementContainer.classList.add(\"lm_items\" /* Items */);\n        this.on('resize', this._resizeListener);\n        if (this._maximisedEnabled) {\n            this.on('maximised', this._maximisedListener);\n            this.on('minimised', this._minimisedListener);\n        }\n        this.element.appendChild(this._header.element);\n        this.element.appendChild(this._childElementContainer);\n        this.setupHeaderPosition();\n        this._header.updateClosability();\n    }\n    get childElementContainer() { return this._childElementContainer; }\n    get header() { return this._header; }\n    get headerShow() { return this._header.show; }\n    get headerSide() { return this._header.side; }\n    get headerLeftRightSided() { return this._header.leftRightSided; }\n    /** @internal */\n    get contentAreaDimensions() { return this._contentAreaDimensions; }\n    /** @internal */\n    get initialWantMaximise() { return this._initialWantMaximise; }\n    get isMaximised() { return this === this.layoutManager.maximisedStack; }\n    get stackParent() {\n        if (!this.parent) {\n            throw new Error('Stack should always have a parent');\n        }\n        return this.parent;\n    }\n    /** @internal */\n    updateSize(force) {\n        this.layoutManager.beginVirtualSizedContainerAdding();\n        try {\n            this.updateNodeSize();\n            this.updateContentItemsSize(force);\n        }\n        finally {\n            this.layoutManager.endVirtualSizedContainerAdding();\n        }\n    }\n    /** @internal */\n    init() {\n        if (this.isInitialised === true)\n            return;\n        this.updateNodeSize();\n        for (let i = 0; i < this.contentItems.length; i++) {\n            this._childElementContainer.appendChild(this.contentItems[i].element);\n        }\n        super.init();\n        const contentItems = this.contentItems;\n        const contentItemCount = contentItems.length;\n        if (contentItemCount > 0) { // contentItemCount will be 0 on drag drop\n            if (this._initialActiveItemIndex < 0 || this._initialActiveItemIndex >= contentItemCount) {\n                throw new Error(`ActiveItemIndex out of range: ${this._initialActiveItemIndex} id: ${this.id}`);\n            }\n            else {\n                for (let i = 0; i < contentItemCount; i++) {\n                    const contentItem = contentItems[i];\n                    if (!(contentItem instanceof ComponentItem)) {\n                        throw new Error(`Stack Content Item is not of type ComponentItem: ${i} id: ${this.id}`);\n                    }\n                    else {\n                        this._header.createTab(contentItem, i);\n                        contentItem.hide();\n                        contentItem.container.setBaseLogicalZIndex();\n                    }\n                }\n                this.setActiveComponentItem(contentItems[this._initialActiveItemIndex], false);\n                this._header.updateTabSizes();\n            }\n        }\n        this._header.updateClosability();\n        this.initContentItems();\n    }\n    /** @deprecated Use {@link (Stack:class).setActiveComponentItem} */\n    setActiveContentItem(item) {\n        if (!ContentItem.isComponentItem(item)) {\n            throw new Error('Stack.setActiveContentItem: item is not a ComponentItem');\n        }\n        else {\n            this.setActiveComponentItem(item, false);\n        }\n    }\n    setActiveComponentItem(componentItem, focus, suppressFocusEvent = false) {\n        if (this._activeComponentItem !== componentItem) {\n            if (this.contentItems.indexOf(componentItem) === -1) {\n                throw new Error('componentItem is not a child of this stack');\n            }\n            else {\n                this.layoutManager.beginSizeInvalidation();\n                try {\n                    if (this._activeComponentItem !== undefined) {\n                        this._activeComponentItem.hide();\n                    }\n                    this._activeComponentItem = componentItem;\n                    this._header.processActiveComponentChanged(componentItem);\n                    componentItem.show();\n                }\n                finally {\n                    this.layoutManager.endSizeInvalidation();\n                }\n                this.emit('activeContentItemChanged', componentItem);\n                this.layoutManager.emit('activeContentItemChanged', componentItem);\n                this.emitStateChangedEvent();\n            }\n        }\n        if (this.focused || focus) {\n            this.layoutManager.setFocusedComponentItem(componentItem, suppressFocusEvent);\n        }\n    }\n    /** @deprecated Use {@link (Stack:class).getActiveComponentItem} */\n    getActiveContentItem() {\n        var _a;\n        return (_a = this.getActiveComponentItem()) !== null && _a !== void 0 ? _a : null;\n    }\n    getActiveComponentItem() {\n        return this._activeComponentItem;\n    }\n    /** @internal */\n    focusActiveContentItem() {\n        var _a;\n        (_a = this._activeComponentItem) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    /** @internal */\n    setFocusedValue(value) {\n        this._header.applyFocusedValue(value);\n        super.setFocusedValue(value);\n    }\n    /** @internal */\n    setRowColumnClosable(value) {\n        this._header.setRowColumnClosable(value);\n    }\n    newComponent(componentType, componentState, title, index) {\n        const itemConfig = {\n            type: 'component',\n            componentType,\n            componentState,\n            title,\n        };\n        return this.newItem(itemConfig, index);\n    }\n    addComponent(componentType, componentState, title, index) {\n        const itemConfig = {\n            type: 'component',\n            componentType,\n            componentState,\n            title,\n        };\n        return this.addItem(itemConfig, index);\n    }\n    newItem(itemConfig, index) {\n        index = this.addItem(itemConfig, index);\n        return this.contentItems[index];\n    }\n    addItem(itemConfig, index) {\n        this.layoutManager.checkMinimiseMaximisedStack();\n        const resolvedItemConfig = ItemConfig.resolve(itemConfig);\n        const contentItem = this.layoutManager.createAndInitContentItem(resolvedItemConfig, this);\n        return this.addChild(contentItem, index);\n    }\n    addChild(contentItem, index, focus = false) {\n        if (index !== undefined && index > this.contentItems.length) {\n            index -= 1;\n            throw new AssertError('SAC99728'); // undisplayChild() removed so this condition should no longer occur\n        }\n        if (!(contentItem instanceof ComponentItem)) {\n            throw new AssertError('SACC88532'); // Stacks can only have Component children\n        }\n        else {\n            index = super.addChild(contentItem, index);\n            this._childElementContainer.appendChild(contentItem.element);\n            this._header.createTab(contentItem, index);\n            this.setActiveComponentItem(contentItem, focus);\n            this._header.updateTabSizes();\n            this.updateSize(false);\n            contentItem.container.setBaseLogicalZIndex();\n            this._header.updateClosability();\n            this.emitStateChangedEvent();\n            return index;\n        }\n    }\n    removeChild(contentItem, keepChild) {\n        const componentItem = contentItem;\n        const index = this.contentItems.indexOf(componentItem);\n        const stackWillBeDeleted = this.contentItems.length === 1;\n        if (this._activeComponentItem === componentItem) {\n            if (componentItem.focused) {\n                componentItem.blur();\n            }\n            if (!stackWillBeDeleted) {\n                // At this point we're already sure we have at least one content item left *after*\n                // removing contentItem, so we can safely assume index 1 is a valid one if\n                // the index of contentItem is 0, otherwise we just use the previous content item.\n                const newActiveComponentIdx = index === 0 ? 1 : index - 1;\n                this.setActiveComponentItem(this.contentItems[newActiveComponentIdx], false);\n            }\n        }\n        this._header.removeTab(componentItem);\n        super.removeChild(componentItem, keepChild);\n        if (!stackWillBeDeleted) {\n            this._header.updateClosability();\n        }\n        this.emitStateChangedEvent();\n    }\n    /**\n     * Maximises the Item or minimises it if it is already maximised\n     */\n    toggleMaximise() {\n        if (this.isMaximised) {\n            this.minimise();\n        }\n        else {\n            this.maximise();\n        }\n    }\n    maximise() {\n        if (!this.isMaximised) {\n            this.layoutManager.setMaximisedStack(this);\n            const contentItems = this.contentItems;\n            const contentItemCount = contentItems.length;\n            for (let i = 0; i < contentItemCount; i++) {\n                const contentItem = contentItems[i];\n                if (contentItem instanceof ComponentItem) {\n                    contentItem.enterStackMaximised();\n                }\n                else {\n                    throw new AssertError('SMAXI87773');\n                }\n            }\n            this.emitStateChangedEvent();\n        }\n    }\n    minimise() {\n        if (this.isMaximised) {\n            this.layoutManager.setMaximisedStack(undefined);\n            const contentItems = this.contentItems;\n            const contentItemCount = contentItems.length;\n            for (let i = 0; i < contentItemCount; i++) {\n                const contentItem = contentItems[i];\n                if (contentItem instanceof ComponentItem) {\n                    contentItem.exitStackMaximised();\n                }\n                else {\n                    throw new AssertError('SMINI87773');\n                }\n            }\n            this.emitStateChangedEvent();\n        }\n    }\n    /** @internal */\n    destroy() {\n        var _a;\n        if ((_a = this._activeComponentItem) === null || _a === void 0 ? void 0 : _a.focused) {\n            this._activeComponentItem.blur();\n        }\n        super.destroy();\n        this.off('resize', this._resizeListener);\n        if (this._maximisedEnabled) {\n            this.off('maximised', this._maximisedListener);\n            this.off('minimised', this._minimisedListener);\n        }\n        this._header.destroy();\n    }\n    toConfig() {\n        let activeItemIndex;\n        if (this._activeComponentItem) {\n            activeItemIndex = this.contentItems.indexOf(this._activeComponentItem);\n            if (activeItemIndex < 0) {\n                throw new Error('active component item not found in stack');\n            }\n        }\n        if (this.contentItems.length > 0 && activeItemIndex === undefined) {\n            throw new Error('expected non-empty stack to have an active component item');\n        }\n        else {\n            const result = {\n                type: 'stack',\n                content: this.calculateConfigContent(),\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n                id: this.id,\n                isClosable: this.isClosable,\n                maximised: this.isMaximised,\n                header: this.createHeaderConfig(),\n                activeItemIndex,\n            };\n            return result;\n        }\n    }\n    /**\n     * Ok, this one is going to be the tricky one: The user has dropped a {@link (ContentItem:class)} onto this stack.\n     *\n     * It was dropped on either the stacks header or the top, right, bottom or left bit of the content area\n     * (which one of those is stored in this._dropSegment). Now, if the user has dropped on the header the case\n     * is relatively clear: We add the item to the existing stack... job done (might be good to have\n     * tab reordering at some point, but lets not sweat it right now)\n     *\n     * If the item was dropped on the content part things are a bit more complicated. If it was dropped on either the\n     * top or bottom region we need to create a new column and place the items accordingly.\n     * Unless, of course if the stack is already within a column... in which case we want\n     * to add the newly created item to the existing column...\n     * either prepend or append it, depending on wether its top or bottom.\n     *\n     * Same thing for rows and left / right drop segments... so in total there are 9 things that can potentially happen\n     * (left, top, right, bottom) * is child of the right parent (row, column) + header drop\n     *\n     * @internal\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDrop(contentItem, area) {\n        /*\n         * The item was dropped on the header area. Just add it as a child of this stack and\n         * get the hell out of this logic\n         */\n        if (this._dropSegment === \"header\" /* Header */) {\n            this.resetHeaderDropZone();\n            if (this._dropIndex === undefined) {\n                throw new UnexpectedUndefinedError('SODDI68990');\n            }\n            else {\n                this.addChild(contentItem, this._dropIndex);\n                return;\n            }\n        }\n        /*\n         * The stack is empty. Let's just add the element.\n         */\n        if (this._dropSegment === \"body\" /* Body */) {\n            this.addChild(contentItem, 0, true);\n            return;\n        }\n        /*\n         * The item was dropped on the top-, left-, bottom- or right- part of the content. Let's\n         * aggregate some conditions to make the if statements later on more readable\n         */\n        const isVertical = this._dropSegment === \"top\" /* Top */ || this._dropSegment === \"bottom\" /* Bottom */;\n        const isHorizontal = this._dropSegment === \"left\" /* Left */ || this._dropSegment === \"right\" /* Right */;\n        const insertBefore = this._dropSegment === \"top\" /* Top */ || this._dropSegment === \"left\" /* Left */;\n        const hasCorrectParent = (isVertical && this.stackParent.isColumn) || (isHorizontal && this.stackParent.isRow);\n        const dimension = isVertical ? 'height' : 'width';\n        /*\n         * The content item can be either a component or a stack. If it is a component, wrap it into a stack\n         */\n        if (contentItem.isComponent) {\n            const itemConfig = ResolvedStackItemConfig.createDefault();\n            itemConfig.header = this.createHeaderConfig();\n            const stack = this.layoutManager.createAndInitContentItem(itemConfig, this);\n            stack.addChild(contentItem);\n            contentItem = stack;\n        }\n        /*\n         * If the contentItem that's being dropped is not dropped on a Stack (cases which just passed above and\n         * which would wrap the contentItem in a Stack) we need to check whether contentItem is a RowOrColumn.\n         * If it is, we need to re-wrap it in a Stack like it was when it was dragged by its Tab (it was dragged!).\n         */\n        if (contentItem.type === ItemType.row || contentItem.type === ItemType.column) {\n            const itemConfig = ResolvedStackItemConfig.createDefault();\n            itemConfig.header = this.createHeaderConfig();\n            const stack = this.layoutManager.createContentItem(itemConfig, this);\n            stack.addChild(contentItem);\n            contentItem = stack;\n        }\n        /*\n         * If the item is dropped on top or bottom of a column or left and right of a row, it's already\n         * layd out in the correct way. Just add it as a child\n         */\n        if (hasCorrectParent) {\n            const index = this.stackParent.contentItems.indexOf(this);\n            this.stackParent.addChild(contentItem, insertBefore ? index : index + 1, true);\n            this[dimension] *= 0.5;\n            contentItem[dimension] = this[dimension];\n            this.stackParent.updateSize(false);\n            /*\n             * This handles items that are dropped on top or bottom of a row or left / right of a column. We need\n             * to create the appropriate contentItem for them to live in\n             */\n        }\n        else {\n            const type = isVertical ? ItemType.column : ItemType.row;\n            const itemConfig = ResolvedItemConfig.createDefault(type);\n            const rowOrColumn = this.layoutManager.createContentItem(itemConfig, this);\n            this.stackParent.replaceChild(this, rowOrColumn);\n            rowOrColumn.addChild(contentItem, insertBefore ? 0 : undefined, true);\n            rowOrColumn.addChild(this, insertBefore ? undefined : 0, true);\n            this[dimension] = 50;\n            contentItem[dimension] = 50;\n            rowOrColumn.updateSize(false);\n        }\n    }\n    /**\n     * If the user hovers above the header part of the stack, indicate drop positions for tabs.\n     * otherwise indicate which segment of the body the dragged item would be dropped on\n     *\n     * @param x - Absolute Screen X\n     * @param y - Absolute Screen Y\n     * @internal\n     */\n    highlightDropZone(x, y) {\n        for (const key in this._contentAreaDimensions) {\n            const segment = key;\n            const area = this._contentAreaDimensions[segment].hoverArea;\n            if (area.x1 < x && area.x2 > x && area.y1 < y && area.y2 > y) {\n                if (segment === \"header\" /* Header */) {\n                    this._dropSegment = \"header\" /* Header */;\n                    this.highlightHeaderDropZone(this._header.leftRightSided ? y : x);\n                }\n                else {\n                    this.resetHeaderDropZone();\n                    this.highlightBodyDropZone(segment);\n                }\n                return;\n            }\n        }\n    }\n    /** @internal */\n    getArea() {\n        if (this.element.style.display === 'none') {\n            return null;\n        }\n        const headerArea = super.getElementArea(this._header.element);\n        const contentArea = super.getElementArea(this._childElementContainer);\n        if (headerArea === null || contentArea === null) {\n            throw new UnexpectedNullError('SGAHC13086');\n        }\n        const contentWidth = contentArea.x2 - contentArea.x1;\n        const contentHeight = contentArea.y2 - contentArea.y1;\n        this._contentAreaDimensions = {\n            header: {\n                hoverArea: {\n                    x1: headerArea.x1,\n                    y1: headerArea.y1,\n                    x2: headerArea.x2,\n                    y2: headerArea.y2\n                },\n                highlightArea: {\n                    x1: headerArea.x1,\n                    y1: headerArea.y1,\n                    x2: headerArea.x2,\n                    y2: headerArea.y2\n                }\n            }\n        };\n        /**\n         * Highlight the entire body if the stack is empty\n         */\n        if (this.contentItems.length === 0) {\n            this._contentAreaDimensions.body = {\n                hoverArea: {\n                    x1: contentArea.x1,\n                    y1: contentArea.y1,\n                    x2: contentArea.x2,\n                    y2: contentArea.y2\n                },\n                highlightArea: {\n                    x1: contentArea.x1,\n                    y1: contentArea.y1,\n                    x2: contentArea.x2,\n                    y2: contentArea.y2\n                }\n            };\n            return super.getElementArea(this.element);\n        }\n        else {\n            this._contentAreaDimensions.left = {\n                hoverArea: {\n                    x1: contentArea.x1,\n                    y1: contentArea.y1,\n                    x2: contentArea.x1 + contentWidth * 0.25,\n                    y2: contentArea.y2\n                },\n                highlightArea: {\n                    x1: contentArea.x1,\n                    y1: contentArea.y1,\n                    x2: contentArea.x1 + contentWidth * 0.5,\n                    y2: contentArea.y2\n                }\n            };\n            this._contentAreaDimensions.top = {\n                hoverArea: {\n                    x1: contentArea.x1 + contentWidth * 0.25,\n                    y1: contentArea.y1,\n                    x2: contentArea.x1 + contentWidth * 0.75,\n                    y2: contentArea.y1 + contentHeight * 0.5\n                },\n                highlightArea: {\n                    x1: contentArea.x1,\n                    y1: contentArea.y1,\n                    x2: contentArea.x2,\n                    y2: contentArea.y1 + contentHeight * 0.5\n                }\n            };\n            this._contentAreaDimensions.right = {\n                hoverArea: {\n                    x1: contentArea.x1 + contentWidth * 0.75,\n                    y1: contentArea.y1,\n                    x2: contentArea.x2,\n                    y2: contentArea.y2\n                },\n                highlightArea: {\n                    x1: contentArea.x1 + contentWidth * 0.5,\n                    y1: contentArea.y1,\n                    x2: contentArea.x2,\n                    y2: contentArea.y2\n                }\n            };\n            this._contentAreaDimensions.bottom = {\n                hoverArea: {\n                    x1: contentArea.x1 + contentWidth * 0.25,\n                    y1: contentArea.y1 + contentHeight * 0.5,\n                    x2: contentArea.x1 + contentWidth * 0.75,\n                    y2: contentArea.y2\n                },\n                highlightArea: {\n                    x1: contentArea.x1,\n                    y1: contentArea.y1 + contentHeight * 0.5,\n                    x2: contentArea.x2,\n                    y2: contentArea.y2\n                }\n            };\n            return super.getElementArea(this.element);\n        }\n    }\n    /**\n     * Programmatically operate with header position.\n     *\n     * @param position -\n     *\n     * @returns previous header position\n     * @internal\n     */\n    positionHeader(position) {\n        if (this._header.side !== position) {\n            this._header.setSide(position);\n            this._headerSideChanged = true;\n            this.setupHeaderPosition();\n        }\n    }\n    /** @internal */\n    updateNodeSize() {\n        if (this.element.style.display !== 'none') {\n            const content = getElementWidthAndHeight(this.element);\n            if (this._header.show) {\n                const dimension = this._header.leftRightSided ? WidthOrHeightPropertyName.width : WidthOrHeightPropertyName.height;\n                content[dimension] -= this.layoutManager.layoutConfig.dimensions.headerHeight;\n            }\n            this._childElementContainer.style.width = numberToPixels(content.width);\n            this._childElementContainer.style.height = numberToPixels(content.height);\n            for (let i = 0; i < this.contentItems.length; i++) {\n                this.contentItems[i].element.style.width = numberToPixels(content.width);\n                this.contentItems[i].element.style.height = numberToPixels(content.height);\n            }\n            this.emit('resize');\n            this.emitStateChangedEvent();\n        }\n    }\n    /** @internal */\n    highlightHeaderDropZone(x) {\n        // Only walk over the visible tabs\n        const tabsLength = this._header.lastVisibleTabIndex + 1;\n        const dropTargetIndicator = this.layoutManager.dropTargetIndicator;\n        if (dropTargetIndicator === null) {\n            throw new UnexpectedNullError('SHHDZDTI97110');\n        }\n        let area;\n        // Empty stack\n        if (tabsLength === 0) {\n            const headerOffset = getJQueryOffset(this._header.element);\n            const elementHeight = getElementHeight(this._header.element);\n            area = {\n                x1: headerOffset.left,\n                x2: headerOffset.left + 100,\n                y1: headerOffset.top + elementHeight - 20,\n                y2: headerOffset.top + elementHeight,\n            };\n            this._dropIndex = 0;\n        }\n        else {\n            let tabIndex = 0;\n            // This indicates whether our cursor is exactly over a tab\n            let isAboveTab = false;\n            let tabTop;\n            let tabLeft;\n            let tabWidth;\n            let tabElement;\n            do {\n                tabElement = this._header.tabs[tabIndex].element;\n                const offset = getJQueryOffset(tabElement);\n                if (this._header.leftRightSided) {\n                    tabLeft = offset.top;\n                    tabTop = offset.left;\n                    tabWidth = getElementHeight(tabElement);\n                }\n                else {\n                    tabLeft = offset.left;\n                    tabTop = offset.top;\n                    tabWidth = getElementWidth(tabElement);\n                }\n                if (x >= tabLeft && x < tabLeft + tabWidth) {\n                    isAboveTab = true;\n                }\n                else {\n                    tabIndex++;\n                }\n            } while (tabIndex < tabsLength && !isAboveTab);\n            // If we're not above any tabs, or to the right of any tab, we are out of the area, so give up\n            if (isAboveTab === false && x < tabLeft) {\n                return;\n            }\n            const halfX = tabLeft + tabWidth / 2;\n            if (x < halfX) {\n                this._dropIndex = tabIndex;\n                tabElement.insertAdjacentElement('beforebegin', this.layoutManager.tabDropPlaceholder);\n            }\n            else {\n                this._dropIndex = Math.min(tabIndex + 1, tabsLength);\n                tabElement.insertAdjacentElement('afterend', this.layoutManager.tabDropPlaceholder);\n            }\n            const tabDropPlaceholderOffset = getJQueryOffset(this.layoutManager.tabDropPlaceholder);\n            const tabDropPlaceholderWidth = getElementWidth(this.layoutManager.tabDropPlaceholder);\n            if (this._header.leftRightSided) {\n                const placeHolderTop = tabDropPlaceholderOffset.top;\n                area = {\n                    x1: tabTop,\n                    x2: tabTop + tabElement.clientHeight,\n                    y1: placeHolderTop,\n                    y2: placeHolderTop + tabDropPlaceholderWidth,\n                };\n            }\n            else {\n                const placeHolderLeft = tabDropPlaceholderOffset.left;\n                area = {\n                    x1: placeHolderLeft,\n                    x2: placeHolderLeft + tabDropPlaceholderWidth,\n                    y1: tabTop,\n                    y2: tabTop + tabElement.clientHeight,\n                };\n            }\n        }\n        dropTargetIndicator.highlightArea(area);\n        return;\n    }\n    /** @internal */\n    resetHeaderDropZone() {\n        this.layoutManager.tabDropPlaceholder.remove();\n    }\n    /** @internal */\n    setupHeaderPosition() {\n        setElementDisplayVisibility(this._header.element, this._header.show);\n        this.element.classList.remove(\"lm_left\" /* Left */, \"lm_right\" /* Right */, \"lm_bottom\" /* Bottom */);\n        if (this._header.leftRightSided) {\n            this.element.classList.add('lm_' + this._header.side);\n        }\n        //if ([Side.right, Side.bottom].includes(this._header.side)) {\n        //    // move the header behind the content.\n        //    this.element.appendChild(this._header.element);\n        //}\n        this.updateSize(false);\n    }\n    /** @internal */\n    highlightBodyDropZone(segment) {\n        if (this._contentAreaDimensions === undefined) {\n            throw new UnexpectedUndefinedError('SHBDZC82265');\n        }\n        else {\n            const highlightArea = this._contentAreaDimensions[segment].highlightArea;\n            const dropTargetIndicator = this.layoutManager.dropTargetIndicator;\n            if (dropTargetIndicator === null) {\n                throw new UnexpectedNullError('SHBDZD96110');\n            }\n            else {\n                dropTargetIndicator.highlightArea(highlightArea);\n                this._dropSegment = segment;\n            }\n        }\n    }\n    /** @internal */\n    handleResize() {\n        this._header.updateTabSizes();\n    }\n    /** @internal */\n    handleMaximised() {\n        this._header.processMaximised();\n    }\n    /** @internal */\n    handleMinimised() {\n        this._header.processMinimised();\n    }\n    /** @internal */\n    handlePopoutEvent() {\n        this.popout();\n    }\n    /** @internal */\n    handleHeaderClickEvent(ev) {\n        const eventName = EventEmitter.headerClickEventName;\n        const bubblingEvent = new EventEmitter.ClickBubblingEvent(eventName, this, ev);\n        this.emit(eventName, bubblingEvent);\n    }\n    /** @internal */\n    handleHeaderTouchStartEvent(ev) {\n        const eventName = EventEmitter.headerTouchStartEventName;\n        const bubblingEvent = new EventEmitter.TouchStartBubblingEvent(eventName, this, ev);\n        this.emit(eventName, bubblingEvent);\n    }\n    /** @internal */\n    handleHeaderComponentRemoveEvent(item) {\n        this.removeChild(item, false);\n    }\n    /** @internal */\n    handleHeaderComponentFocusEvent(item) {\n        this.setActiveComponentItem(item, true);\n    }\n    /** @internal */\n    handleHeaderComponentStartDragEvent(x, y, dragListener, componentItem) {\n        if (this.isMaximised === true) {\n            this.toggleMaximise();\n        }\n        this.layoutManager.startComponentDrag(x, y, dragListener, componentItem, this);\n    }\n    /** @internal */\n    createHeaderConfig() {\n        if (!this._headerSideChanged) {\n            return ResolvedHeaderedItemConfig.Header.createCopy(this._headerConfig);\n        }\n        else {\n            const show = this._header.show ? this._header.side : false;\n            let result = ResolvedHeaderedItemConfig.Header.createCopy(this._headerConfig, show);\n            if (result === undefined) {\n                result = {\n                    show,\n                    popout: undefined,\n                    maximise: undefined,\n                    close: undefined,\n                    minimise: undefined,\n                    tabDropdown: undefined,\n                };\n            }\n            return result;\n        }\n    }\n    /** @internal */\n    emitStateChangedEvent() {\n        this.emitBaseBubblingEvent('stateChanged');\n    }\n}\n/** @public */\n(function (Stack) {\n    /** @internal */\n    function createElement(document) {\n        const element = document.createElement('div');\n        element.classList.add(\"lm_item\" /* Item */);\n        element.classList.add(\"lm_stack\" /* Stack */);\n        return element;\n    }\n    Stack.createElement = createElement;\n})(Stack || (Stack = {}));\n//# sourceMappingURL=stack.js.map","import { UnexpectedNullError } from '../errors/internal-error';\nimport { Stack } from '../items/stack';\nimport { EventEmitter } from '../utils/event-emitter';\nimport { getJQueryOffset } from '../utils/jquery-legacy';\nimport { Side } from '../utils/types';\nimport { getElementWidthAndHeight, numberToPixels } from '../utils/utils';\n/**\n * This class creates a temporary container\n * for the component whilst it is being dragged\n * and handles drag events\n * @internal\n */\nexport class DragProxy extends EventEmitter {\n    /**\n     * @param x - The initial x position\n     * @param y - The initial y position\n     * @internal\n     */\n    constructor(x, y, _dragListener, _layoutManager, _componentItem, _originalParent) {\n        super();\n        this._dragListener = _dragListener;\n        this._layoutManager = _layoutManager;\n        this._componentItem = _componentItem;\n        this._originalParent = _originalParent;\n        this._area = null;\n        this._lastValidArea = null;\n        this._dragListener.on('drag', (offsetX, offsetY, event) => this.onDrag(offsetX, offsetY, event));\n        this._dragListener.on('dragStop', () => this.onDrop());\n        this.createDragProxyElements(x, y);\n        if (this._componentItem.parent === null) {\n            // Note that _contentItem will have dummy GroundItem as parent if initiated by a external drag source\n            throw new UnexpectedNullError('DPC10097');\n        }\n        this._componentItemFocused = this._componentItem.focused;\n        if (this._componentItemFocused) {\n            this._componentItem.blur();\n        }\n        this._componentItem.parent.removeChild(this._componentItem, true);\n        this.setDimensions();\n        document.body.appendChild(this._element);\n        this.determineMinMaxXY();\n        if (this._layoutManager.layoutConfig.settings.constrainDragToContainer) {\n            const constrainedPosition = this.getXYWithinMinMax(x, y);\n            x = constrainedPosition.x;\n            y = constrainedPosition.y;\n        }\n        this._layoutManager.calculateItemAreas();\n        this.setDropPosition(x, y);\n    }\n    get element() { return this._element; }\n    /** Create Stack-like structure to contain the dragged component */\n    createDragProxyElements(initialX, initialY) {\n        this._element = document.createElement('div');\n        this._element.classList.add(\"lm_dragProxy\" /* DragProxy */);\n        const headerElement = document.createElement('div');\n        headerElement.classList.add(\"lm_header\" /* Header */);\n        const tabsElement = document.createElement('div');\n        tabsElement.classList.add(\"lm_tabs\" /* Tabs */);\n        const tabElement = document.createElement('div');\n        tabElement.classList.add(\"lm_tab\" /* Tab */);\n        const titleElement = document.createElement('span');\n        titleElement.classList.add(\"lm_title\" /* Title */);\n        tabElement.appendChild(titleElement);\n        tabsElement.appendChild(tabElement);\n        headerElement.appendChild(tabsElement);\n        this._proxyContainerElement = document.createElement('div');\n        this._proxyContainerElement.classList.add(\"lm_content\" /* Content */);\n        this._element.appendChild(headerElement);\n        this._element.appendChild(this._proxyContainerElement);\n        if (this._originalParent instanceof Stack && this._originalParent.headerShow) {\n            this._sided = this._originalParent.headerLeftRightSided;\n            this._element.classList.add('lm_' + this._originalParent.headerSide);\n            if ([Side.right, Side.bottom].indexOf(this._originalParent.headerSide) >= 0) {\n                this._proxyContainerElement.insertAdjacentElement('afterend', headerElement);\n            }\n        }\n        this._element.style.left = numberToPixels(initialX);\n        this._element.style.top = numberToPixels(initialY);\n        tabElement.setAttribute('title', this._componentItem.title);\n        titleElement.insertAdjacentText('afterbegin', this._componentItem.title);\n        this._proxyContainerElement.appendChild(this._componentItem.element);\n    }\n    determineMinMaxXY() {\n        const offset = getJQueryOffset(this._layoutManager.container);\n        this._minX = offset.left;\n        this._minY = offset.top;\n        const { width: containerWidth, height: containerHeight } = getElementWidthAndHeight(this._layoutManager.container);\n        this._maxX = containerWidth + this._minX;\n        this._maxY = containerHeight + this._minY;\n    }\n    getXYWithinMinMax(x, y) {\n        if (x <= this._minX) {\n            x = Math.ceil(this._minX + 1);\n        }\n        else if (x >= this._maxX) {\n            x = Math.floor(this._maxX - 1);\n        }\n        if (y <= this._minY) {\n            y = Math.ceil(this._minY + 1);\n        }\n        else if (y >= this._maxY) {\n            y = Math.floor(this._maxY - 1);\n        }\n        return { x, y };\n    }\n    /**\n     * Callback on every mouseMove event during a drag. Determines if the drag is\n     * still within the valid drag area and calls the layoutManager to highlight the\n     * current drop area\n     *\n     * @param offsetX - The difference from the original x position in px\n     * @param offsetY - The difference from the original y position in px\n     * @param event -\n     * @internal\n     */\n    onDrag(offsetX, offsetY, event) {\n        const x = event.pageX;\n        const y = event.pageY;\n        if (!this._layoutManager.layoutConfig.settings.constrainDragToContainer) {\n            this.setDropPosition(x, y);\n        }\n        else {\n            const isWithinContainer = x > this._minX && x < this._maxX && y > this._minY && y < this._maxY;\n            if (isWithinContainer) {\n                this.setDropPosition(x, y);\n            }\n        }\n        this._componentItem.drag();\n    }\n    /**\n     * Sets the target position, highlighting the appropriate area\n     *\n     * @param x - The x position in px\n     * @param y - The y position in px\n     *\n     * @internal\n     */\n    setDropPosition(x, y) {\n        this._element.style.left = numberToPixels(x);\n        this._element.style.top = numberToPixels(y);\n        this._area = this._layoutManager.getArea(x, y);\n        if (this._area !== null) {\n            this._lastValidArea = this._area;\n            this._area.contentItem.highlightDropZone(x, y, this._area);\n        }\n    }\n    /**\n     * Callback when the drag has finished. Determines the drop area\n     * and adds the child to it\n     * @internal\n     */\n    onDrop() {\n        const dropTargetIndicator = this._layoutManager.dropTargetIndicator;\n        if (dropTargetIndicator === null) {\n            throw new UnexpectedNullError('DPOD30011');\n        }\n        else {\n            dropTargetIndicator.hide();\n        }\n        this._componentItem.exitDragMode();\n        /*\n         * Valid drop area found\n         */\n        let droppedComponentItem;\n        if (this._area !== null) {\n            droppedComponentItem = this._componentItem;\n            this._area.contentItem.onDrop(droppedComponentItem, this._area);\n            /**\n             * No valid drop area available at present, but one has been found before.\n             * Use it\n             */\n        }\n        else if (this._lastValidArea !== null) {\n            droppedComponentItem = this._componentItem;\n            const newParentContentItem = this._lastValidArea.contentItem;\n            newParentContentItem.onDrop(droppedComponentItem, this._lastValidArea);\n            /**\n             * No valid drop area found during the duration of the drag. Return\n             * content item to its original position if a original parent is provided.\n             * (Which is not the case if the drag had been initiated by createDragSource)\n             */\n        }\n        else if (this._originalParent) {\n            droppedComponentItem = this._componentItem;\n            this._originalParent.addChild(droppedComponentItem);\n            /**\n             * The drag didn't ultimately end up with adding the content item to\n             * any container. In order to ensure clean up happens, destroy the\n             * content item.\n             */\n        }\n        else {\n            this._componentItem.destroy(); // contentItem children are now destroyed as well\n        }\n        this._element.remove();\n        this._layoutManager.emit('itemDropped', this._componentItem);\n        if (this._componentItemFocused && droppedComponentItem !== undefined) {\n            droppedComponentItem.focus();\n        }\n    }\n    /**\n     * Updates the Drag Proxy's dimensions\n     * @internal\n     */\n    setDimensions() {\n        const dimensions = this._layoutManager.layoutConfig.dimensions;\n        if (dimensions === undefined) {\n            throw new Error('DragProxy.setDimensions: dimensions undefined');\n        }\n        let width = dimensions.dragProxyWidth;\n        let height = dimensions.dragProxyHeight;\n        if (width === undefined || height === undefined) {\n            throw new Error('DragProxy.setDimensions: width and/or height undefined');\n        }\n        const headerHeight = this._layoutManager.layoutConfig.header.show === false ? 0 : dimensions.headerHeight;\n        this._element.style.width = numberToPixels(width);\n        this._element.style.height = numberToPixels(height);\n        width -= (this._sided ? headerHeight : 0);\n        height -= (!this._sided ? headerHeight : 0);\n        this._proxyContainerElement.style.width = numberToPixels(width);\n        this._proxyContainerElement.style.height = numberToPixels(height);\n        this._componentItem.enterDragMode(width, height);\n        this._componentItem.show();\n    }\n}\n//# sourceMappingURL=drag-proxy.js.map","import { DragListener } from '../utils/drag-listener';\nimport { numberToPixels } from '../utils/utils';\n/** @internal */\nexport class Splitter {\n    constructor(_isVertical, _size, grabSize) {\n        this._isVertical = _isVertical;\n        this._size = _size;\n        this._grabSize = grabSize < this._size ? this._size : grabSize;\n        this._element = document.createElement('div');\n        this._element.classList.add(\"lm_splitter\" /* Splitter */);\n        const dragHandleElement = document.createElement('div');\n        dragHandleElement.classList.add(\"lm_drag_handle\" /* DragHandle */);\n        const handleExcessSize = this._grabSize - this._size;\n        const handleExcessPos = handleExcessSize / 2;\n        if (this._isVertical) {\n            dragHandleElement.style.top = numberToPixels(-handleExcessPos);\n            dragHandleElement.style.height = numberToPixels(this._size + handleExcessSize);\n            this._element.classList.add(\"lm_vertical\" /* Vertical */);\n            this._element.style.height = numberToPixels(this._size);\n        }\n        else {\n            dragHandleElement.style.left = numberToPixels(-handleExcessPos);\n            dragHandleElement.style.width = numberToPixels(this._size + handleExcessSize);\n            this._element.classList.add(\"lm_horizontal\" /* Horizontal */);\n            this._element.style.width = numberToPixels(this._size);\n        }\n        this._element.appendChild(dragHandleElement);\n        this._dragListener = new DragListener(this._element, [dragHandleElement]);\n    }\n    get element() { return this._element; }\n    destroy() {\n        this._element.remove();\n    }\n    on(eventName, callback) {\n        this._dragListener.on(eventName, callback);\n    }\n}\n//# sourceMappingURL=splitter.js.map","import { ItemConfig } from '../config/config';\nimport { Splitter } from '../controls/splitter';\nimport { AssertError, UnexpectedNullError } from '../errors/internal-error';\nimport { ItemType } from '../utils/types';\nimport { getElementHeight, getElementWidth, getElementWidthAndHeight, numberToPixels, pixelsToNumber, setElementHeight, setElementWidth } from \"../utils/utils\";\nimport { ContentItem } from './content-item';\n/** @public */\nexport class RowOrColumn extends ContentItem {\n    /** @internal */\n    constructor(isColumn, layoutManager, config, \n    /** @internal */\n    _rowOrColumnParent) {\n        super(layoutManager, config, _rowOrColumnParent, RowOrColumn.createElement(document, isColumn));\n        this._rowOrColumnParent = _rowOrColumnParent;\n        /** @internal */\n        this._splitter = [];\n        this.isRow = !isColumn;\n        this.isColumn = isColumn;\n        this._childElementContainer = this.element;\n        this._splitterSize = layoutManager.layoutConfig.dimensions.borderWidth;\n        this._splitterGrabSize = layoutManager.layoutConfig.dimensions.borderGrabWidth;\n        this._isColumn = isColumn;\n        this._dimension = isColumn ? 'height' : 'width';\n        this._splitterPosition = null;\n        this._splitterMinPosition = null;\n        this._splitterMaxPosition = null;\n        switch (config.type) {\n            case ItemType.row:\n            case ItemType.column:\n                this._configType = config.type;\n                break;\n            default:\n                throw new AssertError('ROCCCT00925');\n        }\n    }\n    newComponent(componentType, componentState, title, index) {\n        const itemConfig = {\n            type: 'component',\n            componentType,\n            componentState,\n            title,\n        };\n        return this.newItem(itemConfig, index);\n    }\n    addComponent(componentType, componentState, title, index) {\n        const itemConfig = {\n            type: 'component',\n            componentType,\n            componentState,\n            title,\n        };\n        return this.addItem(itemConfig, index);\n    }\n    newItem(itemConfig, index) {\n        index = this.addItem(itemConfig, index);\n        const createdItem = this.contentItems[index];\n        if (ContentItem.isStack(createdItem) && (ItemConfig.isComponent(itemConfig))) {\n            // createdItem is a Stack which was created to hold wanted component.  Return component\n            return createdItem.contentItems[0];\n        }\n        else {\n            return createdItem;\n        }\n    }\n    addItem(itemConfig, index) {\n        this.layoutManager.checkMinimiseMaximisedStack();\n        const resolvedItemConfig = ItemConfig.resolve(itemConfig);\n        const contentItem = this.layoutManager.createAndInitContentItem(resolvedItemConfig, this);\n        return this.addChild(contentItem, index, false);\n    }\n    /**\n     * Add a new contentItem to the Row or Column\n     *\n     * @param contentItem -\n     * @param index - The position of the new item within the Row or Column.\n     *                If no index is provided the item will be added to the end\n     * @param suspendResize - If true the items won't be resized. This will leave the item in\n     *                        an inconsistent state and is only intended to be used if multiple\n     *                        children need to be added in one go and resize is called afterwards\n     *\n     * @returns\n     */\n    addChild(contentItem, index, suspendResize) {\n        // contentItem = this.layoutManager._$normalizeContentItem(contentItem, this);\n        if (index === undefined) {\n            index = this.contentItems.length;\n        }\n        if (this.contentItems.length > 0) {\n            const splitterElement = this.createSplitter(Math.max(0, index - 1)).element;\n            if (index > 0) {\n                this.contentItems[index - 1].element.insertAdjacentElement('afterend', splitterElement);\n                splitterElement.insertAdjacentElement('afterend', contentItem.element);\n            }\n            else {\n                this.contentItems[0].element.insertAdjacentElement('beforebegin', splitterElement);\n                splitterElement.insertAdjacentElement('beforebegin', contentItem.element);\n            }\n        }\n        else {\n            this._childElementContainer.appendChild(contentItem.element);\n        }\n        super.addChild(contentItem, index);\n        const newItemSize = (1 / this.contentItems.length) * 100;\n        if (suspendResize === true) {\n            this.emitBaseBubblingEvent('stateChanged');\n            return index;\n        }\n        for (let i = 0; i < this.contentItems.length; i++) {\n            if (this.contentItems[i] === contentItem) {\n                contentItem[this._dimension] = newItemSize;\n            }\n            else {\n                const itemSize = this.contentItems[i][this._dimension] *= (100 - newItemSize) / 100;\n                this.contentItems[i][this._dimension] = itemSize;\n            }\n        }\n        this.updateSize(false);\n        this.emitBaseBubblingEvent('stateChanged');\n        return index;\n    }\n    /**\n     * Removes a child of this element\n     *\n     * @param contentItem -\n     * @param keepChild - If true the child will be removed, but not destroyed\n     *\n     */\n    removeChild(contentItem, keepChild) {\n        const index = this.contentItems.indexOf(contentItem);\n        const splitterIndex = Math.max(index - 1, 0);\n        if (index === -1) {\n            throw new Error('Can\\'t remove child. ContentItem is not child of this Row or Column');\n        }\n        /**\n         * Remove the splitter before the item or after if the item happens\n         * to be the first in the row/column\n         */\n        if (this._splitter[splitterIndex]) {\n            this._splitter[splitterIndex].destroy();\n            this._splitter.splice(splitterIndex, 1);\n        }\n        super.removeChild(contentItem, keepChild);\n        if (this.contentItems.length === 1 && this.isClosable === true) {\n            const childItem = this.contentItems[0];\n            this.contentItems.length = 0;\n            this._rowOrColumnParent.replaceChild(this, childItem, true);\n        }\n        else {\n            this.updateSize(false);\n            this.emitBaseBubblingEvent('stateChanged');\n        }\n    }\n    /**\n     * Replaces a child of this Row or Column with another contentItem\n     */\n    replaceChild(oldChild, newChild) {\n        const size = oldChild[this._dimension];\n        super.replaceChild(oldChild, newChild);\n        newChild[this._dimension] = size;\n        this.updateSize(false);\n        this.emitBaseBubblingEvent('stateChanged');\n    }\n    /**\n     * Called whenever the dimensions of this item or one of its parents change\n     */\n    updateSize(force) {\n        this.layoutManager.beginVirtualSizedContainerAdding();\n        try {\n            this.updateNodeSize();\n            this.updateContentItemsSize(force);\n        }\n        finally {\n            this.layoutManager.endVirtualSizedContainerAdding();\n        }\n    }\n    /**\n     * Invoked recursively by the layout manager. ContentItem.init appends\n     * the contentItem's DOM elements to the container, RowOrColumn init adds splitters\n     * in between them\n     * @internal\n     */\n    init() {\n        if (this.isInitialised === true)\n            return;\n        this.updateNodeSize();\n        for (let i = 0; i < this.contentItems.length; i++) {\n            this._childElementContainer.appendChild(this.contentItems[i].element);\n        }\n        super.init();\n        for (let i = 0; i < this.contentItems.length - 1; i++) {\n            this.contentItems[i].element.insertAdjacentElement('afterend', this.createSplitter(i).element);\n        }\n        this.initContentItems();\n    }\n    toConfig() {\n        const result = {\n            type: this.type,\n            content: this.calculateConfigContent(),\n            width: this.width,\n            minWidth: this.minWidth,\n            height: this.height,\n            minHeight: this.minHeight,\n            id: this.id,\n            isClosable: this.isClosable,\n        };\n        return result;\n    }\n    /** @internal */\n    setParent(parent) {\n        this._rowOrColumnParent = parent;\n        super.setParent(parent);\n    }\n    /** @internal */\n    updateNodeSize() {\n        if (this.contentItems.length > 0) {\n            this.calculateRelativeSizes();\n            this.setAbsoluteSizes();\n        }\n        this.emitBaseBubblingEvent('stateChanged');\n        this.emit('resize');\n    }\n    /**\n     * Turns the relative sizes calculated by calculateRelativeSizes into\n     * absolute pixel values and applies them to the children's DOM elements\n     *\n     * Assigns additional pixels to counteract Math.floor\n     * @internal\n     */\n    setAbsoluteSizes() {\n        const sizeData = this.calculateAbsoluteSizes();\n        for (let i = 0; i < this.contentItems.length; i++) {\n            if (sizeData.additionalPixel - i > 0) {\n                sizeData.itemSizes[i]++;\n            }\n            if (this._isColumn) {\n                setElementWidth(this.contentItems[i].element, sizeData.totalWidth);\n                setElementHeight(this.contentItems[i].element, sizeData.itemSizes[i]);\n            }\n            else {\n                setElementWidth(this.contentItems[i].element, sizeData.itemSizes[i]);\n                setElementHeight(this.contentItems[i].element, sizeData.totalHeight);\n            }\n        }\n    }\n    /**\n     * Calculates the absolute sizes of all of the children of this Item.\n     * @returns Set with absolute sizes and additional pixels.\n     * @internal\n     */\n    calculateAbsoluteSizes() {\n        const totalSplitterSize = (this.contentItems.length - 1) * this._splitterSize;\n        let { width: totalWidth, height: totalHeight } = getElementWidthAndHeight(this.element);\n        if (this._isColumn) {\n            totalHeight -= totalSplitterSize;\n        }\n        else {\n            totalWidth -= totalSplitterSize;\n        }\n        let totalAssigned = 0;\n        const itemSizes = [];\n        for (let i = 0; i < this.contentItems.length; i++) {\n            let itemSize;\n            if (this._isColumn) {\n                itemSize = Math.floor(totalHeight * (this.contentItems[i].height / 100));\n            }\n            else {\n                itemSize = Math.floor(totalWidth * (this.contentItems[i].width / 100));\n            }\n            totalAssigned += itemSize;\n            itemSizes.push(itemSize);\n        }\n        const additionalPixel = Math.floor((this._isColumn ? totalHeight : totalWidth) - totalAssigned);\n        return {\n            itemSizes: itemSizes,\n            additionalPixel: additionalPixel,\n            totalWidth: totalWidth,\n            totalHeight: totalHeight\n        };\n    }\n    /**\n     * Calculates the relative sizes of all children of this Item. The logic\n     * is as follows:\n     *\n     * - Add up the total size of all items that have a configured size\n     *\n     * - If the total == 100 (check for floating point errors)\n     *        Excellent, job done\n     *\n     * - If the total is \\> 100,\n     *        set the size of items without set dimensions to 1/3 and add this to the total\n     *        set the size off all items so that the total is hundred relative to their original size\n     *\n     * - If the total is \\< 100\n     *        If there are items without set dimensions, distribute the remainder to 100 evenly between them\n     *        If there are no items without set dimensions, increase all items sizes relative to\n     *        their original size so that they add up to 100\n     *\n     * @internal\n     */\n    calculateRelativeSizes() {\n        let total = 0;\n        const itemsWithoutSetDimension = [];\n        for (let i = 0; i < this.contentItems.length; i++) {\n            if (this.contentItems[i][this._dimension] !== undefined) {\n                total += this.contentItems[i][this._dimension];\n            }\n            else {\n                itemsWithoutSetDimension.push(this.contentItems[i]);\n            }\n        }\n        /**\n         * Everything adds up to hundred, all good :-)\n         */\n        if (Math.round(total) === 100) {\n            this.respectMinItemWidth();\n            return;\n        }\n        /**\n         * Allocate the remaining size to the items without a set dimension\n         */\n        if (Math.round(total) < 100 && itemsWithoutSetDimension.length > 0) {\n            for (let i = 0; i < itemsWithoutSetDimension.length; i++) {\n                itemsWithoutSetDimension[i][this._dimension] = (100 - total) / itemsWithoutSetDimension.length;\n            }\n            this.respectMinItemWidth();\n            return;\n        }\n        /**\n         * If the total is > 100, but there are also items without a set dimension left, assing 50\n         * as their dimension and add it to the total\n         *\n         * This will be reset in the next step\n         */\n        if (Math.round(total) > 100) {\n            for (let i = 0; i < itemsWithoutSetDimension.length; i++) {\n                itemsWithoutSetDimension[i][this._dimension] = 50;\n                total += 50;\n            }\n        }\n        /**\n         * Set every items size relative to 100 relative to its size to total\n         */\n        for (let i = 0; i < this.contentItems.length; i++) {\n            this.contentItems[i][this._dimension] = (this.contentItems[i][this._dimension] / total) * 100;\n        }\n        this.respectMinItemWidth();\n    }\n    /**\n     * Adjusts the column widths to respect the dimensions minItemWidth if set.\n     * @internal\n     */\n    respectMinItemWidth() {\n        const minItemWidth = this.layoutManager.layoutConfig.dimensions.minItemWidth;\n        let totalOverMin = 0;\n        let totalUnderMin = 0;\n        const entriesOverMin = [];\n        const allEntries = [];\n        if (this._isColumn || !minItemWidth || this.contentItems.length <= 1) {\n            return;\n        }\n        const sizeData = this.calculateAbsoluteSizes();\n        /**\n         * Figure out how much we are under the min item size total and how much room we have to use.\n         */\n        for (let i = 0; i < sizeData.itemSizes.length; i++) {\n            const itemSize = sizeData.itemSizes[i];\n            let entry;\n            if (itemSize < minItemWidth) {\n                totalUnderMin += minItemWidth - itemSize;\n                entry = {\n                    width: minItemWidth\n                };\n            }\n            else {\n                totalOverMin += itemSize - minItemWidth;\n                entry = {\n                    width: itemSize\n                };\n                entriesOverMin.push(entry);\n            }\n            allEntries.push(entry);\n        }\n        /**\n         * If there is nothing under min, or there is not enough over to make up the difference, do nothing.\n         */\n        if (totalUnderMin === 0 || totalUnderMin > totalOverMin) {\n            return;\n        }\n        /**\n         * Evenly reduce all columns that are over the min item width to make up the difference.\n         */\n        const reducePercent = totalUnderMin / totalOverMin;\n        let remainingWidth = totalUnderMin;\n        for (let i = 0; i < entriesOverMin.length; i++) {\n            const entry = entriesOverMin[i];\n            const reducedWidth = Math.round((entry.width - minItemWidth) * reducePercent);\n            remainingWidth -= reducedWidth;\n            entry.width -= reducedWidth;\n        }\n        /**\n         * Take anything remaining from the last item.\n         */\n        if (remainingWidth !== 0) {\n            allEntries[allEntries.length - 1].width -= remainingWidth;\n        }\n        /**\n         * Set every items size relative to 100 relative to its size to total\n         */\n        for (let i = 0; i < this.contentItems.length; i++) {\n            this.contentItems[i].width = (allEntries[i].width / sizeData.totalWidth) * 100;\n        }\n    }\n    /**\n     * Instantiates a new Splitter, binds events to it and adds\n     * it to the array of splitters at the position specified as the index argument\n     *\n     * What it doesn't do though is append the splitter to the DOM\n     *\n     * @param index - The position of the splitter\n     *\n     * @returns\n     * @internal\n     */\n    createSplitter(index) {\n        const splitter = new Splitter(this._isColumn, this._splitterSize, this._splitterGrabSize);\n        splitter.on('drag', (offsetX, offsetY) => this.onSplitterDrag(splitter, offsetX, offsetY));\n        splitter.on('dragStop', () => this.onSplitterDragStop(splitter));\n        splitter.on('dragStart', () => this.onSplitterDragStart(splitter));\n        this._splitter.splice(index, 0, splitter);\n        return splitter;\n    }\n    /**\n     * Locates the instance of Splitter in the array of\n     * registered splitters and returns a map containing the contentItem\n     * before and after the splitters, both of which are affected if the\n     * splitter is moved\n     *\n     * @returns A map of contentItems that the splitter affects\n     * @internal\n     */\n    getItemsForSplitter(splitter) {\n        const index = this._splitter.indexOf(splitter);\n        return {\n            before: this.contentItems[index],\n            after: this.contentItems[index + 1]\n        };\n    }\n    /**\n     * Gets the minimum dimensions for the given item configuration array\n     * @internal\n     */\n    getMinimumDimensions(arr) {\n        var _a, _b;\n        let minWidth = 0;\n        let minHeight = 0;\n        for (let i = 0; i < arr.length; ++i) {\n            minWidth = Math.max((_a = arr[i].minWidth) !== null && _a !== void 0 ? _a : 0, minWidth);\n            minHeight = Math.max((_b = arr[i].minHeight) !== null && _b !== void 0 ? _b : 0, minHeight);\n        }\n        return {\n            horizontal: minWidth,\n            vertical: minHeight\n        };\n    }\n    /**\n     * Invoked when a splitter's dragListener fires dragStart. Calculates the splitters\n     * movement area once (so that it doesn't need calculating on every mousemove event)\n     * @internal\n     */\n    onSplitterDragStart(splitter) {\n        const items = this.getItemsForSplitter(splitter);\n        const minSize = this.layoutManager.layoutConfig.dimensions[this._isColumn ? 'minItemHeight' : 'minItemWidth'];\n        const beforeMinDim = this.getMinimumDimensions(items.before.contentItems);\n        const beforeMinSize = this._isColumn ? beforeMinDim.vertical : beforeMinDim.horizontal;\n        const afterMinDim = this.getMinimumDimensions(items.after.contentItems);\n        const afterMinSize = this._isColumn ? afterMinDim.vertical : afterMinDim.horizontal;\n        this._splitterPosition = 0;\n        this._splitterMinPosition = -1 * (pixelsToNumber(items.before.element.style[this._dimension]) - (beforeMinSize || minSize));\n        this._splitterMaxPosition = pixelsToNumber(items.after.element.style[this._dimension]) - (afterMinSize || minSize);\n    }\n    /**\n     * Invoked when a splitter's DragListener fires drag. Updates the splitter's DOM position,\n     * but not the sizes of the elements the splitter controls in order to minimize resize events\n     *\n     * @param splitter -\n     * @param offsetX - Relative pixel values to the splitter's original position. Can be negative\n     * @param offsetY - Relative pixel values to the splitter's original position. Can be negative\n     * @internal\n     */\n    onSplitterDrag(splitter, offsetX, offsetY) {\n        let offset = this._isColumn ? offsetY : offsetX;\n        if (this._splitterMinPosition === null || this._splitterMaxPosition === null) {\n            throw new UnexpectedNullError('ROCOSD59226');\n        }\n        offset = Math.max(offset, this._splitterMinPosition);\n        offset = Math.min(offset, this._splitterMaxPosition);\n        this._splitterPosition = offset;\n        const offsetPixels = numberToPixels(offset);\n        if (this._isColumn) {\n            splitter.element.style.top = offsetPixels;\n        }\n        else {\n            splitter.element.style.left = offsetPixels;\n        }\n    }\n    /**\n     * Invoked when a splitter's DragListener fires dragStop. Resets the splitters DOM position,\n     * and applies the new sizes to the elements before and after the splitter and their children\n     * on the next animation frame\n     * @internal\n     */\n    onSplitterDragStop(splitter) {\n        if (this._splitterPosition === null) {\n            throw new UnexpectedNullError('ROCOSDS66932');\n        }\n        else {\n            const items = this.getItemsForSplitter(splitter);\n            const sizeBefore = pixelsToNumber(items.before.element.style[this._dimension]);\n            const sizeAfter = pixelsToNumber(items.after.element.style[this._dimension]);\n            const splitterPositionInRange = (this._splitterPosition + sizeBefore) / (sizeBefore + sizeAfter);\n            const totalRelativeSize = items.before[this._dimension] + items.after[this._dimension];\n            items.before[this._dimension] = splitterPositionInRange * totalRelativeSize;\n            items.after[this._dimension] = (1 - splitterPositionInRange) * totalRelativeSize;\n            splitter.element.style.top = numberToPixels(0);\n            splitter.element.style.left = numberToPixels(0);\n            globalThis.requestAnimationFrame(() => this.updateSize(false));\n        }\n    }\n}\n/** @public */\n(function (RowOrColumn) {\n    /** @internal */\n    function getElementDimensionSize(element, dimension) {\n        if (dimension === 'width') {\n            return getElementWidth(element);\n        }\n        else {\n            return getElementHeight(element);\n        }\n    }\n    RowOrColumn.getElementDimensionSize = getElementDimensionSize;\n    /** @internal */\n    function setElementDimensionSize(element, dimension, value) {\n        if (dimension === 'width') {\n            return setElementWidth(element, value);\n        }\n        else {\n            return setElementHeight(element, value);\n        }\n    }\n    RowOrColumn.setElementDimensionSize = setElementDimensionSize;\n    /** @internal */\n    function createElement(document, isColumn) {\n        const element = document.createElement('div');\n        element.classList.add(\"lm_item\" /* Item */);\n        if (isColumn) {\n            element.classList.add(\"lm_column\" /* Column */);\n        }\n        else {\n            element.classList.add(\"lm_row\" /* Row */);\n        }\n        return element;\n    }\n    RowOrColumn.createElement = createElement;\n})(RowOrColumn || (RowOrColumn = {}));\n//# sourceMappingURL=row-or-column.js.map","import { ItemConfig } from '../config/config';\nimport { ResolvedGroundItemConfig, ResolvedHeaderedItemConfig, ResolvedItemConfig, ResolvedRootItemConfig, ResolvedStackItemConfig } from '../config/resolved-config';\nimport { AssertError, UnexpectedNullError } from '../errors/internal-error';\nimport { ItemType } from '../utils/types';\nimport { getElementWidthAndHeight, setElementHeight, setElementWidth } from '../utils/utils';\nimport { ComponentItem } from './component-item';\nimport { ComponentParentableItem } from './component-parentable-item';\nimport { ContentItem } from './content-item';\nimport { RowOrColumn } from './row-or-column';\n/**\n * GroundItem is the ContentItem whose one child is the root ContentItem (Root is planted in Ground).\n * (Previously it was called root however this was incorrect as its child is the root item)\n * There is only one instance of GroundItem and it is automatically created by the Layout Manager\n * @internal\n */\nexport class GroundItem extends ComponentParentableItem {\n    constructor(layoutManager, rootItemConfig, containerElement) {\n        super(layoutManager, ResolvedGroundItemConfig.create(rootItemConfig), null, GroundItem.createElement(document));\n        this.isGround = true;\n        this._childElementContainer = this.element;\n        this._containerElement = containerElement;\n        // insert before any pre-existing content elements\n        let before = null;\n        while (true) {\n            const prev = before ? before.previousSibling : this._containerElement.lastChild;\n            if (prev instanceof Element\n                && prev.classList.contains(\"lm_content\" /* Content */)) {\n                before = prev;\n            }\n            else {\n                break;\n            }\n        }\n        this._containerElement.insertBefore(this.element, before);\n    }\n    init() {\n        if (this.isInitialised === true)\n            return;\n        this.updateNodeSize();\n        for (let i = 0; i < this.contentItems.length; i++) {\n            this._childElementContainer.appendChild(this.contentItems[i].element);\n        }\n        super.init();\n        this.initContentItems();\n    }\n    /**\n     * Loads a new Layout\n     * Internal only.  To load a new layout with API, use {@link (LayoutManager:class).loadLayout}\n     */\n    loadRoot(rootItemConfig) {\n        // Remove existing root if it exists\n        this.clearRoot();\n        if (rootItemConfig !== undefined) {\n            const rootContentItem = this.layoutManager.createAndInitContentItem(rootItemConfig, this);\n            this.addChild(rootContentItem, 0);\n        }\n    }\n    clearRoot() {\n        // Remove existing root if it exists\n        const contentItems = this.contentItems;\n        switch (contentItems.length) {\n            case 0: {\n                return;\n            }\n            case 1: {\n                const existingRootContentItem = contentItems[0];\n                existingRootContentItem.remove();\n                return;\n            }\n            default: {\n                throw new AssertError('GILR07721');\n            }\n        }\n    }\n    /**\n     * Adds a ContentItem child to root ContentItem.\n     * Internal only.  To load a add with API, use {@link (LayoutManager:class).addItem}\n     * @returns -1 if added as root otherwise index in root ContentItem's content\n     */\n    addItem(itemConfig, index) {\n        this.layoutManager.checkMinimiseMaximisedStack();\n        const resolvedItemConfig = ItemConfig.resolve(itemConfig);\n        let parent;\n        if (this.contentItems.length > 0) {\n            parent = this.contentItems[0];\n        }\n        else {\n            parent = this;\n        }\n        if (parent.isComponent) {\n            throw new Error('Cannot add item as child to ComponentItem');\n        }\n        else {\n            const contentItem = this.layoutManager.createAndInitContentItem(resolvedItemConfig, parent);\n            index = parent.addChild(contentItem, index);\n            return (parent === this) ? -1 : index;\n        }\n    }\n    loadComponentAsRoot(itemConfig) {\n        // Remove existing root if it exists\n        this.clearRoot();\n        const resolvedItemConfig = ItemConfig.resolve(itemConfig);\n        if (resolvedItemConfig.maximised) {\n            throw new Error('Root Component cannot be maximised');\n        }\n        else {\n            const rootContentItem = new ComponentItem(this.layoutManager, resolvedItemConfig, this);\n            rootContentItem.init();\n            this.addChild(rootContentItem, 0);\n        }\n    }\n    /**\n     * Adds a Root ContentItem.\n     * Internal only.  To replace Root ContentItem with API, use {@link (LayoutManager:class).loadLayout}\n     */\n    addChild(contentItem, index) {\n        if (this.contentItems.length > 0) {\n            throw new Error('Ground node can only have a single child');\n        }\n        else {\n            // contentItem = this.layoutManager._$normalizeContentItem(contentItem, this);\n            this._childElementContainer.appendChild(contentItem.element);\n            index = super.addChild(contentItem, index);\n            this.updateSize(false);\n            this.emitBaseBubblingEvent('stateChanged');\n            return index;\n        }\n    }\n    /** @internal */\n    calculateConfigContent() {\n        const contentItems = this.contentItems;\n        const count = contentItems.length;\n        const result = new Array(count);\n        for (let i = 0; i < count; i++) {\n            const item = contentItems[i];\n            const itemConfig = item.toConfig();\n            if (ResolvedRootItemConfig.isRootItemConfig(itemConfig)) {\n                result[i] = itemConfig;\n            }\n            else {\n                throw new AssertError('RCCC66832');\n            }\n        }\n        return result;\n    }\n    /** @internal */\n    setSize(width, height) {\n        if (width === undefined || height === undefined) {\n            this.updateSize(false); // For backwards compatibility with v1.x API\n        }\n        else {\n            setElementWidth(this.element, width);\n            setElementHeight(this.element, height);\n            // GroundItem can be empty\n            if (this.contentItems.length > 0) {\n                setElementWidth(this.contentItems[0].element, width);\n                setElementHeight(this.contentItems[0].element, height);\n            }\n            this.updateContentItemsSize(false);\n        }\n    }\n    /**\n     * Adds a Root ContentItem.\n     * Internal only.  To replace Root ContentItem with API, use {@link (LayoutManager:class).updateRootSize}\n     */\n    updateSize(force) {\n        this.layoutManager.beginVirtualSizedContainerAdding();\n        try {\n            this.updateNodeSize();\n            this.updateContentItemsSize(force);\n        }\n        finally {\n            this.layoutManager.endVirtualSizedContainerAdding();\n        }\n    }\n    createSideAreas() {\n        const areaSize = 50;\n        const oppositeSides = GroundItem.Area.oppositeSides;\n        const result = new Array(Object.keys(oppositeSides).length);\n        let idx = 0;\n        for (const key in oppositeSides) {\n            const side = key;\n            const area = this.getElementArea();\n            if (area === null) {\n                throw new UnexpectedNullError('RCSA77553');\n            }\n            else {\n                area.side = side;\n                if (oppositeSides[side][1] === '2')\n                    area[side] = area[oppositeSides[side]] - areaSize;\n                else\n                    area[side] = area[oppositeSides[side]] + areaSize;\n                area.surface = (area.x2 - area.x1) * (area.y2 - area.y1);\n                result[idx++] = area;\n            }\n        }\n        return result;\n    }\n    highlightDropZone(x, y, area) {\n        this.layoutManager.tabDropPlaceholder.remove();\n        super.highlightDropZone(x, y, area);\n    }\n    onDrop(contentItem, area) {\n        if (contentItem.isComponent) {\n            const itemConfig = ResolvedStackItemConfig.createDefault();\n            // since ResolvedItemConfig.contentItems not set up, we need to add header from Component\n            const component = contentItem;\n            itemConfig.header = ResolvedHeaderedItemConfig.Header.createCopy(component.headerConfig);\n            const stack = this.layoutManager.createAndInitContentItem(itemConfig, this);\n            stack.addChild(contentItem);\n            contentItem = stack;\n        }\n        if (this.contentItems.length === 0) {\n            this.addChild(contentItem);\n        }\n        else {\n            /*\n             * If the contentItem that's being dropped is not dropped on a Stack (cases which just passed above and\n             * which would wrap the contentItem in a Stack) we need to check whether contentItem is a RowOrColumn.\n             * If it is, we need to re-wrap it in a Stack like it was when it was dragged by its Tab (it was dragged!).\n             */\n            if (contentItem.type === ItemType.row || contentItem.type === ItemType.column) {\n                const itemConfig = ResolvedStackItemConfig.createDefault();\n                const stack = this.layoutManager.createContentItem(itemConfig, this);\n                stack.addChild(contentItem);\n                contentItem = stack;\n            }\n            const type = area.side[0] == 'x' ? ItemType.row : ItemType.column;\n            const dimension = area.side[0] == 'x' ? 'width' : 'height';\n            const insertBefore = area.side[1] == '2';\n            const column = this.contentItems[0];\n            if (!(column instanceof RowOrColumn) || column.type !== type) {\n                const itemConfig = ResolvedItemConfig.createDefault(type);\n                const rowOrColumn = this.layoutManager.createContentItem(itemConfig, this);\n                this.replaceChild(column, rowOrColumn);\n                rowOrColumn.addChild(contentItem, insertBefore ? 0 : undefined, true);\n                rowOrColumn.addChild(column, insertBefore ? undefined : 0, true);\n                column[dimension] = 50;\n                contentItem[dimension] = 50;\n                rowOrColumn.updateSize(false);\n            }\n            else {\n                const sibling = column.contentItems[insertBefore ? 0 : column.contentItems.length - 1];\n                column.addChild(contentItem, insertBefore ? 0 : undefined, true);\n                sibling[dimension] *= 0.5;\n                contentItem[dimension] = sibling[dimension];\n                column.updateSize(false);\n            }\n        }\n    }\n    // No ContentItem can dock with groundItem.  However Stack can have a GroundItem parent and Stack requires that\n    // its parent implement dock() function.  Accordingly this function is implemented but throws an exception as it should\n    // never be called\n    dock() {\n        throw new AssertError('GID87731');\n    }\n    // No ContentItem can dock with groundItem.  However Stack can have a GroundItem parent and Stack requires that\n    // its parent implement validateDocking() function.  Accordingly this function is implemented but throws an exception as it should\n    // never be called\n    validateDocking() {\n        throw new AssertError('GIVD87732');\n    }\n    getAllContentItems() {\n        const result = [this];\n        this.deepGetAllContentItems(this.contentItems, result);\n        return result;\n    }\n    getConfigMaximisedItems() {\n        const result = [];\n        this.deepFilterContentItems(this.contentItems, result, (item) => {\n            if (ContentItem.isStack(item) && item.initialWantMaximise) {\n                return true;\n            }\n            else {\n                if (ContentItem.isComponentItem(item) && item.initialWantMaximise) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }\n        });\n        return result;\n    }\n    getItemsByPopInParentId(popInParentId) {\n        const result = [];\n        this.deepFilterContentItems(this.contentItems, result, (item) => item.popInParentIds.includes(popInParentId));\n        return result;\n    }\n    toConfig() {\n        throw new Error('Cannot generate GroundItem config');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setActiveComponentItem(item, focus, suppressFocusEvent) {\n        // only applicable if ComponentItem is root and then it always has focus\n    }\n    updateNodeSize() {\n        const { width, height } = getElementWidthAndHeight(this._containerElement);\n        setElementWidth(this.element, width);\n        setElementHeight(this.element, height);\n        /*\n         * GroundItem can be empty\n         */\n        if (this.contentItems.length > 0) {\n            setElementWidth(this.contentItems[0].element, width);\n            setElementHeight(this.contentItems[0].element, height);\n        }\n    }\n    deepGetAllContentItems(content, result) {\n        for (let i = 0; i < content.length; i++) {\n            const contentItem = content[i];\n            result.push(contentItem);\n            this.deepGetAllContentItems(contentItem.contentItems, result);\n        }\n    }\n    deepFilterContentItems(content, result, checkAcceptFtn) {\n        for (let i = 0; i < content.length; i++) {\n            const contentItem = content[i];\n            if (checkAcceptFtn(contentItem)) {\n                result.push(contentItem);\n            }\n            this.deepFilterContentItems(contentItem.contentItems, result, checkAcceptFtn);\n        }\n    }\n}\n/** @internal */\n(function (GroundItem) {\n    let Area;\n    (function (Area) {\n        Area.oppositeSides = {\n            y2: 'y1',\n            x2: 'x1',\n            y1: 'y2',\n            x1: 'x2',\n        };\n    })(Area = GroundItem.Area || (GroundItem.Area = {}));\n    function createElement(document) {\n        const element = document.createElement('div');\n        element.classList.add(\"lm_goldenlayout\" /* GoldenLayout */);\n        element.classList.add(\"lm_item\" /* Item */);\n        element.classList.add(\"lm_root\" /* Root */);\n        return element;\n    }\n    GroundItem.createElement = createElement;\n})(GroundItem || (GroundItem = {}));\n//# sourceMappingURL=ground-item.js.map","import { ComponentItemConfig } from '../config/config';\nimport { UnexpectedNullError } from '../errors/internal-error';\nimport { ComponentItem } from '../items/component-item';\nimport { GroundItem } from '../items/ground-item';\nimport { DragListener } from '../utils/drag-listener';\nimport { DragProxy } from './drag-proxy';\nimport { ResolvedRowOrColumnItemConfig } from \"../config/resolved-config\";\n/**\n * Allows for any DOM item to create a component on drag\n * start to be dragged into the Layout\n * @public\n */\nexport class DragSource {\n    /** @internal */\n    constructor(\n    /** @internal */\n    _layoutManager, \n    /** @internal */\n    _element, \n    /** @internal */\n    _extraAllowableChildTargets, \n    /** @internal */\n    _componentTypeOrFtn, \n    /** @internal */\n    _componentState, \n    /** @internal */\n    _title) {\n        this._layoutManager = _layoutManager;\n        this._element = _element;\n        this._extraAllowableChildTargets = _extraAllowableChildTargets;\n        this._componentTypeOrFtn = _componentTypeOrFtn;\n        this._componentState = _componentState;\n        this._title = _title;\n        this._dragListener = null;\n        this._dummyGroundContainer = document.createElement('div');\n        const dummyRootItemConfig = ResolvedRowOrColumnItemConfig.createDefault('row');\n        this._dummyGroundContentItem = new GroundItem(this._layoutManager, dummyRootItemConfig, this._dummyGroundContainer);\n        this.createDragListener();\n    }\n    /**\n     * Disposes of the drag listeners so the drag source is not usable any more.\n     * @internal\n     */\n    destroy() {\n        this.removeDragListener();\n    }\n    /**\n     * Called initially and after every drag\n     * @internal\n     */\n    createDragListener() {\n        this.removeDragListener();\n        this._dragListener = new DragListener(this._element, this._extraAllowableChildTargets);\n        this._dragListener.on('dragStart', (x, y) => this.onDragStart(x, y));\n        this._dragListener.on('dragStop', () => this.onDragStop());\n    }\n    /**\n     * Callback for the DragListener's dragStart event\n     *\n     * @param x - The x position of the mouse on dragStart\n     * @param y - The x position of the mouse on dragStart\n     * @internal\n     */\n    onDragStart(x, y) {\n        let componentType;\n        let componentState;\n        let title;\n        if (typeof this._componentTypeOrFtn === \"function\") {\n            const dragSourceItemConfig = this._componentTypeOrFtn();\n            componentType = dragSourceItemConfig.type;\n            componentState = dragSourceItemConfig.state;\n            title = dragSourceItemConfig.title;\n        }\n        else {\n            componentType = this._componentTypeOrFtn;\n            componentState = this._componentState;\n            title = this._title;\n        }\n        // Create a dummy ContentItem only for drag purposes\n        // All ContentItems (except for GroundItem) need a parent.  When dragging, the parent is not used.\n        // Instead of allowing null parents (as Javascript version did), use a temporary dummy GroundItem parent and add ContentItem to that\n        // If this does not work, need to create alternative GroundItem class\n        const itemConfig = {\n            type: 'component',\n            componentType,\n            componentState,\n            title,\n        };\n        const resolvedItemConfig = ComponentItemConfig.resolve(itemConfig);\n        const componentItem = new ComponentItem(this._layoutManager, resolvedItemConfig, this._dummyGroundContentItem);\n        this._dummyGroundContentItem.contentItems.push(componentItem);\n        if (this._dragListener === null) {\n            throw new UnexpectedNullError('DSODSD66746');\n        }\n        else {\n            const dragProxy = new DragProxy(x, y, this._dragListener, this._layoutManager, componentItem, this._dummyGroundContentItem);\n            const transitionIndicator = this._layoutManager.transitionIndicator;\n            if (transitionIndicator === null) {\n                throw new UnexpectedNullError('DSODST66746');\n            }\n            else {\n                transitionIndicator.transitionElements(this._element, dragProxy.element);\n            }\n        }\n    }\n    /** @internal */\n    onDragStop() {\n        // if (this._dummyGroundContentItem === undefined) {\n        //     throw new UnexpectedUndefinedError('DSODSDRU08116');\n        // } else {\n        //     this._dummyGroundContentItem._$destroy\n        //     this._dummyGroundContentItem = undefined;\n        // }\n        this.createDragListener();\n    }\n    /**\n     * Called after every drag and when the drag source is being disposed of.\n     * @internal\n     */\n    removeDragListener() {\n        if (this._dragListener !== null) {\n            this._dragListener.destroy();\n            this._dragListener = null;\n        }\n    }\n}\n//# sourceMappingURL=drag-source.js.map","import { numberToPixels, setElementDisplayVisibility } from '../utils/utils';\n/** @internal */\nexport class DropTargetIndicator {\n    constructor() {\n        // Maybe use container instead of Document Body?\n        this._element = document.createElement('div');\n        this._element.classList.add(\"lm_dropTargetIndicator\" /* DropTargetIndicator */);\n        const innerElement = document.createElement('div');\n        innerElement.classList.add(\"lm_inner\" /* Inner */);\n        this._element.appendChild(innerElement);\n        document.body.appendChild(this._element);\n    }\n    destroy() {\n        this._element.remove();\n    }\n    highlightArea(area) {\n        this._element.style.left = numberToPixels(area.x1);\n        this._element.style.top = numberToPixels(area.y1);\n        this._element.style.width = numberToPixels(area.x2 - area.x1);\n        this._element.style.height = numberToPixels(area.y2 - area.y1);\n        this._element.style.display = 'block';\n    }\n    hide() {\n        setElementDisplayVisibility(this._element, false);\n    }\n}\n//# sourceMappingURL=drop-target-indicator.js.map","/** @internal @deprecated To be removed */\nexport class TransitionIndicator {\n    constructor() {\n        this._element = document.createElement('div');\n        this._element.classList.add(\"lm_transition_indicator\" /* TransitionIndicator */);\n        document.body.appendChild(this._element);\n        this._toElement = null;\n        this._fromDimensions = null;\n        this._totalAnimationDuration = 200;\n        this._animationStartTime = null;\n    }\n    destroy() {\n        this._element.remove();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    transitionElements(fromElement, toElement) {\n        /**\n         * TODO - This is not quite as cool as expected. Review.\n         */\n        return;\n        // this._toElement = toElement;\n        // this._animationStartTime = now();\n        // this._fromDimensions = this._measure(fromElement);\n        // this._fromDimensions.opacity = 0.8;\n        // this._element.show().css(this._fromDimensions);\n        // animFrame(fnBind(this._nextAnimationFrame, this));\n    }\n    nextAnimationFrame() {\n        // if (this._toElement === null || this._fromDimensions === null || this._animationStartTime === null) {\n        //     throw new UnexpectedNullError('TINAFTD97115');\n        // } else {\n        //     const toDimensions = this.measure(this._toElement);\n        //     const animationProgress = (now() - this._animationStartTime) / this._totalAnimationDuration;\n        //     const currentFrameStyles = {};\n        //     const cssProperty;\n        //     if (animationProgress >= 1) {\n        //         this._element.style.display = 'none';\n        //         return;\n        //     }\n        //     toDimensions.opacity = 0;\n        //     for (const cssProperty in this._fromDimensions) {\n        //         currentFrameStyles[cssProperty] = this._fromDimensions[cssProperty] +\n        //             (toDimensions[cssProperty] - this._fromDimensions[cssProperty]) *\n        //             animationProgress;\n        //     }\n        //     this._element.css(currentFrameStyles);\n        //     animFrame(fnBind(this._nextAnimationFrame, this));\n        // }\n    }\n    measure(element) {\n        const rect = element.getBoundingClientRect();\n        return {\n            left: rect.left,\n            top: rect.top,\n            width: element.offsetWidth,\n            height: element.offsetHeight,\n        };\n    }\n}\n//# sourceMappingURL=transition-indicator.js.map","import { UnexpectedNullError } from '../errors/internal-error';\nimport { EventEmitter } from './event-emitter';\n/**\n * An EventEmitter singleton that propagates events\n * across multiple windows. This is a little bit trickier since\n * windows are allowed to open childWindows in their own right.\n *\n * This means that we deal with a tree of windows. Therefore, we do the event propagation in two phases:\n *\n * - Propagate events from this layout to the parent layout\n *   - Repeat until the event arrived at the root layout\n * - Propagate events to this layout and to all children\n *   - Repeat until all layouts got the event\n *\n * **WARNING**: Only userBroadcast events are propagated between windows.\n * This means the you have to take care of propagating state changes between windows yourself.\n *\n * @public\n */\nexport class EventHub extends EventEmitter {\n    /**\n     * Creates a new EventHub instance\n     * @param _layoutManager - the layout manager to synchronize between the windows\n     * @internal\n     */\n    constructor(\n    /** @internal */\n    _layoutManager) {\n        super();\n        this._layoutManager = _layoutManager;\n        /** @internal */\n        this._childEventListener = (childEvent) => this.onEventFromChild(childEvent);\n        globalThis.addEventListener(EventHub.ChildEventName, this._childEventListener, { passive: true });\n    }\n    /**\n     * Emit an event and notify listeners\n     *\n     * @param eventName - The name of the event\n     * @param args - Additional arguments that will be passed to the listener\n     * @public\n     */\n    emit(eventName, ...args) {\n        if (eventName === 'userBroadcast') {\n            // Explicitly redirect the user broadcast to our overridden method.\n            this.emitUserBroadcast(...args);\n        }\n        else {\n            super.emit(eventName, ...args);\n        }\n    }\n    /**\n     * Broadcasts a message to all other currently opened windows.\n     * @public\n     */\n    emitUserBroadcast(...args) {\n        // Step 1: Bubble up the event\n        this.handleUserBroadcastEvent('userBroadcast', args);\n    }\n    /**\n     * Destroys the EventHub\n     * @internal\n     */\n    destroy() {\n        globalThis.removeEventListener(EventHub.ChildEventName, this._childEventListener);\n    }\n    /**\n     * Internal processor to process local events.\n     * @internal\n     */\n    handleUserBroadcastEvent(eventName, args) {\n        if (this._layoutManager.isSubWindow) {\n            // We are a sub window and received an event from one of our children.\n            // So propagate it to the Root.\n            this.propagateToParent(eventName, args);\n        }\n        else {\n            // We are the root window, propagate it to the subtree below us.\n            this.propagateToThisAndSubtree(eventName, args);\n        }\n    }\n    /**\n     * Callback for child events raised on the window\n     * @internal\n     */\n    onEventFromChild(event) {\n        const detail = event.detail;\n        this.handleUserBroadcastEvent(detail.eventName, detail.args);\n    }\n    /**\n     * Propagates the event to the parent by emitting\n     * it on the parent's DOM window\n     * @internal\n     */\n    propagateToParent(eventName, args) {\n        const detail = {\n            layoutManager: this._layoutManager,\n            eventName,\n            args: args,\n        };\n        const eventInit = {\n            bubbles: true,\n            cancelable: true,\n            detail,\n        };\n        const event = new CustomEvent(EventHub.ChildEventName, eventInit);\n        const opener = globalThis.opener;\n        if (opener === null) {\n            throw new UnexpectedNullError('EHPTP15778');\n        }\n        opener.dispatchEvent(event);\n    }\n    /**\n     * Propagate events to the whole subtree under this event hub.\n     * @internal\n     */\n    propagateToThisAndSubtree(eventName, args) {\n        this.emitUnknown(eventName, ...args);\n        for (let i = 0; i < this._layoutManager.openPopouts.length; i++) {\n            const childGl = this._layoutManager.openPopouts[i].getGlInstance();\n            if (childGl) {\n                childGl.eventHub.propagateToThisAndSubtree(eventName, args);\n            }\n        }\n    }\n}\n/** @public */\n(function (EventHub) {\n    /** @internal */\n    EventHub.ChildEventName = 'gl_child_event';\n})(EventHub || (EventHub = {}));\n//# sourceMappingURL=event-hub.js.map","import { ItemConfig, LayoutConfig } from './config/config';\nimport { ResolvedItemConfig, ResolvedLayoutConfig, ResolvedRootItemConfig } from \"./config/resolved-config\";\nimport { BrowserPopout } from './controls/browser-popout';\nimport { DragProxy } from './controls/drag-proxy';\nimport { DragSource } from './controls/drag-source';\nimport { DropTargetIndicator } from './controls/drop-target-indicator';\nimport { TransitionIndicator } from './controls/transition-indicator';\nimport { ConfigurationError } from './errors/external-error';\nimport { AssertError, UnexpectedNullError, UnexpectedUndefinedError, UnreachableCaseError } from './errors/internal-error';\nimport { ComponentItem } from './items/component-item';\nimport { ContentItem } from './items/content-item';\nimport { GroundItem } from './items/ground-item';\nimport { RowOrColumn } from './items/row-or-column';\nimport { Stack } from './items/stack';\nimport { ConfigMinifier } from './utils/config-minifier';\nimport { EventEmitter } from './utils/event-emitter';\nimport { EventHub } from './utils/event-hub';\nimport { I18nStrings, i18nStrings } from './utils/i18n-strings';\nimport { ItemType, ResponsiveMode } from './utils/types';\nimport { getElementWidthAndHeight, removeFromArray, setElementHeight, setElementWidth } from './utils/utils';\n/**\n * The main class that will be exposed as GoldenLayout.\n */\n/** @public */\nexport class LayoutManager extends EventEmitter {\n    /**\n    * @param container - A Dom HTML element. Defaults to body\n    * @internal\n    */\n    constructor(parameters) {\n        super();\n        /** Whether the layout will be automatically be resized to container whenever the container's size is changed\n         * Default is true if <body> is the container otherwise false\n         * Default will be changed to true for any container in the future\n         */\n        this.resizeWithContainerAutomatically = false;\n        /** The debounce interval (in milliseconds) used whenever a layout is automatically resized.  0 means next tick */\n        this.resizeDebounceInterval = 100;\n        /** Extend the current debounce delay time period if it is triggered during the delay.\n         * If this is true, the layout will only resize when its container has stopped being resized.\n         * If it is false, the layout will resize at intervals while its container is being resized.\n         */\n        this.resizeDebounceExtendedWhenPossible = true;\n        /** @internal */\n        this._isInitialised = false;\n        /** @internal */\n        this._groundItem = undefined;\n        /** @internal */\n        this._openPopouts = [];\n        /** @internal */\n        this._dropTargetIndicator = null;\n        /** @internal */\n        this._transitionIndicator = null;\n        /** @internal */\n        this._itemAreas = [];\n        /** @internal */\n        this._maximisePlaceholder = LayoutManager.createMaximisePlaceElement(document);\n        /** @internal */\n        this._tabDropPlaceholder = LayoutManager.createTabDropPlaceholderElement(document);\n        /** @internal */\n        this._dragSources = [];\n        /** @internal */\n        this._updatingColumnsResponsive = false;\n        /** @internal */\n        this._firstLoad = true;\n        /** @internal */\n        this._eventHub = new EventHub(this);\n        /** @internal */\n        this._width = null;\n        /** @internal */\n        this._height = null;\n        /** @internal */\n        this._virtualSizedContainers = [];\n        /** @internal */\n        this._virtualSizedContainerAddingBeginCount = 0;\n        /** @internal */\n        this._sizeInvalidationBeginCount = 0;\n        /** @internal */\n        this._resizeObserver = new ResizeObserver(() => this.handleContainerResize());\n        /** @internal */\n        this._windowUnloadListener = () => this.onUnload();\n        /** @internal */\n        this._maximisedStackBeforeDestroyedListener = (ev) => this.cleanupBeforeMaximisedStackDestroyed(ev);\n        this.isSubWindow = parameters.isSubWindow;\n        this._constructorOrSubWindowLayoutConfig = parameters.constructorOrSubWindowLayoutConfig;\n        I18nStrings.checkInitialise();\n        ConfigMinifier.checkInitialise();\n        if (parameters.containerElement !== undefined) {\n            this._containerElement = parameters.containerElement;\n        }\n    }\n    get container() { return this._containerElement; }\n    get isInitialised() { return this._isInitialised; }\n    /** @internal */\n    get groundItem() { return this._groundItem; }\n    /** @internal @deprecated use {@link (LayoutManager:class).groundItem} instead */\n    get root() { return this._groundItem; }\n    get openPopouts() { return this._openPopouts; }\n    /** @internal */\n    get dropTargetIndicator() { return this._dropTargetIndicator; }\n    /** @internal @deprecated To be removed */\n    get transitionIndicator() { return this._transitionIndicator; }\n    get width() { return this._width; }\n    get height() { return this._height; }\n    /**\n     * Retrieves the {@link (EventHub:class)} instance associated with this layout manager.\n     * This can be used to propagate events between the windows\n     * @public\n     */\n    get eventHub() { return this._eventHub; }\n    get rootItem() {\n        if (this._groundItem === undefined) {\n            throw new Error('Cannot access rootItem before init');\n        }\n        else {\n            const groundContentItems = this._groundItem.contentItems;\n            if (groundContentItems.length === 0) {\n                return undefined;\n            }\n            else {\n                return this._groundItem.contentItems[0];\n            }\n        }\n    }\n    get focusedComponentItem() { return this._focusedComponentItem; }\n    /** @internal */\n    get tabDropPlaceholder() { return this._tabDropPlaceholder; }\n    get maximisedStack() { return this._maximisedStack; }\n    /** @deprecated indicates deprecated constructor use */\n    get deprecatedConstructor() { return !this.isSubWindow && this._constructorOrSubWindowLayoutConfig !== undefined; }\n    /**\n     * Destroys the LayoutManager instance itself as well as every ContentItem\n     * within it. After this is called nothing should be left of the LayoutManager.\n     */\n    destroy() {\n        if (this._isInitialised) {\n            if (this.layoutConfig.settings.closePopoutsOnUnload === true) {\n                for (let i = 0; i < this._openPopouts.length; i++) {\n                    this._openPopouts[i].close();\n                }\n            }\n            this._resizeObserver.disconnect();\n            this.checkClearResizeTimeout();\n            globalThis.removeEventListener('unload', this._windowUnloadListener);\n            globalThis.removeEventListener('beforeunload', this._windowUnloadListener);\n            if (this._groundItem !== undefined) {\n                this._groundItem.destroy();\n            }\n            this._tabDropPlaceholder.remove();\n            if (this._dropTargetIndicator !== null) {\n                this._dropTargetIndicator.destroy();\n            }\n            if (this._transitionIndicator !== null) {\n                this._transitionIndicator.destroy();\n            }\n            this._eventHub.destroy();\n            for (const dragSource of this._dragSources) {\n                dragSource.destroy();\n            }\n            this._dragSources = [];\n            this._isInitialised = false;\n        }\n    }\n    /**\n     * Takes a GoldenLayout configuration object and\n     * replaces its keys and values recursively with\n     * one letter codes\n     * @deprecated use {@link (ResolvedLayoutConfig:namespace).minifyConfig} instead\n     */\n    minifyConfig(config) {\n        return ResolvedLayoutConfig.minifyConfig(config);\n    }\n    /**\n     * Takes a configuration Object that was previously minified\n     * using minifyConfig and returns its original version\n     * @deprecated use {@link (ResolvedLayoutConfig:namespace).unminifyConfig} instead\n     */\n    unminifyConfig(config) {\n        return ResolvedLayoutConfig.unminifyConfig(config);\n    }\n    /**\n     * Called from GoldenLayout class. Finishes of init\n     * @internal\n     */\n    init() {\n        this.setContainer();\n        this._dropTargetIndicator = new DropTargetIndicator( /*this.container*/);\n        this._transitionIndicator = new TransitionIndicator();\n        this.updateSizeFromContainer();\n        let subWindowRootConfig;\n        if (this.isSubWindow) {\n            if (this._constructorOrSubWindowLayoutConfig === undefined) {\n                // SubWindow LayoutConfig should have been generated by constructor\n                throw new UnexpectedUndefinedError('LMIU07155');\n            }\n            else {\n                if (ItemConfig.isComponent(this._constructorOrSubWindowLayoutConfig.root)) {\n                    subWindowRootConfig = this._constructorOrSubWindowLayoutConfig.root;\n                }\n                else {\n                    // SubWindow LayoutConfig must have Component as Root\n                    throw new AssertError('LMIC07155');\n                }\n                const resolvedLayoutConfig = LayoutConfig.resolve(this._constructorOrSubWindowLayoutConfig);\n                // remove root from layoutConfig\n                this.layoutConfig = Object.assign(Object.assign({}, resolvedLayoutConfig), { root: undefined });\n            }\n        }\n        else {\n            if (this._constructorOrSubWindowLayoutConfig === undefined) {\n                this.layoutConfig = ResolvedLayoutConfig.createDefault(); // will overwritten be loaded via loadLayout\n            }\n            else {\n                // backwards compatibility\n                this.layoutConfig = LayoutConfig.resolve(this._constructorOrSubWindowLayoutConfig);\n            }\n        }\n        const layoutConfig = this.layoutConfig;\n        this._groundItem = new GroundItem(this, layoutConfig.root, this._containerElement);\n        this._groundItem.init();\n        this.checkLoadedLayoutMaximiseItem();\n        this.bindEvents();\n        this._isInitialised = true;\n        this.adjustColumnsResponsive();\n        this.emit('initialised');\n        if (subWindowRootConfig !== undefined) {\n            // must be SubWindow\n            this.loadComponentAsRoot(subWindowRootConfig);\n        }\n    }\n    /**\n     * Loads a new layout\n     * @param layoutConfig - New layout to be loaded\n     */\n    loadLayout(layoutConfig) {\n        if (!this.isInitialised) {\n            // In case application not correctly using legacy constructor\n            throw new Error('GoldenLayout: Need to call init() if LayoutConfig with defined root passed to constructor');\n        }\n        else {\n            if (this._groundItem === undefined) {\n                throw new UnexpectedUndefinedError('LMLL11119');\n            }\n            else {\n                this.createSubWindows(); // still needs to be tested\n                this.layoutConfig = LayoutConfig.resolve(layoutConfig);\n                this._groundItem.loadRoot(this.layoutConfig.root);\n                this.checkLoadedLayoutMaximiseItem();\n                this.adjustColumnsResponsive();\n            }\n        }\n    }\n    /**\n     * Creates a layout configuration object based on the the current state\n     *\n     * @public\n     * @returns GoldenLayout configuration\n     */\n    saveLayout() {\n        if (this._isInitialised === false) {\n            throw new Error('Can\\'t create config, layout not yet initialised');\n        }\n        else {\n            // if (root !== undefined && !(root instanceof ContentItem)) {\n            //     throw new Error('Root must be a ContentItem');\n            // }\n            /*\n            * Content\n            */\n            if (this._groundItem === undefined) {\n                throw new UnexpectedUndefinedError('LMTC18244');\n            }\n            else {\n                const groundContent = this._groundItem.calculateConfigContent();\n                let rootItemConfig;\n                if (groundContent.length !== 1) {\n                    rootItemConfig = undefined;\n                }\n                else {\n                    rootItemConfig = groundContent[0];\n                }\n                /*\n                * Retrieve config for subwindows\n                */\n                this.reconcilePopoutWindows();\n                const openPopouts = [];\n                for (let i = 0; i < this._openPopouts.length; i++) {\n                    openPopouts.push(this._openPopouts[i].toConfig());\n                }\n                const config = {\n                    root: rootItemConfig,\n                    openPopouts,\n                    settings: ResolvedLayoutConfig.Settings.createCopy(this.layoutConfig.settings),\n                    dimensions: ResolvedLayoutConfig.Dimensions.createCopy(this.layoutConfig.dimensions),\n                    header: ResolvedLayoutConfig.Header.createCopy(this.layoutConfig.header),\n                    resolved: true,\n                };\n                return config;\n            }\n        }\n    }\n    /**\n     * Removes any existing layout. Effectively, an empty layout will be loaded.\n     */\n    clear() {\n        if (this._groundItem === undefined) {\n            throw new UnexpectedUndefinedError('LMCL11129');\n        }\n        else {\n            this._groundItem.clearRoot();\n        }\n    }\n    /**\n     * @deprecated Use {@link (LayoutManager:class).saveLayout}\n     */\n    toConfig() {\n        return this.saveLayout();\n    }\n    /**\n     * Adds a new ComponentItem.  Will use default location selectors to ensure a location is found and\n     * component is successfully added\n     * @param componentTypeName - Name of component type to be created.\n     * @param state - Optional initial state to be assigned to component\n     * @returns New ComponentItem created.\n     */\n    newComponent(componentType, componentState, title) {\n        const componentItem = this.newComponentAtLocation(componentType, componentState, title);\n        if (componentItem === undefined) {\n            throw new AssertError('LMNC65588');\n        }\n        else {\n            return componentItem;\n        }\n    }\n    /**\n     * Adds a ComponentItem at the first valid selector location.\n     * @param componentTypeName - Name of component type to be created.\n     * @param state - Optional initial state to be assigned to component\n     * @param locationSelectors - Array of location selectors used to find location in layout where component\n     * will be added. First location in array which is valid will be used. If locationSelectors is undefined,\n     * {@link (LayoutManager:namespace).defaultLocationSelectors} will be used\n     * @returns New ComponentItem created or undefined if no valid location selector was in array.\n     */\n    newComponentAtLocation(componentType, componentState, title, locationSelectors) {\n        if (this._groundItem === undefined) {\n            throw new Error('Cannot add component before init');\n        }\n        else {\n            const location = this.addComponentAtLocation(componentType, componentState, title, locationSelectors);\n            if (location === undefined) {\n                return undefined;\n            }\n            else {\n                const createdItem = location.parentItem.contentItems[location.index];\n                if (!ContentItem.isComponentItem(createdItem)) {\n                    throw new AssertError('LMNC992877533');\n                }\n                else {\n                    return createdItem;\n                }\n            }\n        }\n    }\n    /**\n     * Adds a new ComponentItem.  Will use default location selectors to ensure a location is found and\n     * component is successfully added\n     * @param componentType - Type of component to be created.\n     * @param state - Optional initial state to be assigned to component\n     * @returns Location of new ComponentItem created.\n     */\n    addComponent(componentType, componentState, title) {\n        const location = this.addComponentAtLocation(componentType, componentState, title);\n        if (location === undefined) {\n            throw new AssertError('LMAC99943');\n        }\n        else {\n            return location;\n        }\n    }\n    /**\n     * Adds a ComponentItem at the first valid selector location.\n     * @param componentType - Type of component to be created.\n     * @param state - Optional initial state to be assigned to component\n     * @param locationSelectors - Array of location selectors used to find determine location in layout where component\n     * will be added. First location in array which is valid will be used. If undefined,\n     * {@link (LayoutManager:namespace).defaultLocationSelectors} will be used.\n     * @returns Location of new ComponentItem created or undefined if no valid location selector was in array.\n     */\n    addComponentAtLocation(componentType, componentState, title, locationSelectors) {\n        const itemConfig = {\n            type: 'component',\n            componentType,\n            componentState,\n            title,\n        };\n        return this.addItemAtLocation(itemConfig, locationSelectors);\n    }\n    /**\n     * Adds a new ContentItem.  Will use default location selectors to ensure a location is found and\n     * component is successfully added\n     * @param itemConfig - ResolvedItemConfig of child to be added.\n     * @returns New ContentItem created.\n    */\n    newItem(itemConfig) {\n        const contentItem = this.newItemAtLocation(itemConfig);\n        if (contentItem === undefined) {\n            throw new AssertError('LMNC65588');\n        }\n        else {\n            return contentItem;\n        }\n    }\n    /**\n     * Adds a new child ContentItem under the root ContentItem.  If a root does not exist, then create root ContentItem instead\n     * @param itemConfig - ResolvedItemConfig of child to be added.\n     * @param locationSelectors - Array of location selectors used to find determine location in layout where ContentItem\n     * will be added. First location in array which is valid will be used. If undefined,\n     * {@link (LayoutManager:namespace).defaultLocationSelectors} will be used.\n     * @returns New ContentItem created or undefined if no valid location selector was in array. */\n    newItemAtLocation(itemConfig, locationSelectors) {\n        if (this._groundItem === undefined) {\n            throw new Error('Cannot add component before init');\n        }\n        else {\n            const location = this.addItemAtLocation(itemConfig, locationSelectors);\n            if (location === undefined) {\n                return undefined;\n            }\n            else {\n                const createdItem = location.parentItem.contentItems[location.index];\n                return createdItem;\n            }\n        }\n    }\n    /**\n     * Adds a new ContentItem.  Will use default location selectors to ensure a location is found and\n     * component is successfully added.\n     * @param itemConfig - ResolvedItemConfig of child to be added.\n     * @returns Location of new ContentItem created. */\n    addItem(itemConfig) {\n        const location = this.addItemAtLocation(itemConfig);\n        if (location === undefined) {\n            throw new AssertError('LMAI99943');\n        }\n        else {\n            return location;\n        }\n    }\n    /**\n     * Adds a ContentItem at the first valid selector location.\n     * @param itemConfig - ResolvedItemConfig of child to be added.\n     * @param locationSelectors - Array of location selectors used to find determine location in layout where ContentItem\n     * will be added. First location in array which is valid will be used. If undefined,\n     * {@link (LayoutManager:namespace).defaultLocationSelectors} will be used.\n     * @returns Location of new ContentItem created or undefined if no valid location selector was in array. */\n    addItemAtLocation(itemConfig, locationSelectors) {\n        if (this._groundItem === undefined) {\n            throw new Error('Cannot add component before init');\n        }\n        else {\n            if (locationSelectors === undefined) {\n                // defaultLocationSelectors should always find a location\n                locationSelectors = LayoutManager.defaultLocationSelectors;\n            }\n            const location = this.findFirstLocation(locationSelectors);\n            if (location === undefined) {\n                return undefined;\n            }\n            else {\n                let parentItem = location.parentItem;\n                let addIdx;\n                switch (parentItem.type) {\n                    case ItemType.ground: {\n                        const groundItem = parentItem;\n                        addIdx = groundItem.addItem(itemConfig, location.index);\n                        if (addIdx >= 0) {\n                            parentItem = this._groundItem.contentItems[0]; // was added to rootItem\n                        }\n                        else {\n                            addIdx = 0; // was added as rootItem (which is the first and only ContentItem in GroundItem)\n                        }\n                        break;\n                    }\n                    case ItemType.row:\n                    case ItemType.column: {\n                        const rowOrColumn = parentItem;\n                        addIdx = rowOrColumn.addItem(itemConfig, location.index);\n                        break;\n                    }\n                    case ItemType.stack: {\n                        if (!ItemConfig.isComponent(itemConfig)) {\n                            throw Error(i18nStrings[6 /* ItemConfigIsNotTypeComponent */]);\n                        }\n                        else {\n                            const stack = parentItem;\n                            addIdx = stack.addItem(itemConfig, location.index);\n                            break;\n                        }\n                    }\n                    case ItemType.component: {\n                        throw new AssertError('LMAIALC87444602');\n                    }\n                    default:\n                        throw new UnreachableCaseError('LMAIALU98881733', parentItem.type);\n                }\n                if (ItemConfig.isComponent(itemConfig)) {\n                    // see if stack was inserted\n                    const item = parentItem.contentItems[addIdx];\n                    if (ContentItem.isStack(item)) {\n                        parentItem = item;\n                        addIdx = 0;\n                    }\n                }\n                location.parentItem = parentItem;\n                location.index = addIdx;\n                return location;\n            }\n        }\n    }\n    /** Loads the specified component ResolvedItemConfig as root.\n     * This can be used to display a Component all by itself.  The layout cannot be changed other than having another new layout loaded.\n     * Note that, if this layout is saved and reloaded, it will reload with the Component as a child of a Stack.\n    */\n    loadComponentAsRoot(itemConfig) {\n        if (this._groundItem === undefined) {\n            throw new Error('Cannot add item before init');\n        }\n        else {\n            this._groundItem.loadComponentAsRoot(itemConfig);\n        }\n    }\n    /** @deprecated Use {@link (LayoutManager:class).setSize} */\n    updateSize(width, height) {\n        this.setSize(width, height);\n    }\n    /**\n     * Updates the layout managers size\n     *\n     * @param width - Width in pixels\n     * @param height - Height in pixels\n     */\n    setSize(width, height) {\n        this._width = width;\n        this._height = height;\n        if (this._isInitialised === true) {\n            if (this._groundItem === undefined) {\n                throw new UnexpectedUndefinedError('LMUS18881');\n            }\n            else {\n                this._groundItem.setSize(this._width, this._height);\n                if (this._maximisedStack) {\n                    const { width, height } = getElementWidthAndHeight(this._containerElement);\n                    setElementWidth(this._maximisedStack.element, width);\n                    setElementHeight(this._maximisedStack.element, height);\n                    this._maximisedStack.updateSize(false);\n                }\n                this.adjustColumnsResponsive();\n            }\n        }\n    }\n    /** @internal */\n    beginSizeInvalidation() {\n        this._sizeInvalidationBeginCount++;\n    }\n    /** @internal */\n    endSizeInvalidation() {\n        if (--this._sizeInvalidationBeginCount === 0) {\n            this.updateSizeFromContainer();\n        }\n    }\n    /** @internal */\n    updateSizeFromContainer() {\n        const { width, height } = getElementWidthAndHeight(this._containerElement);\n        this.setSize(width, height);\n    }\n    /**\n     * Update the size of the root ContentItem.  This will update the size of all contentItems in the tree\n     * @param force - In some cases the size is not updated if it has not changed. In this case, events\n     * (such as ComponentContainer.virtualRectingRequiredEvent) are not fired. Setting force to true, ensures the size is updated regardless, and\n     * the respective events are fired. This is sometimes necessary when a component's size has not changed but it has become visible, and the\n     * relevant events need to be fired.\n     */\n    updateRootSize(force = false) {\n        if (this._groundItem === undefined) {\n            throw new UnexpectedUndefinedError('LMURS28881');\n        }\n        else {\n            this._groundItem.updateSize(force);\n        }\n    }\n    /** @public */\n    createAndInitContentItem(config, parent) {\n        const newItem = this.createContentItem(config, parent);\n        newItem.init();\n        return newItem;\n    }\n    /**\n     * Recursively creates new item tree structures based on a provided\n     * ItemConfiguration object\n     *\n     * @param config - ResolvedItemConfig\n     * @param parent - The item the newly created item should be a child of\n     * @internal\n     */\n    createContentItem(config, parent) {\n        if (typeof config.type !== 'string') {\n            throw new ConfigurationError('Missing parameter \\'type\\'', JSON.stringify(config));\n        }\n        /**\n         * We add an additional stack around every component that's not within a stack anyways.\n         */\n        if (\n        // If this is a component\n        ResolvedItemConfig.isComponentItem(config) &&\n            // and it's not already within a stack\n            !(parent instanceof Stack) &&\n            // and we have a parent\n            !!parent &&\n            // and it's not the topmost item in a new window\n            !(this.isSubWindow === true && parent instanceof GroundItem)) {\n            const stackConfig = {\n                type: ItemType.stack,\n                content: [config],\n                width: config.width,\n                minWidth: config.minWidth,\n                height: config.height,\n                minHeight: config.minHeight,\n                id: config.id,\n                maximised: config.maximised,\n                isClosable: config.isClosable,\n                activeItemIndex: 0,\n                header: undefined,\n            };\n            config = stackConfig;\n        }\n        const contentItem = this.createContentItemFromConfig(config, parent);\n        return contentItem;\n    }\n    findFirstComponentItemById(id) {\n        if (this._groundItem === undefined) {\n            throw new UnexpectedUndefinedError('LMFFCIBI82446');\n        }\n        else {\n            return this.findFirstContentItemTypeByIdRecursive(ItemType.component, id, this._groundItem);\n        }\n    }\n    /**\n     * Creates a popout window with the specified content at the specified position\n     *\n     * @param itemConfigOrContentItem - The content of the popout window's layout manager derived from either\n     * a {@link (ContentItem:class)} or {@link (ItemConfig:interface)} or ResolvedItemConfig content (array of {@link (ItemConfig:interface)})\n     * @param positionAndSize - The width, height, left and top of Popout window\n     * @param parentId -The id of the element this item will be appended to when popIn is called\n     * @param indexInParent - The position of this item within its parent element\n     */\n    createPopout(itemConfigOrContentItem, positionAndSize, parentId, indexInParent) {\n        if (itemConfigOrContentItem instanceof ContentItem) {\n            return this.createPopoutFromContentItem(itemConfigOrContentItem, positionAndSize, parentId, indexInParent);\n        }\n        else {\n            return this.createPopoutFromItemConfig(itemConfigOrContentItem, positionAndSize, parentId, indexInParent);\n        }\n    }\n    /** @internal */\n    createPopoutFromContentItem(item, window, parentId, indexInParent) {\n        /**\n         * If the item is the only component within a stack or for some\n         * other reason the only child of its parent the parent will be destroyed\n         * when the child is removed.\n         *\n         * In order to support this we move up the tree until we find something\n         * that will remain after the item is being popped out\n         */\n        let parent = item.parent;\n        let child = item;\n        while (parent !== null && parent.contentItems.length === 1 && !parent.isGround) {\n            child = parent;\n            parent = parent.parent;\n        }\n        if (parent === null) {\n            throw new UnexpectedNullError('LMCPFCI00834');\n        }\n        else {\n            if (indexInParent === undefined) {\n                indexInParent = parent.contentItems.indexOf(child);\n            }\n            if (parentId !== null) {\n                parent.addPopInParentId(parentId);\n            }\n            if (window === undefined) {\n                const windowLeft = globalThis.screenX || globalThis.screenLeft;\n                const windowTop = globalThis.screenY || globalThis.screenTop;\n                const offsetLeft = item.element.offsetLeft;\n                const offsetTop = item.element.offsetTop;\n                // const { left: offsetLeft, top: offsetTop } = getJQueryLeftAndTop(item.element);\n                const { width, height } = getElementWidthAndHeight(item.element);\n                window = {\n                    left: windowLeft + offsetLeft,\n                    top: windowTop + offsetTop,\n                    width,\n                    height,\n                };\n            }\n            const itemConfig = item.toConfig();\n            item.remove();\n            if (!ResolvedRootItemConfig.isRootItemConfig(itemConfig)) {\n                throw new Error(`${i18nStrings[0 /* PopoutCannotBeCreatedWithGroundItemConfig */]}`);\n            }\n            else {\n                return this.createPopoutFromItemConfig(itemConfig, window, parentId, indexInParent);\n            }\n        }\n    }\n    /** @internal */\n    beginVirtualSizedContainerAdding() {\n        if (++this._virtualSizedContainerAddingBeginCount === 0) {\n            this._virtualSizedContainers.length = 0;\n        }\n    }\n    /** @internal */\n    addVirtualSizedContainer(container) {\n        this._virtualSizedContainers.push(container);\n    }\n    /** @internal */\n    endVirtualSizedContainerAdding() {\n        if (--this._virtualSizedContainerAddingBeginCount === 0) {\n            const count = this._virtualSizedContainers.length;\n            if (count > 0) {\n                this.fireBeforeVirtualRectingEvent(count);\n                for (let i = 0; i < count; i++) {\n                    const container = this._virtualSizedContainers[i];\n                    container.notifyVirtualRectingRequired();\n                }\n                this.fireAfterVirtualRectingEvent();\n                this._virtualSizedContainers.length = 0;\n            }\n        }\n    }\n    /** @internal */\n    fireBeforeVirtualRectingEvent(count) {\n        if (this.beforeVirtualRectingEvent !== undefined) {\n            this.beforeVirtualRectingEvent(count);\n        }\n    }\n    /** @internal */\n    fireAfterVirtualRectingEvent() {\n        if (this.afterVirtualRectingEvent !== undefined) {\n            this.afterVirtualRectingEvent();\n        }\n    }\n    /** @internal */\n    createPopoutFromItemConfig(rootItemConfig, window, parentId, indexInParent) {\n        const layoutConfig = this.toConfig();\n        const popoutLayoutConfig = {\n            root: rootItemConfig,\n            openPopouts: [],\n            settings: layoutConfig.settings,\n            dimensions: layoutConfig.dimensions,\n            header: layoutConfig.header,\n            window,\n            parentId,\n            indexInParent,\n            resolved: true,\n        };\n        return this.createPopoutFromPopoutLayoutConfig(popoutLayoutConfig);\n    }\n    /** @internal */\n    createPopoutFromPopoutLayoutConfig(config) {\n        var _a, _b, _c, _d;\n        const configWindow = config.window;\n        const initialWindow = {\n            left: (_a = configWindow.left) !== null && _a !== void 0 ? _a : (globalThis.screenX || globalThis.screenLeft + 20),\n            top: (_b = configWindow.top) !== null && _b !== void 0 ? _b : (globalThis.screenY || globalThis.screenTop + 20),\n            width: (_c = configWindow.width) !== null && _c !== void 0 ? _c : 500,\n            height: (_d = configWindow.height) !== null && _d !== void 0 ? _d : 309,\n        };\n        const browserPopout = new BrowserPopout(config, initialWindow, this);\n        browserPopout.on('initialised', () => this.emit('windowOpened', browserPopout));\n        browserPopout.on('closed', () => this.reconcilePopoutWindows());\n        this._openPopouts.push(browserPopout);\n        return browserPopout;\n    }\n    newDragSource(element, componentTypeOrItemConfigCallback, componentState, title) {\n        const dragSource = new DragSource(this, element, [], componentTypeOrItemConfigCallback, componentState, title);\n        this._dragSources.push(dragSource);\n        return dragSource;\n    }\n    /**\n     * Removes a DragListener added by createDragSource() so the corresponding\n     * DOM element is not a drag source any more.\n     */\n    removeDragSource(dragSource) {\n        removeFromArray(dragSource, this._dragSources);\n        dragSource.destroy();\n    }\n    /** @internal */\n    startComponentDrag(x, y, dragListener, componentItem, stack) {\n        new DragProxy(x, y, dragListener, this, componentItem, stack);\n    }\n    /**\n     * Programmatically focuses an item. This focuses the specified component item\n     * and the item emits a focus event\n     *\n     * @param item - The component item to be focused\n     * @param suppressEvent - Whether to emit focus event\n     */\n    focusComponent(item, suppressEvent = false) {\n        item.focus(suppressEvent);\n    }\n    /**\n     * Programmatically blurs (defocuses) the currently focused component.\n     * If a component item is focused, then it is blurred and and the item emits a blur event\n     *\n     * @param item - The component item to be blurred\n     * @param suppressEvent - Whether to emit blur event\n     */\n    clearComponentFocus(suppressEvent = false) {\n        this.setFocusedComponentItem(undefined, suppressEvent);\n    }\n    /**\n     * Programmatically focuses a component item or removes focus (blurs) from an existing focused component item.\n     *\n     * @param item - If defined, specifies the component item to be given focus.  If undefined, clear component focus.\n     * @param suppressEvents - Whether to emit focus and blur events\n     * @internal\n     */\n    setFocusedComponentItem(item, suppressEvents = false) {\n        if (item !== this._focusedComponentItem) {\n            let newFocusedParentItem;\n            if (item === undefined) {\n                newFocusedParentItem === undefined;\n            }\n            else {\n                newFocusedParentItem = item.parentItem;\n            }\n            if (this._focusedComponentItem !== undefined) {\n                const oldFocusedItem = this._focusedComponentItem;\n                this._focusedComponentItem = undefined;\n                oldFocusedItem.setBlurred(suppressEvents);\n                const oldFocusedParentItem = oldFocusedItem.parentItem;\n                if (newFocusedParentItem === oldFocusedParentItem) {\n                    newFocusedParentItem = undefined;\n                }\n                else {\n                    oldFocusedParentItem.setFocusedValue(false);\n                }\n            }\n            if (item !== undefined) {\n                this._focusedComponentItem = item;\n                item.setFocused(suppressEvents);\n                if (newFocusedParentItem !== undefined) {\n                    newFocusedParentItem.setFocusedValue(true);\n                }\n            }\n        }\n    }\n    /** @internal */\n    createContentItemFromConfig(config, parent) {\n        switch (config.type) {\n            case ItemType.ground: throw new AssertError('LMCCIFC68871');\n            case ItemType.row: return new RowOrColumn(false, this, config, parent);\n            case ItemType.column: return new RowOrColumn(true, this, config, parent);\n            case ItemType.stack: return new Stack(this, config, parent);\n            case ItemType.component:\n                return new ComponentItem(this, config, parent);\n            default:\n                throw new UnreachableCaseError('CCC913564', config.type, 'Invalid Config Item type specified');\n        }\n    }\n    /**\n     * This should only be called from stack component.\n     * Stack will look after docking processing associated with maximise/minimise\n     * @internal\n     **/\n    setMaximisedStack(stack) {\n        if (stack === undefined) {\n            if (this._maximisedStack !== undefined) {\n                this.processMinimiseMaximisedStack();\n            }\n        }\n        else {\n            if (stack !== this._maximisedStack) {\n                if (this._maximisedStack !== undefined) {\n                    this.processMinimiseMaximisedStack();\n                }\n                this.processMaximiseStack(stack);\n            }\n        }\n    }\n    checkMinimiseMaximisedStack() {\n        if (this._maximisedStack !== undefined) {\n            this._maximisedStack.minimise();\n        }\n    }\n    // showAllActiveContentItems() was called from ContentItem.show().  Not sure what its purpose was so have commented out\n    // Everything seems to work ok without this.  Have left commented code just in case there was a reason for it becomes\n    // apparent\n    // /** @internal */\n    // showAllActiveContentItems(): void {\n    //     const allStacks = this.getAllStacks();\n    //     for (let i = 0; i < allStacks.length; i++) {\n    //         const stack = allStacks[i];\n    //         const activeContentItem = stack.getActiveComponentItem();\n    //         if (activeContentItem !== undefined) {\n    //             if (!(activeContentItem instanceof ComponentItem)) {\n    //                 throw new AssertError('LMSAACIS22298');\n    //             } else {\n    //                 activeContentItem.container.show();\n    //             }\n    //         }\n    //     }\n    // }\n    // hideAllActiveContentItems() was called from ContentItem.hide().  Not sure what its purpose was so have commented out\n    // Everything seems to work ok without this.  Have left commented code just in case there was a reason for it becomes\n    // apparent\n    // /** @internal */\n    // hideAllActiveContentItems(): void {\n    //     const allStacks = this.getAllStacks();\n    //     for (let i = 0; i < allStacks.length; i++) {\n    //         const stack = allStacks[i];\n    //         const activeContentItem = stack.getActiveComponentItem();\n    //         if (activeContentItem !== undefined) {\n    //             if (!(activeContentItem instanceof ComponentItem)) {\n    //                 throw new AssertError('LMSAACIH22298');\n    //             } else {\n    //                 activeContentItem.container.hide();\n    //             }\n    //         }\n    //     }\n    // }\n    /** @internal */\n    cleanupBeforeMaximisedStackDestroyed(event) {\n        if (this._maximisedStack !== null && this._maximisedStack === event.target) {\n            this._maximisedStack.off('beforeItemDestroyed', this._maximisedStackBeforeDestroyedListener);\n            this._maximisedStack = undefined;\n        }\n    }\n    /**\n     * This method is used to get around sandboxed iframe restrictions.\n     * If 'allow-top-navigation' is not specified in the iframe's 'sandbox' attribute\n     * (as is the case with codepens) the parent window is forbidden from calling certain\n     * methods on the child, such as window.close() or setting document.location.href.\n     *\n     * This prevented GoldenLayout popouts from popping in in codepens. The fix is to call\n     * _$closeWindow on the child window's gl instance which (after a timeout to disconnect\n     * the invoking method from the close call) closes itself.\n     *\n     * @internal\n     */\n    closeWindow() {\n        globalThis.setTimeout(() => globalThis.close(), 1);\n    }\n    /** @internal */\n    getArea(x, y) {\n        let matchingArea = null;\n        let smallestSurface = Infinity;\n        for (let i = 0; i < this._itemAreas.length; i++) {\n            const area = this._itemAreas[i];\n            if (x > area.x1 &&\n                x < area.x2 &&\n                y > area.y1 &&\n                y < area.y2 &&\n                smallestSurface > area.surface) {\n                smallestSurface = area.surface;\n                matchingArea = area;\n            }\n        }\n        return matchingArea;\n    }\n    /** @internal */\n    calculateItemAreas() {\n        const allContentItems = this.getAllContentItems();\n        /**\n         * If the last item is dragged out, highlight the entire container size to\n         * allow to re-drop it. this.ground.contentiItems.length === 0 at this point\n         *\n         * Don't include ground into the possible drop areas though otherwise since it\n         * will used for every gap in the layout, e.g. splitters\n         */\n        const groundItem = this._groundItem;\n        if (groundItem === undefined) {\n            throw new UnexpectedUndefinedError('LMCIAR44365');\n        }\n        else {\n            if (allContentItems.length === 1) {\n                // No root ContentItem (just Ground ContentItem)\n                const groundArea = groundItem.getElementArea();\n                if (groundArea === null) {\n                    throw new UnexpectedNullError('LMCIARA44365');\n                }\n                else {\n                    this._itemAreas = [groundArea];\n                }\n                return;\n            }\n            else {\n                if (groundItem.contentItems[0].isStack) {\n                    // if root is Stack, then split stack and sides of Layout are same, so skip sides\n                    this._itemAreas = [];\n                }\n                else {\n                    // sides of layout\n                    this._itemAreas = groundItem.createSideAreas();\n                }\n                for (let i = 0; i < allContentItems.length; i++) {\n                    const stack = allContentItems[i];\n                    if (ContentItem.isStack(stack)) {\n                        const area = stack.getArea();\n                        if (area === null) {\n                            continue;\n                        }\n                        else {\n                            this._itemAreas.push(area);\n                            const stackContentAreaDimensions = stack.contentAreaDimensions;\n                            if (stackContentAreaDimensions === undefined) {\n                                throw new UnexpectedUndefinedError('LMCIASC45599');\n                            }\n                            else {\n                                const highlightArea = stackContentAreaDimensions.header.highlightArea;\n                                const surface = (highlightArea.x2 - highlightArea.x1) * (highlightArea.y2 - highlightArea.y1);\n                                const header = {\n                                    x1: highlightArea.x1,\n                                    x2: highlightArea.x2,\n                                    y1: highlightArea.y1,\n                                    y2: highlightArea.y2,\n                                    contentItem: stack,\n                                    surface,\n                                };\n                                this._itemAreas.push(header);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Called as part of loading a new layout (including initial init()).\n     * Checks to see layout has a maximised item. If so, it maximises that item.\n     * @internal\n     */\n    checkLoadedLayoutMaximiseItem() {\n        if (this._groundItem === undefined) {\n            throw new UnexpectedUndefinedError('LMCLLMI43432');\n        }\n        else {\n            const configMaximisedItems = this._groundItem.getConfigMaximisedItems();\n            if (configMaximisedItems.length > 0) {\n                let item = configMaximisedItems[0];\n                if (ContentItem.isComponentItem(item)) {\n                    const stack = item.parent;\n                    if (stack === null) {\n                        throw new UnexpectedNullError('LMXLLMI69999');\n                    }\n                    else {\n                        item = stack;\n                    }\n                }\n                if (!ContentItem.isStack(item)) {\n                    throw new AssertError('LMCLLMI19993');\n                }\n                else {\n                    item.maximise();\n                }\n            }\n        }\n    }\n    /** @internal */\n    processMaximiseStack(stack) {\n        this._maximisedStack = stack;\n        stack.on('beforeItemDestroyed', this._maximisedStackBeforeDestroyedListener);\n        stack.element.classList.add(\"lm_maximised\" /* Maximised */);\n        stack.element.insertAdjacentElement('afterend', this._maximisePlaceholder);\n        if (this._groundItem === undefined) {\n            throw new UnexpectedUndefinedError('LMMXI19993');\n        }\n        else {\n            this._groundItem.element.prepend(stack.element);\n            const { width, height } = getElementWidthAndHeight(this._containerElement);\n            setElementWidth(stack.element, width);\n            setElementHeight(stack.element, height);\n            stack.updateSize(true);\n            stack.focusActiveContentItem();\n            this._maximisedStack.emit('maximised');\n            this.emit('stateChanged');\n        }\n    }\n    /** @internal */\n    processMinimiseMaximisedStack() {\n        if (this._maximisedStack === undefined) {\n            throw new AssertError('LMMMS74422');\n        }\n        else {\n            const stack = this._maximisedStack;\n            if (stack.parent === null) {\n                throw new UnexpectedNullError('LMMI13668');\n            }\n            else {\n                stack.element.classList.remove(\"lm_maximised\" /* Maximised */);\n                this._maximisePlaceholder.insertAdjacentElement('afterend', stack.element);\n                this._maximisePlaceholder.remove();\n                this.updateRootSize(true);\n                this._maximisedStack = undefined;\n                stack.off('beforeItemDestroyed', this._maximisedStackBeforeDestroyedListener);\n                stack.emit('minimised');\n                this.emit('stateChanged');\n            }\n        }\n    }\n    /**\n     * Iterates through the array of open popout windows and removes the ones\n     * that are effectively closed. This is necessary due to the lack of reliably\n     * listening for window.close / unload events in a cross browser compatible fashion.\n     * @internal\n     */\n    reconcilePopoutWindows() {\n        const openPopouts = [];\n        for (let i = 0; i < this._openPopouts.length; i++) {\n            if (this._openPopouts[i].getWindow().closed === false) {\n                openPopouts.push(this._openPopouts[i]);\n            }\n            else {\n                this.emit('windowClosed', this._openPopouts[i]);\n            }\n        }\n        if (this._openPopouts.length !== openPopouts.length) {\n            this._openPopouts = openPopouts;\n            this.emit('stateChanged');\n        }\n    }\n    /**\n     * Returns a flattened array of all content items,\n     * regardles of level or type\n     * @internal\n     */\n    getAllContentItems() {\n        if (this._groundItem === undefined) {\n            throw new UnexpectedUndefinedError('LMGACI13130');\n        }\n        else {\n            return this._groundItem.getAllContentItems();\n        }\n    }\n    /**\n     * Binds to DOM/BOM events on init\n     * @internal\n     */\n    bindEvents() {\n        this._resizeObserver.observe(this._containerElement);\n        globalThis.addEventListener('unload', this._windowUnloadListener, { passive: true });\n        globalThis.addEventListener('beforeunload', this._windowUnloadListener, { passive: true });\n    }\n    /**\n     * Creates Subwindows (if there are any). Throws an error\n     * if popouts are blocked.\n     * @internal\n     */\n    createSubWindows() {\n        for (let i = 0; i < this.layoutConfig.openPopouts.length; i++) {\n            const popoutConfig = this.layoutConfig.openPopouts[i];\n            this.createPopoutFromPopoutLayoutConfig(popoutConfig);\n        }\n    }\n    /**\n     * Debounces resize events\n     * @internal\n     */\n    handleContainerResize() {\n        if (this.resizeWithContainerAutomatically) {\n            this.processResizeWithDebounce();\n        }\n    }\n    /**\n     * Debounces resize events\n     * @internal\n     */\n    processResizeWithDebounce() {\n        if (this.resizeDebounceExtendedWhenPossible) {\n            this.checkClearResizeTimeout();\n        }\n        if (this._resizeTimeoutId === undefined) {\n            this._resizeTimeoutId = setTimeout(() => {\n                this._resizeTimeoutId = undefined;\n                this.beginSizeInvalidation();\n                this.endSizeInvalidation();\n            }, this.resizeDebounceInterval);\n        }\n    }\n    checkClearResizeTimeout() {\n        if (this._resizeTimeoutId !== undefined) {\n            clearTimeout(this._resizeTimeoutId);\n            this._resizeTimeoutId = undefined;\n        }\n    }\n    /**\n     * Determines what element the layout will be created in\n     * @internal\n     */\n    setContainer() {\n        var _a;\n        const bodyElement = document.body;\n        const containerElement = (_a = this._containerElement) !== null && _a !== void 0 ? _a : bodyElement;\n        if (containerElement === bodyElement) {\n            this.resizeWithContainerAutomatically = true;\n            const documentElement = document.documentElement;\n            documentElement.style.height = '100%';\n            documentElement.style.margin = '0';\n            documentElement.style.padding = '0';\n            documentElement.style.overflow = 'clip';\n            bodyElement.style.height = '100%';\n            bodyElement.style.margin = '0';\n            bodyElement.style.padding = '0';\n            bodyElement.style.overflow = 'clip';\n        }\n        this._containerElement = containerElement;\n    }\n    /**\n     * Called when the window is closed or the user navigates away\n     * from the page\n     * @internal\n     */\n    onUnload() {\n        this.destroy();\n    }\n    /**\n     * Adjusts the number of columns to be lower to fit the screen and still maintain minItemWidth.\n     * @internal\n     */\n    adjustColumnsResponsive() {\n        if (this._groundItem === undefined) {\n            throw new UnexpectedUndefinedError('LMACR20883');\n        }\n        else {\n            this._firstLoad = false;\n            // If there is no min width set, or not content items, do nothing.\n            if (this.useResponsiveLayout() &&\n                !this._updatingColumnsResponsive &&\n                this._groundItem.contentItems.length > 0 &&\n                this._groundItem.contentItems[0].isRow) {\n                if (this._groundItem === undefined || this._width === null) {\n                    throw new UnexpectedUndefinedError('LMACR77412');\n                }\n                else {\n                    // If there is only one column, do nothing.\n                    const columnCount = this._groundItem.contentItems[0].contentItems.length;\n                    if (columnCount <= 1) {\n                        return;\n                    }\n                    else {\n                        // If they all still fit, do nothing.\n                        const minItemWidth = this.layoutConfig.dimensions.minItemWidth;\n                        const totalMinWidth = columnCount * minItemWidth;\n                        if (totalMinWidth <= this._width) {\n                            return;\n                        }\n                        else {\n                            // Prevent updates while it is already happening.\n                            this._updatingColumnsResponsive = true;\n                            // Figure out how many columns to stack, and put them all in the first stack container.\n                            const finalColumnCount = Math.max(Math.floor(this._width / minItemWidth), 1);\n                            const stackColumnCount = columnCount - finalColumnCount;\n                            const rootContentItem = this._groundItem.contentItems[0];\n                            const allStacks = this.getAllStacks();\n                            if (allStacks.length === 0) {\n                                throw new AssertError('LMACRS77413');\n                            }\n                            else {\n                                const firstStackContainer = allStacks[0];\n                                for (let i = 0; i < stackColumnCount; i++) {\n                                    // Stack from right.\n                                    const column = rootContentItem.contentItems[rootContentItem.contentItems.length - 1];\n                                    this.addChildContentItemsToContainer(firstStackContainer, column);\n                                }\n                                this._updatingColumnsResponsive = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Determines if responsive layout should be used.\n     *\n     * @returns True if responsive layout should be used; otherwise false.\n     * @internal\n     */\n    useResponsiveLayout() {\n        const settings = this.layoutConfig.settings;\n        const alwaysResponsiveMode = settings.responsiveMode === ResponsiveMode.always;\n        const onLoadResponsiveModeAndFirst = settings.responsiveMode === ResponsiveMode.onload && this._firstLoad;\n        return alwaysResponsiveMode || onLoadResponsiveModeAndFirst;\n    }\n    /**\n     * Adds all children of a node to another container recursively.\n     * @param container - Container to add child content items to.\n     * @param node - Node to search for content items.\n     * @internal\n     */\n    addChildContentItemsToContainer(container, node) {\n        const contentItems = node.contentItems;\n        if (node instanceof Stack) {\n            for (let i = 0; i < contentItems.length; i++) {\n                const item = contentItems[i];\n                node.removeChild(item, true);\n                container.addChild(item);\n            }\n        }\n        else {\n            for (let i = 0; i < contentItems.length; i++) {\n                const item = contentItems[i];\n                this.addChildContentItemsToContainer(container, item);\n            }\n        }\n    }\n    /**\n     * Finds all the stacks.\n     * @returns The found stack containers.\n     * @internal\n     */\n    getAllStacks() {\n        if (this._groundItem === undefined) {\n            throw new UnexpectedUndefinedError('LMFASC52778');\n        }\n        else {\n            const stacks = [];\n            this.findAllStacksRecursive(stacks, this._groundItem);\n            return stacks;\n        }\n    }\n    /** @internal */\n    findFirstContentItemType(type) {\n        if (this._groundItem === undefined) {\n            throw new UnexpectedUndefinedError('LMFFCIT82446');\n        }\n        else {\n            return this.findFirstContentItemTypeRecursive(type, this._groundItem);\n        }\n    }\n    /** @internal */\n    findFirstContentItemTypeRecursive(type, node) {\n        const contentItems = node.contentItems;\n        const contentItemCount = contentItems.length;\n        if (contentItemCount === 0) {\n            return undefined;\n        }\n        else {\n            for (let i = 0; i < contentItemCount; i++) {\n                const contentItem = contentItems[i];\n                if (contentItem.type === type) {\n                    return contentItem;\n                }\n            }\n            for (let i = 0; i < contentItemCount; i++) {\n                const contentItem = contentItems[i];\n                const foundContentItem = this.findFirstContentItemTypeRecursive(type, contentItem);\n                if (foundContentItem !== undefined) {\n                    return foundContentItem;\n                }\n            }\n            return undefined;\n        }\n    }\n    /** @internal */\n    findFirstContentItemTypeByIdRecursive(type, id, node) {\n        const contentItems = node.contentItems;\n        const contentItemCount = contentItems.length;\n        if (contentItemCount === 0) {\n            return undefined;\n        }\n        else {\n            for (let i = 0; i < contentItemCount; i++) {\n                const contentItem = contentItems[i];\n                if (contentItem.type === type && contentItem.id === id) {\n                    return contentItem;\n                }\n            }\n            for (let i = 0; i < contentItemCount; i++) {\n                const contentItem = contentItems[i];\n                const foundContentItem = this.findFirstContentItemTypeByIdRecursive(type, id, contentItem);\n                if (foundContentItem !== undefined) {\n                    return foundContentItem;\n                }\n            }\n            return undefined;\n        }\n    }\n    /**\n     * Finds all the stack containers.\n     *\n     * @param stacks - Set of containers to populate.\n     * @param node - Current node to process.\n     * @internal\n     */\n    findAllStacksRecursive(stacks, node) {\n        const contentItems = node.contentItems;\n        for (let i = 0; i < contentItems.length; i++) {\n            const item = contentItems[i];\n            if (item instanceof Stack) {\n                stacks.push(item);\n            }\n            else {\n                if (!item.isComponent) {\n                    this.findAllStacksRecursive(stacks, item);\n                }\n            }\n        }\n    }\n    /** @internal */\n    findFirstLocation(selectors) {\n        const count = selectors.length;\n        for (let i = 0; i < count; i++) {\n            const selector = selectors[i];\n            const location = this.findLocation(selector);\n            if (location !== undefined) {\n                return location;\n            }\n        }\n        return undefined;\n    }\n    /** @internal */\n    findLocation(selector) {\n        const selectorIndex = selector.index;\n        switch (selector.typeId) {\n            case 0 /* FocusedItem */: {\n                if (this._focusedComponentItem === undefined) {\n                    return undefined;\n                }\n                else {\n                    const parentItem = this._focusedComponentItem.parentItem;\n                    const parentContentItems = parentItem.contentItems;\n                    const parentContentItemCount = parentContentItems.length;\n                    if (selectorIndex === undefined) {\n                        return { parentItem, index: parentContentItemCount };\n                    }\n                    else {\n                        const focusedIndex = parentContentItems.indexOf(this._focusedComponentItem);\n                        const index = focusedIndex + selectorIndex;\n                        if (index < 0 || index > parentContentItemCount) {\n                            return undefined;\n                        }\n                        else {\n                            return { parentItem, index };\n                        }\n                    }\n                }\n            }\n            case 1 /* FocusedStack */: {\n                if (this._focusedComponentItem === undefined) {\n                    return undefined;\n                }\n                else {\n                    const parentItem = this._focusedComponentItem.parentItem;\n                    return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n                }\n            }\n            case 2 /* FirstStack */: {\n                const parentItem = this.findFirstContentItemType(ItemType.stack);\n                if (parentItem === undefined) {\n                    return undefined;\n                }\n                else {\n                    return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n                }\n            }\n            case 3 /* FirstRowOrColumn */: {\n                let parentItem = this.findFirstContentItemType(ItemType.row);\n                if (parentItem !== undefined) {\n                    return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n                }\n                else {\n                    parentItem = this.findFirstContentItemType(ItemType.column);\n                    if (parentItem !== undefined) {\n                        return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n                    }\n                    else {\n                        return undefined;\n                    }\n                }\n            }\n            case 4 /* FirstRow */: {\n                const parentItem = this.findFirstContentItemType(ItemType.row);\n                if (parentItem === undefined) {\n                    return undefined;\n                }\n                else {\n                    return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n                }\n            }\n            case 5 /* FirstColumn */: {\n                const parentItem = this.findFirstContentItemType(ItemType.column);\n                if (parentItem === undefined) {\n                    return undefined;\n                }\n                else {\n                    return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n                }\n            }\n            case 6 /* Empty */: {\n                if (this._groundItem === undefined) {\n                    throw new UnexpectedUndefinedError('LMFLRIF18244');\n                }\n                else {\n                    if (this.rootItem !== undefined) {\n                        return undefined;\n                    }\n                    else {\n                        if (selectorIndex === undefined || selectorIndex === 0)\n                            return { parentItem: this._groundItem, index: 0 };\n                        else {\n                            return undefined;\n                        }\n                    }\n                }\n            }\n            case 7 /* Root */: {\n                if (this._groundItem === undefined) {\n                    throw new UnexpectedUndefinedError('LMFLF18244');\n                }\n                else {\n                    const groundContentItems = this._groundItem.contentItems;\n                    if (groundContentItems.length === 0) {\n                        if (selectorIndex === undefined || selectorIndex === 0)\n                            return { parentItem: this._groundItem, index: 0 };\n                        else {\n                            return undefined;\n                        }\n                    }\n                    else {\n                        const parentItem = groundContentItems[0];\n                        return this.tryCreateLocationFromParentItem(parentItem, selectorIndex);\n                    }\n                }\n            }\n        }\n    }\n    /** @internal */\n    tryCreateLocationFromParentItem(parentItem, selectorIndex) {\n        const parentContentItems = parentItem.contentItems;\n        const parentContentItemCount = parentContentItems.length;\n        if (selectorIndex === undefined) {\n            return { parentItem, index: parentContentItemCount };\n        }\n        else {\n            if (selectorIndex < 0 || selectorIndex > parentContentItemCount) {\n                return undefined;\n            }\n            else {\n                return { parentItem, index: selectorIndex };\n            }\n        }\n    }\n}\n/** @public */\n(function (LayoutManager) {\n    /** @internal */\n    function createMaximisePlaceElement(document) {\n        const element = document.createElement('div');\n        element.classList.add(\"lm_maximise_place\" /* MaximisePlace */);\n        return element;\n    }\n    LayoutManager.createMaximisePlaceElement = createMaximisePlaceElement;\n    /** @internal */\n    function createTabDropPlaceholderElement(document) {\n        const element = document.createElement('div');\n        element.classList.add(\"lm_drop_tab_placeholder\" /* DropTabPlaceholder */);\n        return element;\n    }\n    LayoutManager.createTabDropPlaceholderElement = createTabDropPlaceholderElement;\n    /**\n     * Default LocationSelectors array used if none is specified.  Will always find a location.\n     * @public\n     */\n    LayoutManager.defaultLocationSelectors = [\n        { typeId: 1 /* FocusedStack */, index: undefined },\n        { typeId: 2 /* FirstStack */, index: undefined },\n        { typeId: 3 /* FirstRowOrColumn */, index: undefined },\n        { typeId: 7 /* Root */, index: undefined },\n    ];\n    /**\n     * LocationSelectors to try to get location next to existing focused item\n     * @public\n     */\n    LayoutManager.afterFocusedItemIfPossibleLocationSelectors = [\n        { typeId: 0 /* FocusedItem */, index: 1 },\n        { typeId: 2 /* FirstStack */, index: undefined },\n        { typeId: 3 /* FirstRowOrColumn */, index: undefined },\n        { typeId: 7 /* Root */, index: undefined },\n    ];\n})(LayoutManager || (LayoutManager = {}));\n//# sourceMappingURL=layout-manager.js.map","import { LayoutConfig } from './config/config';\nimport { ResolvedLayoutConfig } from './config/resolved-config';\nimport { BindError } from './errors/external-error';\nimport { UnexpectedUndefinedError } from './errors/internal-error';\nimport { LayoutManager } from './layout-manager';\nimport { i18nStrings } from './utils/i18n-strings';\n/** @public */\nexport class VirtualLayout extends LayoutManager {\n    /** @internal */\n    constructor(configOrOptionalContainer, containerOrBindComponentEventHandler, unbindComponentEventHandler, skipInit) {\n        super(VirtualLayout.createLayoutManagerConstructorParameters(configOrOptionalContainer, containerOrBindComponentEventHandler));\n        /** @internal @deprecated use while constructor is not determinate */\n        this._bindComponentEventHanlderPassedInConstructor = false; // remove when constructor is determinate\n        /** @internal  @deprecated use while constructor is not determinate */\n        this._creationTimeoutPassed = false; // remove when constructor is determinate\n        if (containerOrBindComponentEventHandler !== undefined) {\n            if (typeof containerOrBindComponentEventHandler === 'function') {\n                this.bindComponentEvent = containerOrBindComponentEventHandler;\n                this._bindComponentEventHanlderPassedInConstructor = true;\n                if (unbindComponentEventHandler !== undefined) {\n                    this.unbindComponentEvent = unbindComponentEventHandler;\n                }\n            }\n        }\n        if (!this._bindComponentEventHanlderPassedInConstructor) {\n            // backward compatibility\n            if (this.isSubWindow) {\n                // document.body.style.visibility = 'hidden';\n                // Set up layoutConfig since constructor is not determinate and may exit early. Other functions may need\n                // this.layoutConfig. this.layoutConfig is again calculated in the same way when init() completes.\n                // Remove this when constructor is determinate.\n                if (this._constructorOrSubWindowLayoutConfig === undefined) {\n                    throw new UnexpectedUndefinedError('VLC98823');\n                }\n                else {\n                    const resolvedLayoutConfig = LayoutConfig.resolve(this._constructorOrSubWindowLayoutConfig);\n                    // remove root from layoutConfig\n                    this.layoutConfig = Object.assign(Object.assign({}, resolvedLayoutConfig), { root: undefined });\n                }\n            }\n        }\n        if (skipInit !== true) {\n            if (!this.deprecatedConstructor) {\n                this.init();\n            }\n        }\n    }\n    destroy() {\n        this.bindComponentEvent = undefined;\n        this.unbindComponentEvent = undefined;\n        super.destroy();\n    }\n    /**\n     * Creates the actual layout. Must be called after all initial components\n     * are registered. Recurses through the configuration and sets up\n     * the item tree.\n     *\n     * If called before the document is ready it adds itself as a listener\n     * to the document.ready event\n     * @deprecated LayoutConfig should not be loaded in {@link (LayoutManager:class)} constructor, but rather in a\n     * {@link (LayoutManager:class).loadLayout} call.  If LayoutConfig is not specified in {@link (LayoutManager:class)} constructor,\n     * then init() will be automatically called internally and should not be called externally.\n     */\n    init() {\n        /**\n         * If the document isn't ready yet, wait for it.\n         */\n        if (!this._bindComponentEventHanlderPassedInConstructor && (document.readyState === 'loading' || document.body === null)) {\n            document.addEventListener('DOMContentLoaded', () => this.init(), { passive: true });\n            return;\n        }\n        /**\n         * If this is a subwindow, wait a few milliseconds for the original\n         * page's js calls to be executed, then replace the bodies content\n         * with GoldenLayout\n         */\n        if (!this._bindComponentEventHanlderPassedInConstructor && this.isSubWindow === true && !this._creationTimeoutPassed) {\n            setTimeout(() => this.init(), 7);\n            this._creationTimeoutPassed = true;\n            return;\n        }\n        if (this.isSubWindow === true) {\n            if (!this._bindComponentEventHanlderPassedInConstructor) {\n                this.clearHtmlAndAdjustStylesForSubWindow();\n            }\n            // Expose this instance on the window object to allow the opening window to interact with it\n            window.__glInstance = this;\n        }\n        super.init();\n    }\n    /**\n     * Clears existing HTML and adjusts style to make window suitable to be a popout sub window\n     * Curently is automatically called when window is a subWindow and bindComponentEvent is not passed in the constructor\n     * If bindComponentEvent is not passed in the constructor, the application must either call this function explicitly or\n     * (preferably) make the window suitable as a subwindow.\n     * In the future, it is planned that this function is NOT automatically called in any circumstances.  Applications will\n     * need to determine whether a window is a Golden Layout popout window and either call this function explicitly or\n     * hide HTML not relevant to the popout.\n     * See apitest for an example of how HTML is hidden when popout windows are displayed\n     */\n    clearHtmlAndAdjustStylesForSubWindow() {\n        const headElement = document.head;\n        const appendNodeLists = new Array(4);\n        appendNodeLists[0] = document.querySelectorAll('body link');\n        appendNodeLists[1] = document.querySelectorAll('body style');\n        appendNodeLists[2] = document.querySelectorAll('template');\n        appendNodeLists[3] = document.querySelectorAll('.gl_keep');\n        for (let listIdx = 0; listIdx < appendNodeLists.length; listIdx++) {\n            const appendNodeList = appendNodeLists[listIdx];\n            for (let nodeIdx = 0; nodeIdx < appendNodeList.length; nodeIdx++) {\n                const node = appendNodeList[nodeIdx];\n                headElement.appendChild(node);\n            }\n        }\n        const bodyElement = document.body;\n        bodyElement.innerHTML = '';\n        bodyElement.style.visibility = 'visible';\n        this.checkAddDefaultPopinButton();\n        /*\n        * This seems a bit pointless, but actually causes a reflow/re-evaluation getting around\n        * slickgrid's \"Cannot find stylesheet.\" bug in chrome\n        */\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const x = document.body.offsetHeight;\n    }\n    /**\n     * Will add button if not popinOnClose specified in settings\n     * @returns true if added otherwise false\n     */\n    checkAddDefaultPopinButton() {\n        if (this.layoutConfig.settings.popInOnClose) {\n            return false;\n        }\n        else {\n            const popInButtonElement = document.createElement('div');\n            popInButtonElement.classList.add(\"lm_popin\" /* Popin */);\n            popInButtonElement.setAttribute('title', this.layoutConfig.header.dock);\n            const iconElement = document.createElement('div');\n            iconElement.classList.add(\"lm_icon\" /* Icon */);\n            const bgElement = document.createElement('div');\n            bgElement.classList.add(\"lm_bg\" /* Bg */);\n            popInButtonElement.appendChild(iconElement);\n            popInButtonElement.appendChild(bgElement);\n            popInButtonElement.addEventListener('click', () => this.emit('popIn'));\n            document.body.appendChild(popInButtonElement);\n            return true;\n        }\n    }\n    /** @internal */\n    bindComponent(container, itemConfig) {\n        if (this.bindComponentEvent !== undefined) {\n            const bindableComponent = this.bindComponentEvent(container, itemConfig);\n            return bindableComponent;\n        }\n        else {\n            if (this.getComponentEvent !== undefined) {\n                return {\n                    virtual: false,\n                    component: this.getComponentEvent(container, itemConfig),\n                };\n            }\n            else {\n                // There is no component registered for this type, and we don't have a getComponentEvent defined.\n                // This might happen when the user pops out a dialog and the component types are not registered upfront.\n                const text = i18nStrings[2 /* ComponentTypeNotRegisteredAndBindComponentEventHandlerNotAssigned */];\n                const message = `${text}: ${JSON.stringify(itemConfig)}`;\n                throw new BindError(message);\n            }\n        }\n    }\n    /** @internal */\n    unbindComponent(container, virtual, component) {\n        if (this.unbindComponentEvent !== undefined) {\n            this.unbindComponentEvent(container);\n        }\n        else {\n            if (!virtual && this.releaseComponentEvent !== undefined) {\n                if (component === undefined) {\n                    throw new UnexpectedUndefinedError('VCUCRCU333998');\n                }\n                else {\n                    this.releaseComponentEvent(container, component);\n                }\n            }\n        }\n    }\n}\n/** @public */\n(function (VirtualLayout) {\n    /** @internal\n     * Veriable to hold the state whether we already checked if we are running in a sub window.\n     * Fixes popout and creation of nested golden-layouts.\n     */\n    let subWindowChecked = false;\n    /** @internal */\n    function createLayoutManagerConstructorParameters(configOrOptionalContainer, containerOrBindComponentEventHandler) {\n        const windowConfigKey = subWindowChecked ? null : new URL(document.location.href).searchParams.get('gl-window');\n        subWindowChecked = true;\n        const isSubWindow = windowConfigKey !== null;\n        let containerElement;\n        let config;\n        if (windowConfigKey !== null) {\n            const windowConfigStr = localStorage.getItem(windowConfigKey);\n            if (windowConfigStr === null) {\n                throw new Error('Null gl-window Config');\n            }\n            localStorage.removeItem(windowConfigKey);\n            const minifiedWindowConfig = JSON.parse(windowConfigStr);\n            const resolvedConfig = ResolvedLayoutConfig.unminifyConfig(minifiedWindowConfig);\n            config = LayoutConfig.fromResolved(resolvedConfig);\n            if (configOrOptionalContainer instanceof HTMLElement) {\n                containerElement = configOrOptionalContainer;\n            }\n        }\n        else {\n            if (configOrOptionalContainer === undefined) {\n                config = undefined;\n            }\n            else {\n                if (configOrOptionalContainer instanceof HTMLElement) {\n                    config = undefined;\n                    containerElement = configOrOptionalContainer;\n                }\n                else {\n                    // backwards compatibility\n                    config = configOrOptionalContainer;\n                }\n            }\n            if (containerElement === undefined) {\n                if (containerOrBindComponentEventHandler instanceof HTMLElement) {\n                    containerElement = containerOrBindComponentEventHandler;\n                }\n            }\n        }\n        return {\n            constructorOrSubWindowLayoutConfig: config,\n            isSubWindow,\n            containerElement,\n        };\n    }\n    VirtualLayout.createLayoutManagerConstructorParameters = createLayoutManagerConstructorParameters;\n})(VirtualLayout || (VirtualLayout = {}));\n//# sourceMappingURL=virtual-layout.js.map","/* eslint indent: [\"error\", 2] */\n\nimport { GoldenLayout } from \"golden-layout\";\n\nconst config = {\n  settings: {\n    showPopoutIcon: false,\n    showCloseIcon: false,\n  },\n  dimensions: {\n    minItemHeight: 40,\n  },\n  content: [{\n    type: 'row',\n    content: [{\n      type: 'column',\n      width: 40,\n      content: [{\n        type: 'component',\n        isClosable: false,\n        componentName: 'template',\n        title: 'Game',\n        componentState: { id: 'client_wrapper' },\n      }],\n    },\n    {\n      type: 'column',\n      content: [{\n        type: 'row',\n        height: 65,\n        content: [{\n          type: 'stack',\n          content: [{\n            type: 'component',\n            isClosable: false,\n            title: 'Main',\n            componentName: 'template',\n            componentState: { id: 'mainmenu' },\n          },\n          {\n            type: 'component',\n            isClosable: false,\n            title: 'Log',\n            componentName: 'template',\n            componentState: { id: 'log' },\n          }],\n        },\n        {\n          type: 'component',\n          title: 'Music',\n          width: 30,\n          componentName: 'template',\n          componentState: { id: 'music' },\n        }],\n      },\n      {\n        type: 'row',\n        content: [{\n          type: 'component',\n          title: 'Server chat',\n          componentName: 'template',\n          componentState: { id: 'ooc' },\n        }],\n      }],\n    }],\n  }],\n};\n\nconst golden = new GoldenLayout();\ngolden.registerComponentFactoryFunction('template', (container, componentState) => {\n  const template = document.querySelector(`#${componentState.id}`);\n  container.element.innerHTML = template.innerHTML;\n  // TODO: support multiple locales\n  // container.setTitle(document.querySelector(`#${componentState.id} meta[name='frame-title']`).getAttribute(\"content\"));\n});\ngolden.loadLayout(config)\n\n","import { ResolvedComponentItemConfig } from './config/resolved-config';\nimport { ApiError, BindError } from './errors/external-error';\nimport { AssertError, UnexpectedUndefinedError } from './errors/internal-error';\nimport { i18nStrings } from './utils/i18n-strings';\nimport { deepExtendValue, ensureElementPositionAbsolute, numberToPixels, setElementDisplayVisibility, setElementHeight, setElementWidth } from './utils/utils';\nimport { VirtualLayout } from './virtual-layout';\n/** @public */\nexport class GoldenLayout extends VirtualLayout {\n    /** @internal */\n    constructor(configOrOptionalContainer, containerOrBindComponentEventHandler, unbindComponentEventHandler) {\n        super(configOrOptionalContainer, containerOrBindComponentEventHandler, unbindComponentEventHandler, true);\n        /** @internal */\n        this._componentTypesMap = new Map();\n        /** @internal */\n        this._registeredComponentMap = new Map();\n        /** @internal */\n        this._virtuableComponentMap = new Map();\n        /** @internal */\n        this._containerVirtualRectingRequiredEventListener = (container, width, height) => this.handleContainerVirtualRectingRequiredEvent(container, width, height);\n        /** @internal */\n        this._containerVirtualVisibilityChangeRequiredEventListener = (container, visible) => this.handleContainerVirtualVisibilityChangeRequiredEvent(container, visible);\n        /** @internal */\n        this._containerVirtualZIndexChangeRequiredEventListener = (container, logicalZIndex, defaultZIndex) => this.handleContainerVirtualZIndexChangeRequiredEvent(container, logicalZIndex, defaultZIndex);\n        // we told VirtualLayout to not call init() (skipInit set to true) so that Golden Layout can initialise its properties before init is called\n        if (!this.deprecatedConstructor) {\n            this.init();\n        }\n    }\n    /**\n     * Register a new component type with the layout manager.\n     *\n     * @deprecated See {@link https://stackoverflow.com/questions/40922531/how-to-check-if-a-javascript-function-is-a-constructor}\n     * instead use {@link (GoldenLayout:class).registerComponentConstructor}\n     * or {@link (GoldenLayout:class).registerComponentFactoryFunction}\n     */\n    registerComponent(name, componentConstructorOrFactoryFtn, virtual = false) {\n        if (typeof componentConstructorOrFactoryFtn !== 'function') {\n            throw new ApiError('registerComponent() componentConstructorOrFactoryFtn parameter is not a function');\n        }\n        else {\n            if (componentConstructorOrFactoryFtn.hasOwnProperty('prototype')) {\n                const componentConstructor = componentConstructorOrFactoryFtn;\n                this.registerComponentConstructor(name, componentConstructor, virtual);\n            }\n            else {\n                const componentFactoryFtn = componentConstructorOrFactoryFtn;\n                this.registerComponentFactoryFunction(name, componentFactoryFtn, virtual);\n            }\n        }\n    }\n    /**\n     * Register a new component type with the layout manager.\n     */\n    registerComponentConstructor(typeName, componentConstructor, virtual = false) {\n        if (typeof componentConstructor !== 'function') {\n            throw new Error(i18nStrings[1 /* PleaseRegisterAConstructorFunction */]);\n        }\n        const existingComponentType = this._componentTypesMap.get(typeName);\n        if (existingComponentType !== undefined) {\n            throw new BindError(`${i18nStrings[3 /* ComponentIsAlreadyRegistered */]}: ${typeName}`);\n        }\n        this._componentTypesMap.set(typeName, {\n            constructor: componentConstructor,\n            factoryFunction: undefined,\n            virtual,\n        });\n    }\n    /**\n     * Register a new component with the layout manager.\n     */\n    registerComponentFactoryFunction(typeName, componentFactoryFunction, virtual = false) {\n        if (typeof componentFactoryFunction !== 'function') {\n            throw new BindError('Please register a constructor function');\n        }\n        const existingComponentType = this._componentTypesMap.get(typeName);\n        if (existingComponentType !== undefined) {\n            throw new BindError(`${i18nStrings[3 /* ComponentIsAlreadyRegistered */]}: ${typeName}`);\n        }\n        this._componentTypesMap.set(typeName, {\n            constructor: undefined,\n            factoryFunction: componentFactoryFunction,\n            virtual,\n        });\n    }\n    /**\n     * Register a component function with the layout manager. This function should\n     * return a constructor for a component based on a config.\n     * This function will be called if a component type with the required name is not already registered.\n     * It is recommended that applications use the {@link (VirtualLayout:class).getComponentEvent} and\n     * {@link (VirtualLayout:class).releaseComponentEvent} instead of registering a constructor callback\n     * @deprecated use {@link (GoldenLayout:class).registerGetComponentConstructorCallback}\n     */\n    registerComponentFunction(callback) {\n        this.registerGetComponentConstructorCallback(callback);\n    }\n    /**\n     * Register a callback closure with the layout manager which supplies a Component Constructor.\n     * This callback should return a constructor for a component based on a config.\n     * This function will be called if a component type with the required name is not already registered.\n     * It is recommended that applications use the {@link (VirtualLayout:class).getComponentEvent} and\n     * {@link (VirtualLayout:class).releaseComponentEvent} instead of registering a constructor callback\n     */\n    registerGetComponentConstructorCallback(callback) {\n        if (typeof callback !== 'function') {\n            throw new Error('Please register a callback function');\n        }\n        if (this._getComponentConstructorFtn !== undefined) {\n            console.warn('Multiple component functions are being registered.  Only the final registered function will be used.');\n        }\n        this._getComponentConstructorFtn = callback;\n    }\n    getRegisteredComponentTypeNames() {\n        const typeNamesIterableIterator = this._componentTypesMap.keys();\n        return Array.from(typeNamesIterableIterator);\n    }\n    /**\n     * Returns a previously registered component instantiator.  Attempts to utilize registered\n     * component type by first, then falls back to the component constructor callback function (if registered).\n     * If neither gets an instantiator, then returns `undefined`.\n     * Note that `undefined` will return if config.componentType is not a string\n     *\n     * @param config - The item config\n     * @public\n     */\n    getComponentInstantiator(config) {\n        let instantiator;\n        const typeName = ResolvedComponentItemConfig.resolveComponentTypeName(config);\n        if (typeName !== undefined) {\n            instantiator = this._componentTypesMap.get(typeName);\n        }\n        if (instantiator === undefined) {\n            if (this._getComponentConstructorFtn !== undefined) {\n                instantiator = {\n                    constructor: this._getComponentConstructorFtn(config),\n                    factoryFunction: undefined,\n                    virtual: false,\n                };\n            }\n        }\n        return instantiator;\n    }\n    /** @internal */\n    bindComponent(container, itemConfig) {\n        let instantiator;\n        const typeName = ResolvedComponentItemConfig.resolveComponentTypeName(itemConfig);\n        if (typeName !== undefined) {\n            instantiator = this._componentTypesMap.get(typeName);\n        }\n        if (instantiator === undefined) {\n            if (this._getComponentConstructorFtn !== undefined) {\n                instantiator = {\n                    constructor: this._getComponentConstructorFtn(itemConfig),\n                    factoryFunction: undefined,\n                    virtual: false,\n                };\n            }\n        }\n        let result;\n        if (instantiator !== undefined) {\n            const virtual = instantiator.virtual;\n            // handle case where component is obtained by name or component constructor callback\n            let componentState;\n            if (itemConfig.componentState === undefined) {\n                componentState = undefined;\n            }\n            else {\n                // make copy\n                componentState = deepExtendValue({}, itemConfig.componentState);\n            }\n            let component;\n            const componentConstructor = instantiator.constructor;\n            if (componentConstructor !== undefined) {\n                component = new componentConstructor(container, componentState, virtual);\n            }\n            else {\n                const factoryFunction = instantiator.factoryFunction;\n                if (factoryFunction !== undefined) {\n                    component = factoryFunction(container, componentState, virtual);\n                }\n                else {\n                    throw new AssertError('LMBCFFU10008');\n                }\n            }\n            if (virtual) {\n                if (component === undefined) {\n                    throw new UnexpectedUndefinedError('GLBCVCU988774');\n                }\n                else {\n                    const virtuableComponent = component;\n                    const componentRootElement = virtuableComponent.rootHtmlElement;\n                    if (componentRootElement === undefined) {\n                        throw new BindError(`${i18nStrings[5 /* VirtualComponentDoesNotHaveRootHtmlElement */]}: ${typeName}`);\n                    }\n                    else {\n                        ensureElementPositionAbsolute(componentRootElement);\n                        this.container.appendChild(componentRootElement);\n                        this._virtuableComponentMap.set(container, virtuableComponent);\n                        container.virtualRectingRequiredEvent = this._containerVirtualRectingRequiredEventListener;\n                        container.virtualVisibilityChangeRequiredEvent = this._containerVirtualVisibilityChangeRequiredEventListener;\n                        container.virtualZIndexChangeRequiredEvent = this._containerVirtualZIndexChangeRequiredEventListener;\n                    }\n                }\n            }\n            this._registeredComponentMap.set(container, component);\n            result = {\n                virtual: instantiator.virtual,\n                component,\n            };\n        }\n        else {\n            // Use getComponentEvent\n            result = super.bindComponent(container, itemConfig);\n        }\n        return result;\n    }\n    /** @internal */\n    unbindComponent(container, virtual, component) {\n        const registeredComponent = this._registeredComponentMap.get(container);\n        if (registeredComponent === undefined) {\n            super.unbindComponent(container, virtual, component); // was not created from registration so use virtual unbind events\n        }\n        else {\n            const virtuableComponent = this._virtuableComponentMap.get(container);\n            if (virtuableComponent !== undefined) {\n                const componentRootElement = virtuableComponent.rootHtmlElement;\n                if (componentRootElement === undefined) {\n                    throw new AssertError('GLUC77743', container.title);\n                }\n                else {\n                    this.container.removeChild(componentRootElement);\n                    this._virtuableComponentMap.delete(container);\n                }\n            }\n        }\n    }\n    fireBeforeVirtualRectingEvent(count) {\n        this._goldenLayoutBoundingClientRect = this.container.getBoundingClientRect();\n        super.fireBeforeVirtualRectingEvent(count);\n    }\n    /** @internal */\n    handleContainerVirtualRectingRequiredEvent(container, width, height) {\n        const virtuableComponent = this._virtuableComponentMap.get(container);\n        if (virtuableComponent === undefined) {\n            throw new UnexpectedUndefinedError('GLHCSCE55933');\n        }\n        else {\n            const rootElement = virtuableComponent.rootHtmlElement;\n            if (rootElement === undefined) {\n                throw new BindError(i18nStrings[4 /* ComponentIsNotVirtuable */] + ' ' + container.title);\n            }\n            else {\n                const containerBoundingClientRect = container.element.getBoundingClientRect();\n                const left = containerBoundingClientRect.left - this._goldenLayoutBoundingClientRect.left;\n                rootElement.style.left = numberToPixels(left);\n                const top = containerBoundingClientRect.top - this._goldenLayoutBoundingClientRect.top;\n                rootElement.style.top = numberToPixels(top);\n                setElementWidth(rootElement, width);\n                setElementHeight(rootElement, height);\n            }\n        }\n    }\n    /** @internal */\n    handleContainerVirtualVisibilityChangeRequiredEvent(container, visible) {\n        const virtuableComponent = this._virtuableComponentMap.get(container);\n        if (virtuableComponent === undefined) {\n            throw new UnexpectedUndefinedError('GLHCVVCRE55934');\n        }\n        else {\n            const rootElement = virtuableComponent.rootHtmlElement;\n            if (rootElement === undefined) {\n                throw new BindError(i18nStrings[4 /* ComponentIsNotVirtuable */] + ' ' + container.title);\n            }\n            else {\n                setElementDisplayVisibility(rootElement, visible);\n            }\n        }\n    }\n    /** @internal */\n    handleContainerVirtualZIndexChangeRequiredEvent(container, logicalZIndex, defaultZIndex) {\n        const virtuableComponent = this._virtuableComponentMap.get(container);\n        if (virtuableComponent === undefined) {\n            throw new UnexpectedUndefinedError('GLHCVZICRE55935');\n        }\n        else {\n            const rootElement = virtuableComponent.rootHtmlElement;\n            if (rootElement === undefined) {\n                throw new BindError(i18nStrings[4 /* ComponentIsNotVirtuable */] + ' ' + container.title);\n            }\n            else {\n                rootElement.style.zIndex = defaultZIndex;\n            }\n        }\n    }\n}\n//# sourceMappingURL=golden-layout.js.map"],"names":["InternalError","Error","constructor","type","code","message","super","undefined","AssertError","UnreachableCaseError","variableValue","UnexpectedNullError","UnexpectedUndefinedError","ConfigMinifier","StyleConstants","WidthOrHeightPropertyName","Side","LogicalZIndex","keys","values","translateObject","from","minify","to","key","hasOwnProperty","translatedKey","minifyKey","unminifyKey","fromValue","translateValue","Array","isArray","length","i","translateArray","value","index","indexOfValue","toString","minifyValue","parseInt","substr","indexOfKey","checkInitialise","defaultComponentBaseZIndex","defaultComponentDragZIndex","defaultComponentStackMaximisedZIndex","width","height","top","left","right","bottom","base","drag","stackMaximised","LogicalZIndexToDefaultMap","JsonValue","ItemType","ResponsiveMode","ResolvedItemConfig","ResolvedHeaderedItemConfig","ResolvedStackItemConfig","ResolvedComponentItemConfig","ResolvedRowOrColumnItemConfig","ResolvedRootItemConfig","ResolvedGroundItemConfig","ResolvedLayoutConfig","ResolvedPopoutLayoutConfig","I18nStrings","numberToPixels","numberStr","replace","parseFloat","getElementWidth","element","offsetWidth","setElementWidth","widthAsPixels","style","getElementHeight","offsetHeight","setElementHeight","heightAsPixels","getElementWidthAndHeight","setElementDisplayVisibility","visible","display","deepExtend","target","obj","existingTarget","deepExtendValue","targetArray","valueObj","getUniqueId","Math","random","isJsonObject","isJson","ground","row","column","stack","component","none","always","onload","defaults","content","minWidth","minHeight","id","isClosable","createCopy","original","createDefault","isComponentItem","itemConfig","isStackItem","isGroundItem","Header","defaultMaximised","show","popout","close","maximise","minimise","tabDropdown","copyContent","count","result","defaultActiveItemIndex","maximised","activeItemIndex","header","defaultReorderEnabled","resolveComponentTypeName","componentType","reorderEnabled","title","componentState","copyComponentType","isChildItemConfig","config","isRootItemConfig","create","rootItemConfig","Settings","Dimensions","isPopout","constrainDragToContainer","popoutWholeStack","blockedPopoutsThrowError","closePopoutsOnUnload","responsiveMode","tabOverlapAllowance","reorderOnTabMenuClick","tabControlOffset","popInOnClose","borderWidth","borderGrabWidth","minItemHeight","minItemWidth","headerHeight","dragProxyWidth","dragProxyHeight","dock","root","openPopouts","dimensions","settings","resolved","copyOpenPopouts","minifyConfig","layoutConfig","unminifyConfig","minifiedConfig","Window","parentId","indexInParent","window","ExternalError","this","ConfigurationError","node","PopoutBlockedError","ApiError","BindError","initialised","infosObject","PopoutCannotBeCreatedWithGroundItemConfig","default","PleaseRegisterAConstructorFunction","ComponentTypeNotRegisteredAndBindComponentEventHandlerNotAssigned","ComponentIsAlreadyRegistered","ComponentIsNotVirtuable","VirtualComponentDoesNotHaveRootHtmlElement","ItemConfigIsNotTypeComponent","idCount","Object","infos","info","i18nStrings","ItemConfig","HeaderedItemConfig","StackItemConfig","ComponentItemConfig","RowOrColumnItemConfig","RootItemConfig","LayoutConfig","PopoutLayoutConfig","resolve","JSON","stringify","resolveContent","resolveId","isGround","isRow","isColumn","isStack","isComponent","hasHeaders","_a","resolveIdAndMaximised","legacyId","legacyMaximised","idx","findIndex","splice","childItemConfig","_b","_c","_d","_e","_f","_g","componentName","componentTypeToTitle","resolvedChildItemConfig","_h","_j","_k","labels","_l","_m","showPopoutIcon","popin","showMaximiseIcon","showCloseIcon","resolveOpenPopouts","fromResolved","copiedConfig","isResolved","configOrResolvedConfig","popoutConfigs","popoutConfig","EventEmitter","_allEventSubscriptions","_subscriptionsMap","Map","unbind","removeEventListener","trigger","emit","tryBubbleEvent","name","args","eventName","subcriptions","get","slice","subscription","emitAllEvent","emitUnknown","subs","emitBaseBubblingEvent","event","BubblingEvent","emitUnknownBubblingEvent","callback","unknownCallback","removeUnknownEventListener","off","addEventListener","addUnknownEventListener","on","ALL_EVENT","push","subscriptions","set","removeSubscription","indexOf","allEventSubscriptionsCount","unknownArgs","unshift","allEventSubcriptions","headerClickEventName","headerTouchStartEventName","_name","_target","_isPropagationStopped","origin","isPropagationStopped","stopPropagation","ClickBubblingEvent","_mouseEvent","mouseEvent","TouchStartBubblingEvent","_touchEvent","touchEvent","BrowserPopout","_config","_initialWindowSize","_layoutManager","_isInitialised","_popoutWindow","createWindow","toConfig","glInstanceConfig","getGlInstance","saveLayout","screenX","screenLeft","screenY","screenTop","__glInstance","getWindow","closeWindow","e","popIn","parentItem","copiedRoot","groundItem","getItemsByPopInParentId","contentItems","newContentItem","createAndInitContentItem","addChild","_onClose","url","createUrl","floor","features","serializeWindowFeatures","innerWidth","innerHeight","menubar","toolbar","location","personalbar","resizable","scrollbars","status","globalThis","open","positionWindow","passive","_checkReadyInterval","setInterval","checkReady","isInitialised","onInitialised","clearInterval","windowOptions","windowOptionsString","join","storageKey","localStorage","setItem","URL","href","searchParams","moveTo","focus","setTimeout","HeaderButton","_header","label","cssClass","_pushEvent","_clickEventListener","ev","onClick","_touchStartEventListener","onTouchStart","_element","document","createElement","classList","add","destroy","controlsContainerElement","appendChild","parentNode","removeChild","DragListener","_eElement","extraAllowableChildTargets","_pointerTracking","_pointerDownEventListener","onPointerDown","_pointerMoveEventListener","onPointerMove","_pointerUpEventListener","onPointerUp","_timeout","_allowableTargets","_oDocument","_eBody","body","_nDelay","_nDistance","_nX","_nY","_nOriginalX","_nOriginalY","_dragging","checkRemovePointerTrackingEventListeners","cancelDrag","processDragStop","oEvent","includes","isPrimary","coordinates","getPointerCoordinates","processPointerDown","x","y","startDrag","err","console","error","processDragMove","preventDefault","dragEvent","pageX","pageY","abs","clearTimeout","remove","querySelector","setProperty","Tab","_componentItem","_closeEvent","_focusEvent","_dragStartEvent","_isActive","_tabClickListener","onTabClickDown","_tabTouchStartListener","onTabTouchStart","_closeClickListener","onCloseClick","_closeTouchStartListener","onCloseTouchStart","_dragStartListener","onDragStart","_contentItemDestroyListener","onContentItemDestroy","_tabTitleChangedListener","setTitle","_titleElement","_closeElement","enableReorder","setTab","isActive","componentItem","contentItem","titleElement","closeElement","_dragListener","disableReorder","innerText","setActive","setBlurred","setFocused","button","notifyFocus","notifyClose","TabsContainer","_componentRemoveEvent","_componentFocusEvent","_componentDragStartEvent","_dropdownActiveChangedEvent","_tabs","_lastVisibleTabIndex","_dropdownActive","_dropdownElement","tabs","tabCount","lastVisibleTabIndex","dropdownElement","dropdownActive","createTab","tab","item","handleTabCloseEvent","handleTabFocusEvent","dragListener","handleTabDragStartEvent","insertAdjacentElement","removeTab","processActiveComponentChanged","newActiveComponentItem","activeIndex","activeTab","j","updateTabSizes","availableWidth","activeComponentItem","dropDownActive","tryUpdateTabSizes","cumulativeTabWidth","tabOverlapAllowanceExceeded","tabElement","parentElement","tabMarginRight","getComputedStyle","marginRight","visibleTabWidth","activeTabMarginRight","zIndex","marginLeft","overlap","showAdditionalTabsDropdown","hideAdditionalTabsDropdown","_parent","_configClosable","_getActiveComponentItemEvent","closeEvent","_popoutEvent","_maximiseToggleEvent","_clickEvent","_touchStartEvent","_clickListener","_touchStartListener","_rowColumnClosable","_closeButton","_popoutButton","_tabsContainer","handleTabInitiatedComponentRemoveEvent","handleTabInitiatedComponentFocusEvent","handleTabInitiatedDragStartEvent","processTabDropdownActiveChanged","_show","_popoutEnabled","popoutEnabled","_popoutLabel","popoutLabel","_maximiseEnabled","maximiseEnabled","_maximiseLabel","maximiseLabel","_minimiseEnabled","minimiseEnabled","_minimiseLabel","minimiseLabel","_closeEnabled","closeEnabled","_closeLabel","closeLabel","_tabDropdownEnabled","tabDropdownEnabled","_tabDropdownLabel","tabDropdownLabel","setSide","side","_canRemoveComponent","_controlsContainerElement","_documentMouseUpListener","_tabControlOffset","_tabDropdownButton","handleButtonPopoutEvent","_maximiseButton","handleButtonMaximiseToggleEvent","_side","leftRightSided","_leftRightSided","layoutManager","parent","tabsContainerElement","setRowColumnClosable","updateClosability","len","applyFocusedValue","processMaximised","setAttribute","processMinimised","notifyClick","notifyTouchStart","getJQueryOffset","rect","getBoundingClientRect","scrollTop","scrollLeft","ComponentContainer","_updateItemConfigEvent","_showEvent","_hideEvent","_blurEvent","_stackMaximised","_width","_height","_visible","_isShownWithZeroDimensions","_componentType","_isClosable","_initialState","_state","_boundComponent","bindComponent","updateElementPositionPropertyFromBoundComponent","virtual","_tab","isHidden","state","initialState","releaseComponent","stateRequestEvent","getElement","hide","suppressEvent","blur","setSize","ancestorItem","ancestorChildItem","direction","currentSize","percentage","delta","updateSize","replaceComponent","virtualVisibilityChangeRequiredEvent","virtualRectingRequiredEvent","fireBeforeVirtualRectingEvent","fireAfterVirtualRectingEvent","setBaseLogicalZIndex","getState","extendState","extendedState","setState","setVisibility","setSizeToNodeSize","emitShow","emitHide","setLogicalZIndex","logicalZIndex","_logicalZIndex","notifyVirtualZIndexChangeRequired","enterDragMode","exitDragMode","enterStackMaximised","exitStackMaximised","force","addVirtualSizedContainerToLayoutManager","checkShownFromZeroDimensions","notifyVirtualRectingRequired","virtualZIndexChangeRequiredEvent","defaultZIndex","position","beginVirtualSizedContainerAdding","addVirtualSizedContainer","endVirtualSizedContainerAdding","unbindComponent","ContentItem","_popInParentIds","_type","_id","_pendingEventPropagations","_throttledEvents","_contentItems","createContentItems","popInParentIds","static","keepChild","suspendResize","setParent","init","replaceChild","oldChild","newChild","destroyOldChild","browserPopout","createPopoutFromContentItem","calculateConfigContent","highlightDropZone","area","dropTargetIndicator","highlightArea","onDrop","beginSizeInvalidation","endSizeInvalidation","getElementArea","offset","x1","y1","x2","y2","surface","addPopInParentId","initContentItems","updateContentItemsSize","createContentItem","propagateEvent","scheduleEventPropagationToLayoutManager","requestAnimationFrame","propagateEventToLayoutManager","ComponentItem","_parentItem","_focused","_reorderEnabled","applyUpdatableConfig","_initialWantMaximise","containerElement","_container","handleUpdateItemConfigEvent","initialWantMaximise","container","headerConfig","_headerConfig","_title","focused","updateNodeSize","setActiveComponentItem","setFocusedComponentItem","ComponentParentableItem","arguments","setFocusedValue","Stack","_o","_p","_q","_r","_s","_t","_u","_headerSideChanged","_resizeListener","handleResize","_maximisedListener","handleMaximised","_minimisedListener","handleMinimised","layoutHeaderConfig","configContent","componentHeaderConfig","_initialActiveItemIndex","_maximisedEnabled","headerSettings","getActiveComponentItem","handlePopoutEvent","toggleMaximise","handleHeaderClickEvent","handleHeaderTouchStartEvent","handleHeaderComponentRemoveEvent","handleHeaderComponentFocusEvent","handleHeaderComponentStartDragEvent","_childElementContainer","setupHeaderPosition","childElementContainer","headerShow","headerSide","headerLeftRightSided","contentAreaDimensions","_contentAreaDimensions","isMaximised","maximisedStack","stackParent","contentItemCount","setActiveContentItem","suppressFocusEvent","_activeComponentItem","emitStateChangedEvent","getActiveContentItem","focusActiveContentItem","newComponent","newItem","addComponent","addItem","checkMinimiseMaximisedStack","resolvedItemConfig","stackWillBeDeleted","newActiveComponentIdx","setMaximisedStack","createHeaderConfig","_dropSegment","resetHeaderDropZone","_dropIndex","isVertical","isHorizontal","insertBefore","hasCorrectParent","dimension","rowOrColumn","segment","hoverArea","highlightHeaderDropZone","highlightBodyDropZone","getArea","headerArea","contentArea","contentWidth","contentHeight","positionHeader","tabsLength","headerOffset","elementHeight","tabTop","tabLeft","tabWidth","tabIndex","isAboveTab","tabDropPlaceholder","min","tabDropPlaceholderOffset","tabDropPlaceholderWidth","placeHolderTop","clientHeight","placeHolderLeft","bubblingEvent","startComponentDrag","DragProxy","_originalParent","_area","_lastValidArea","offsetX","offsetY","onDrag","createDragProxyElements","_componentItemFocused","setDimensions","determineMinMaxXY","constrainedPosition","getXYWithinMinMax","calculateItemAreas","setDropPosition","initialX","initialY","headerElement","tabsElement","_proxyContainerElement","_sided","insertAdjacentText","_minX","_minY","containerWidth","containerHeight","_maxX","_maxY","ceil","droppedComponentItem","Splitter","_isVertical","_size","grabSize","_grabSize","dragHandleElement","handleExcessSize","handleExcessPos","RowOrColumn","_rowOrColumnParent","_splitter","_splitterSize","_splitterGrabSize","_isColumn","_dimension","_splitterPosition","_splitterMinPosition","_splitterMaxPosition","_configType","createdItem","splitterElement","createSplitter","max","newItemSize","itemSize","splitterIndex","childItem","size","calculateRelativeSizes","setAbsoluteSizes","sizeData","calculateAbsoluteSizes","additionalPixel","itemSizes","totalWidth","totalHeight","totalSplitterSize","totalAssigned","total","itemsWithoutSetDimension","round","respectMinItemWidth","totalOverMin","totalUnderMin","entriesOverMin","allEntries","entry","reducePercent","remainingWidth","reducedWidth","splitter","onSplitterDrag","onSplitterDragStop","onSplitterDragStart","getItemsForSplitter","before","after","getMinimumDimensions","arr","horizontal","vertical","items","minSize","beforeMinDim","beforeMinSize","afterMinDim","afterMinSize","offsetPixels","sizeBefore","sizeAfter","splitterPositionInRange","totalRelativeSize","getElementDimensionSize","setElementDimensionSize","GroundItem","_containerElement","prev","previousSibling","lastChild","Element","contains","loadRoot","clearRoot","rootContentItem","loadComponentAsRoot","createSideAreas","oppositeSides","Area","sibling","validateDocking","getAllContentItems","deepGetAllContentItems","getConfigMaximisedItems","deepFilterContentItems","popInParentId","checkAcceptFtn","DragSource","_extraAllowableChildTargets","_componentTypeOrFtn","_componentState","_dummyGroundContainer","dummyRootItemConfig","_dummyGroundContentItem","createDragListener","removeDragListener","onDragStop","dragSourceItemConfig","dragProxy","transitionIndicator","transitionElements","DropTargetIndicator","innerElement","TransitionIndicator","_toElement","_fromDimensions","_totalAnimationDuration","_animationStartTime","fromElement","toElement","nextAnimationFrame","measure","EventHub","_childEventListener","childEvent","onEventFromChild","ChildEventName","emitUserBroadcast","handleUserBroadcastEvent","isSubWindow","propagateToParent","propagateToThisAndSubtree","detail","eventInit","bubbles","cancelable","CustomEvent","opener","dispatchEvent","childGl","eventHub","LayoutManager","parameters","resizeWithContainerAutomatically","resizeDebounceInterval","resizeDebounceExtendedWhenPossible","_groundItem","_openPopouts","_dropTargetIndicator","_transitionIndicator","_itemAreas","_maximisePlaceholder","createMaximisePlaceElement","_tabDropPlaceholder","createTabDropPlaceholderElement","_dragSources","_updatingColumnsResponsive","_firstLoad","_eventHub","_virtualSizedContainers","_virtualSizedContainerAddingBeginCount","_sizeInvalidationBeginCount","_resizeObserver","ResizeObserver","handleContainerResize","_windowUnloadListener","onUnload","_maximisedStackBeforeDestroyedListener","cleanupBeforeMaximisedStackDestroyed","_constructorOrSubWindowLayoutConfig","constructorOrSubWindowLayoutConfig","rootItem","focusedComponentItem","_focusedComponentItem","_maximisedStack","deprecatedConstructor","disconnect","checkClearResizeTimeout","dragSource","subWindowRootConfig","setContainer","updateSizeFromContainer","resolvedLayoutConfig","assign","checkLoadedLayoutMaximiseItem","bindEvents","adjustColumnsResponsive","loadLayout","createSubWindows","groundContent","reconcilePopoutWindows","clear","newComponentAtLocation","locationSelectors","addComponentAtLocation","addItemAtLocation","newItemAtLocation","defaultLocationSelectors","findFirstLocation","addIdx","updateRootSize","createContentItemFromConfig","findFirstComponentItemById","findFirstContentItemTypeByIdRecursive","createPopout","itemConfigOrContentItem","positionAndSize","createPopoutFromItemConfig","child","windowLeft","windowTop","offsetLeft","offsetTop","beforeVirtualRectingEvent","afterVirtualRectingEvent","popoutLayoutConfig","createPopoutFromPopoutLayoutConfig","configWindow","initialWindow","newDragSource","componentTypeOrItemConfigCallback","removeDragSource","array","removeFromArray","focusComponent","clearComponentFocus","suppressEvents","newFocusedParentItem","oldFocusedItem","oldFocusedParentItem","processMinimiseMaximisedStack","processMaximiseStack","matchingArea","smallestSurface","Infinity","allContentItems","stackContentAreaDimensions","groundArea","configMaximisedItems","prepend","closed","observe","processResizeWithDebounce","_resizeTimeoutId","bodyElement","documentElement","margin","padding","overflow","useResponsiveLayout","columnCount","stackColumnCount","allStacks","getAllStacks","firstStackContainer","addChildContentItemsToContainer","alwaysResponsiveMode","onLoadResponsiveModeAndFirst","stacks","findAllStacksRecursive","findFirstContentItemType","findFirstContentItemTypeRecursive","foundContentItem","selectors","selector","findLocation","selectorIndex","typeId","parentContentItems","parentContentItemCount","tryCreateLocationFromParentItem","groundContentItems","afterFocusedItemIfPossibleLocationSelectors","VirtualLayout","configOrOptionalContainer","containerOrBindComponentEventHandler","unbindComponentEventHandler","skipInit","createLayoutManagerConstructorParameters","_bindComponentEventHanlderPassedInConstructor","_creationTimeoutPassed","bindComponentEvent","unbindComponentEvent","readyState","clearHtmlAndAdjustStylesForSubWindow","headElement","head","appendNodeLists","querySelectorAll","listIdx","appendNodeList","nodeIdx","innerHTML","visibility","checkAddDefaultPopinButton","popInButtonElement","iconElement","bgElement","getComponentEvent","releaseComponentEvent","subWindowChecked","windowConfigKey","windowConfigStr","getItem","removeItem","minifiedWindowConfig","parse","resolvedConfig","HTMLElement","golden","_componentTypesMap","_registeredComponentMap","_virtuableComponentMap","_containerVirtualRectingRequiredEventListener","handleContainerVirtualRectingRequiredEvent","_containerVirtualVisibilityChangeRequiredEventListener","handleContainerVirtualVisibilityChangeRequiredEvent","_containerVirtualZIndexChangeRequiredEventListener","handleContainerVirtualZIndexChangeRequiredEvent","registerComponent","componentConstructorOrFactoryFtn","componentConstructor","registerComponentConstructor","componentFactoryFtn","registerComponentFactoryFunction","typeName","factoryFunction","componentFactoryFunction","registerComponentFunction","registerGetComponentConstructorCallback","_getComponentConstructorFtn","warn","getRegisteredComponentTypeNames","typeNamesIterableIterator","getComponentInstantiator","instantiator","virtuableComponent","componentRootElement","rootHtmlElement","absolutePosition","ensureElementPositionAbsolute","delete","_goldenLayoutBoundingClientRect","rootElement","containerBoundingClientRect","template"],"sourceRoot":""}