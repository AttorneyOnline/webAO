{"version":3,"file":"dom.5e412697d1f396c5504b.bundle.js","mappings":"qDAWAA,EAAA,QAHgB,SAAUC,EAAOC,GAC7BC,SAASC,OAAS,GAAGC,OAAOJ,EAAO,KAAKI,OAAOH,EACnD,C,GCTII,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaT,QAGrB,IAAIW,EAASL,EAAyBE,GAAY,CAGjDR,QAAS,CAAC,GAOX,OAHAY,EAAoBJ,GAAUG,EAAQA,EAAOX,QAASO,GAG/CI,EAAOX,OACf,CCrBAO,EAAoBM,EAAI,SAASb,EAASc,GACzC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEhB,EAASe,IAC5EE,OAAOC,eAAelB,EAASe,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAR,EAAoBS,EAAI,SAASK,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,E,UCStGI,OAAOC,gBAHA,YACLC,EAAAA,EAAAA,SAAU,YAAazB,SAAS0B,eAAe,mBAAmBC,OACnE,EASDJ,OAAOK,sBAHC,YACNH,EAAAA,EAAAA,SAAU,kBAAmBzB,SAAS0B,eAAe,yBAAyBC,OAC/E,EAUDJ,OAAOM,kBAHA,YACLJ,EAAAA,EAAAA,SAAU,cAAezB,SAAS0B,eAAe,qBAAqBC,OACvE,ECbDJ,OAAOO,aAPA,SAAsBC,GACvBA,EAAOC,UAAUC,SAAS,QAC5BF,EAAOG,UAAY,gBAEnBH,EAAOG,UAAY,oBAEtB,ECCDX,OAAOY,cARA,SAAuBC,GAC1B,IAAMC,EAAUrC,SAAS0B,eAAeU,GACV,SAA1BC,EAAQC,MAAMC,QACdF,EAAQC,MAAMC,QAAU,OAExBF,EAAQC,MAAMC,QAAU,OAE/B,C","sources":["webpack://webao/./webAO/utils/setCookie.ts","webpack://webao/webpack/bootstrap","webpack://webao/webpack/runtime/define property getters","webpack://webao/webpack/runtime/hasOwnProperty shorthand","webpack://webao/./webAO/dom/changeVolume.js","webpack://webao/./webAO/dom/toggleEffect.js","webpack://webao/./webAO/dom/toggleElement.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * set a cookie\n * the version from w3schools expects these to expire\n * @param {String} cname The name of the cookie to return\n * @param {any} value The value of that cookie option\n */\nvar setCookie = function (cname, value) {\n    document.cookie = \"\".concat(cname, \"=\").concat(value);\n};\nexports.default = setCookie;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","import setCookie from '../utils/setCookie';\n\n/**\n * Triggered by the sound effect volume slider.\n */\n\nexport function changeSFXVolume() {\n  setCookie('sfxVolume', document.getElementById('client_sfxaudio').volume);\n}\nwindow.changeSFXVolume = changeSFXVolume;\n\n/**\n * Triggered by the testimony volume slider.\n */\n export function changeTestimonyVolume() {\n  setCookie('testimonyVolume', document.getElementById('client_testimonyaudio').volume);\n}\nwindow.changeTestimonyVolume = changeTestimonyVolume;\n\n/**\n * Triggered by the shout volume slider.\n */\n\nexport function changeShoutVolume() {\n  setCookie('shoutVolume', document.getElementById('client_shoutaudio').volume);\n}\nwindow.changeShoutVolume = changeShoutVolume;\n","/**\n * Highlights and selects an effect for in-character chat.\n * If the same effect button is selected, then the effect is canceled.\n * @param {string} effect the new effect to be selected\n */\nexport function toggleEffect(button) {\n  if (button.classList.contains('dark')) {\n    button.className = 'client_button';\n  } else {\n    button.className = 'client_button dark';\n  }\n}\nwindow.toggleEffect = toggleEffect;\n","/**\n * Hides and shows any html element\n * @param {string} element_id the id of the element to toggle\n */\nexport function toggleElement(element_id) {\n    const element = document.getElementById(element_id);\n    if (element.style.display !== 'none') {\n        element.style.display = 'none';\n    } else {\n        element.style.display = 'block';\n    }\n}\nwindow.toggleElement = toggleElement;\n"],"names":["exports","cname","value","document","cookie","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","window","changeSFXVolume","setCookie","getElementById","volume","changeTestimonyVolume","changeShoutVolume","toggleEffect","button","classList","contains","className","toggleElement","element_id","element","style","display"],"sourceRoot":""}